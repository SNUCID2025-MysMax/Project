index,category_analysis,selected,test_no,command,command_english,connected_dievces,options,joi_gt,joi_pred_llama4:scout.dense,script_similarity_llama4:scout.dense,cloud_similarity_llama4:scout.dense,response_time_llama4:scout_dence [ms],joi_pred_english_Qwen2.5-Coder:7B,cloud_similarity_english_Qwen2.5-Coder:7B,script_similarity_english_Qwen2.5-Coder:7B,response_time_english_Qwen2.5-Coder:7B,joi_pred_Qwen2.5-Coder:7B,cloud_similarity_Qwen2.5-Coder:7B,script_similarity_Qwen2.5-Coder:7B,response_time_Qwen2.5-Coder:7B,joi_pred_english_gpt-4.1-mini,cloud_similarity_english_gpt-4.1-mini,script_similarity_english_gpt-4.1-mini,response_time_english_gpt-4.1-mini,joi_pred_gpt-4.1-mini,cloud_similarity_gpt-4.1-mini,script_similarity_gpt-4.1-mini,response_time_gpt-4.1-mini
1,1,1,0,사이렌을 울려줘.,Sound the siren.,"{
'GreenhouseA_alarm_left': {
    'category': 'Alarm',
    'tags': ['GreenhouseA', 'left', 'Alarm']
  },
  'GreenhouseA_alarm_right': {
    'category': 'Alarm',
    'tags': ['GreenhouseA', 'right', 'Alarm']
  },
  'GreenhouseA_alarm_center': {
    'category': 'Alarm',
    'tags': ['GreenhouseA', 'center', 'Alarm']
  },
  'GreenhouseA_alarm_entrance': {
    'category': 'Alarm',
    'tags': ['GreenhouseA', 'entrance', 'Alarm']
  },
  'GreenhouseA_alarm_exit': {
    'category': 'Alarm',
    'tags': ['GreenhouseA', 'exit', 'Alarm']
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Alarm).alarm_siren()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Sirens).sirens_activate()""}",0.49,0,0.8,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",1,0,1.969,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",1,0,2.781,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",1,0,1.659,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",1,0,1.749
2,1,1,0,사이렌을 울려줘.,Sound the siren.,"{ 'GreenhouseA_alarm_left': {'category': 'Siren', 'tags': ['GreenhouseA', 'left', 'Siren']}, 'GreenhouseA_alarm_right': {'category': 'Siren', 'tags': ['GreenhouseA', 'right', 'Siren']}, 'GreenhouseA_alarm_center': {'category': 'Siren', 'tags': ['GreenhouseA', 'center', 'Siren']}, 'GreenhouseA_alarm_entrance': {'category': 'Siren', 'tags': ['GreenhouseA', 'entrance', 'Siren']}, 'GreenhouseA_alarm_exit': {'category': 'Siren', 'tags': ['GreenhouseA', 'exit', 'Siren']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Siren).sirenMode_setSirenMode(\""siren\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Sirens).sirens_activate()""}",0.463,0,3,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Siren).switch_on()\n(#Siren).sirenMode_setSirenMode('siren')""}]",0.7,0,2.54,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Siren).switch_on()\n(#Siren).sirenMode_setSirenMode('siren')""}]",0.7,0,3.4,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Siren).switch_on()\n(#Siren).sirenMode_setSirenMode('siren')""}]",0.7,0,1.305,"[{'name': 'Sound the siren', 'cron': '', 'period': -1, 'code': '(#Siren).switch_on()\n(#Siren).sirenMode_setSirenMode(""siren"")'}]",0.7,0,2.038
3,1,1,0,경광등을 켜 줘.,Turn on the strobe.,"{ 'GreenhouseA_alarm_left': {'category': 'Alarm', 'tags': ['GreenhouseA', 'left', 'Alarm']}, 'GreenhouseA_alarm_center': {'category': 'Alarm', 'tags': ['GreenhouseA', 'center', 'Alarm']}, 'GreenhouseA_alarm_right': {'category': 'Alarm', 'tags': ['GreenhouseA', 'right', 'Alarm']}}
",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Alarm).alarm_strobe()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#AlarmLight).alarmLight_on()""}",0.48,0,4.8,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_strobe()'}]",1,0,1.967,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",0.5,0,2.855,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_strobe()'}]",1,0,1.918,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",0,0,1.869
4,1,1,0,경광등을 켜 줘.,Turn on the strobe.,"{ 'GreenhouseA_alarm_left': {'category': 'Siren', 'tags': ['GreenhouseA', 'left', 'Siren']}, 'GreenhouseA_alarm_right': {'category': 'Siren', 'tags': ['GreenhouseA', 'right', 'Siren']}, 'GreenhouseA_alarm_center': {'category': 'Siren', 'tags': ['GreenhouseA', 'center', 'Siren']}, 'GreenhouseA_alarm_entrance': {'category': 'Siren', 'tags': ['GreenhouseA', 'entrance', 'Siren']}, 'GreenhouseA_alarm_exit': {'category': 'Siren', 'tags': ['GreenhouseA', 'exit', 'Siren']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Siren).sirenMode_setSirenMode(\""strobe\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#AlarmLight).alarmLight_on()""}",0.429,0,50,[],0,0,1.976,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Siren).switch_on()'}]",0.4,0,2.788,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Siren).switch_on()\n(#Siren).sirenMode_setSirenMode(""strobe"")'}]",0.7,0,1.442,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Siren).switch_on()'}]",0,0,1.825
5,1,1,0,사이렌과 경광등을 동시에 켜 줘,Turn on the siren and the strobe at the same time,"{ 'GreenhouseA_alarm_left': {'category': 'Alarm', 'tags': ['GreenhouseA', 'left', 'Alarm']}, 'GreenhouseA_alarm_center': {'category': 'Alarm', 'tags': ['GreenhouseA', 'center', 'Alarm']}, 'GreenhouseA_alarm_right': {'category': 'Alarm', 'tags': ['GreenhouseA', 'right', 'Alarm']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Alarm).alarm_both()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Sirens).sirens_on()\\n(#FlashingLights).flashingLights_on()""}",0.485,0,43.4,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_both()'}]",1,0,1.963,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_both()\n(#Alarm).alarm_strobe()'}]",0.6,0,3.086,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_both()'}]",1,0,1.286,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Alarm).alarm_both()'}]",0.9,0,1.855
8,1,1,0,사이렌과 경광등을 둘 다 꺼 줘,Turn off both the siren and the strobe,"{ 'GreenhouseA_alarm_left': {'category': 'Siren', 'tags': ['GreenhouseA', 'left', 'Siren']}, 'GreenhouseA_alarm_right': {'category': 'Siren', 'tags': ['GreenhouseA', 'right', 'Siren']}, 'GreenhouseA_alarm_center': {'category': 'Siren', 'tags': ['GreenhouseA', 'center', 'Siren']}, 'GreenhouseA_alarm_entrance': {'category': 'Siren', 'tags': ['GreenhouseA', 'entrance', 'Siren']}, 'GreenhouseA_alarm_exit': {'category': 'Siren', 'tags': ['GreenhouseA', 'exit', 'Siren']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Siren).sirenMode_setSirenMode(\""off\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Sirens).sirens_stopSound()\\n(#FlashingLights).flashingLights_stopLight()""}",0.344,0,28.7,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Siren).sirenMode_setSirenMode('off')\n(#Siren).switch_off()""}]",0.7,0,3.622,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Siren).switch_off()\n(#left).switch_off()'}]",0.3,0,3.066,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Siren).sirenMode_setSirenMode(""off"")'}]",0.9,0,1.449,"[{'name': 'TurnOffSirenAndLight', 'cron': '', 'period': -1, 'code': 'all(#Siren).sirenMode_setSirenMode(""off"")\nall(#Siren).switch_off()'}]",0.6,0,2.296
9,2,1,0,재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the occupancy sensor is detected.,"{
  ""SectorA_OccupancySensor_1"": {
    ""category"": ""OccupancySensor"",
    ""tags"": [""SectorA"", ""OccupancySensor""]
  },
  ""SectorA_OccupancySensor_2"": {
    ""category"": ""OccupancySensor"",
    ""tags"": [""SectorA"", ""OccupancySensor""]
  },
  ""SectorA_OccupancySensor_3"": {
    ""category"": ""OccupancySensor"",
    ""tags"": [""SectorB"", ""OccupancySensor""] 
  },
  ""SectorA_OccupancySensor_4"": {
    ""category"": ""OccupancySensor"",
    ""tags"": [""SectorB"", ""OccupancySensor""] 
  },
  ""Alarm"": {
    ""category"": ""Alarm"",
    ""tags"": [""Alarm""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#OccupancySensor).presenceSensor_presence == \""present\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#OccupancySensor).occupancySensor_isOccupied == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.554,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#OccupancySensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,2.61,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#OccupancySensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.443,"[{'name': 'Sound alarm when occupancy detected', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#OccupancySensor).presenceSensor_presence == present) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,3.923,"[{'name': 'OccupancyAlarm', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#OccupancySensor).presenceSensor_presence == present) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,2.594
10,2,1,0,재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the occupancy sensor is detected.,"{
  ""SectorA_PresenceSensor_1"": {
    ""category"": ""PresenceSensor"",
    ""tags"": [""SectorA"", ""PresenceSensor""]
  },
  ""SectorA_PresenceSensor_2"": {
    ""category"": ""PresenceSensor"",
    ""tags"": [""SectorA"", ""PresenceSensor""]
  },
  ""SectorA_PresenceSensor_3"": {
    ""category"": ""PresenceSensor"",
    ""tags"": [""SectorB"", ""PresenceSensor""] 
  },
  ""SectorA_PresenceSensor_4"": {
    ""category"": ""PresenceSensor"",
    ""tags"": [""SectorB"", ""PresenceSensor""] 
  },
  ""Alarm"": {
    ""category"": ""Alarm"",
    ""tags"": [""Alarm""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#PresenceSensor).presenceSensor_presence == \""present\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#OccupancySensor).occupancySensor_isOccupied == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.45,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#PresenceSensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,2.622,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#PresenceSensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.457,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#PresenceSensor).presenceSensor_presence == present) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,1.32,"[{'name': 'SoundAlarmOnOccupancy', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#PresenceSensor).presenceSensor_presence == ""present"") {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,2.891
12,2,1,0,에어컨의 모드가 냉방 모드면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the air conditioner is in cooling mode., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#AirConditioner).airConditionerMode_airConditionerMode == \""cool\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditionerMode_mode ==""}",0.849,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""cool"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.846,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""cool"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,4.632,"[{'name': 'AirConditionerCoolingAlarmSiren', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""cool"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,2.655,"[{'name': 'SoundSirenWhenCooling', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""cool"") {\n  if (any(#Alarm).switch_switch == ""on"") {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren).switch_switch == ""on"") {\n    (#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.6,0,4.181
13,2,1,0,에어컨의 목표 온도가 30도면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the air conditioner's target temperature is 30 degrees., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#AirConditioner).airConditionerMode_targetTemperature == 30) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditioner_getTargetTemperature() == 30) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.933,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.95,0,3.871,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.95,0,4.664,"[{'name': 'AlarmIfACTemp30', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  }\n}'}]",0.8,0,1.888,"[{'name': 'AlarmWhenACTemp30', 'cron': '', 'period': -1, 'code': ""if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).sirenMode_setSirenMode('siren')\n  }\n}""}]",0.7,0,4.168
18,1,1,0,에어컨을 자동 모드로 설정해줘.,Set the air conditioner to auto mode.,"{ 'GreenhouseA_ac_left': {'category': 'AirConditioner', 'tags': ['GreenhouseA', 'left', 'AirConditioner']}, 'GreenhouseA_ac_right': {'category': 'AirConditioner', 'tags': ['GreenhouseA', 'right', 'AirConditioner']}, 'GreenhouseA_ac_center': {'category': 'AirConditioner', 'tags': ['GreenhouseA', 'center', 'AirConditioner']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#AirConditioner).airConditionerMode_setAirConditionerMode(\""auto\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#AirConditioner).airConditionerMode_setAutoMode()""}",0.862,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#AirConditioner).airConditionerMode_setAirConditionerMode('auto')""}]",1,0,2.403,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#AirConditioner).airConditionerMode_setAirConditionerMode('auto')""}]",1,0,3.213,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#AirConditioner).airConditionerMode_setAirConditionerMode('auto')""}]",1,0,1.102,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#AirConditioner).airConditionerMode_setAirConditionerMode(""auto"")'}]",1,0,2.657
38,1,1,0,알람을 꺼줘.,Turn off the alarm.,"{ 'GreenhouseA_alarm_exit': {'category': 'Alarm', 'tags': ['GreenhouseA', 'exit', 'Alarm']}, 'GreenhouseA_alarm_center': {'category': 'Alarm', 'tags': ['GreenhouseA', 'center', 'Alarm']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Alarm).alarm_off()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Alarm).alarmState_status ==""}",0.588,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_off()'}]",1,0,1.972,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_off()'}]",1,0,2.756,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_off()'}]",1,0,1.031,"[{'name': 'TurnOffAlarm', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_off()'}]",1,0,1.938
44,1,1,0,블라인드를 70 퍼센트로 설정해줘.,Set the blinds to 70 percent.,"{ 'GreenhouseA_blind_top': {'category': 'Blind', 'tags': ['GreenhouseA', 'top', 'Blind']}, 'GreenhouseA_blind_side': {'category': 'Blind', 'tags': ['GreenhouseA', 'side', 'Blind']}, 'GreenhouseA_blind_back': {'category': 'Blind', 'tags': ['GreenhouseA', 'back', 'Blind']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Blind).blindLevel_setBlindLevel(70)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Blind).blind_setPosition(0.7)""}",0.676,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Blind).blindLevel_setBlindLevel(70)'}]",1,0,2.251,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Blind).blindLevel_setBlindLevel(70)'}]",1,0,3.056,"[{'name': 'SetBlindsLevel', 'cron': '', 'period': -1, 'code': 'level = 70\n(#Blind).blindLevel_setBlindLevel(level)'}]",0.9,0,1.236,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'level = 70\n(#Blind).blindLevel_setBlindLevel(level)'}]",0.9,0,2.044
47,2,1,0,블라인드 움직임을 멈춰줘.,Stop blind movement.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Blind).blind_pause()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Blind).blindControl_isMoving == true) {\\n  (#Blind).blindControl_stopMoving()\\n""}",0.364,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Blind).blind_pause()'}]",1,0,2.492,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Blind).blind_pause()'}]",1,0,3.254,"[{'name': 'StopBlindMovement', 'cron': '', 'period': -1, 'code': 'all(#Blind).blind_pause()'}]",0.9,0,1.322,"[{'name': 'Stop blind movement', 'cron': '', 'period': -1, 'code': 'all(#Blind).blind_pause()'}]",0.9,0,2.248
54,2,1,0,버튼4가 위로 스와이프되었으면 알람의 사이렌을 울려줘.,"if button 4 is swiped up, sound the alarm's siren.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Buttonx4).buttonx4_button4 == \""swipe_up\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Button4).buttonEvent_type ==""}",0.738,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Buttonx4).buttonx4_button4 == ""swipe_up""\n(#Alarm).alarm_siren()'}]",0.8,0,3.507,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Buttonx4).buttonx4_button4 == ""swipe_up""\n(#Alarm).alarm_siren()'}]",0.8,0,4.338,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Buttonx4).buttonx4_button4 == swipe_up) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,1.795,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Buttonx4).buttonx4_button4 == swipe_up) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,4.228
59,1,1,0,10을 3으로 나눈 나머지를 구해.,Find the remainder of 10 divided by 3.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Calculator).calculator_mod(10, 3)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""10 % 3""}",0.114,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'result := (#Calculator).calculator_mod(10, 3)\n(#Speaker).mediaPlayback_speak(""The remainder of 10 divided by 3 is "" + result)'}]",0.6,0,3.738,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'result := (#Calculator).calculator_mod(10.0, 3.0)\n(#Speaker).mediaPlayback_speak(""The remainder of 10 divided by 3 is "" + result.toString())'}]",0.5,0,4.751,"[{'name': 'FindRemainder', 'cron': '', 'period': -1, 'code': 'result = (#Calculator).calculator_mod(10, 3)'}]",0.9,0,1.444,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'result = (#Calculator).calculator_mod(10,3)'}]",0.9,0,2.094
63,9,1,0,"가장 최근에 찍은 사진을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.","Send an email with the most recent photo as an attachment to 'test@example.com' with the subject line ""Photo"" and the content ""This is a photo"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""latest_photo = (#Camera).camera_image\n(#EmailProvider).emailProvider_sendMailWithFile(\""test@example.com\"", \""Photo\"", \""This is a photo.\"", latest_photo)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Email).email_sendMail(\\n""}",0.44,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMailWithFile(toAddress: ""test@example.com"", title: ""Photo"", text: ""This is a photo"", file: (#Camera).camera_image)'}]",0.9,0,3.775,"[{'name': 'Send Email with Photo', 'cron': '', 'period': -1, 'code': '(#Camera).camera_take() -> lastImage\n(#EmailProvider).emailProvider_sendMailWithFile(toAddress: ""test@example.com"", title: ""Photo"", text: ""This is a photo"", file: lastImage)'}]",0.7,0,5.023,"[{'name': 'SendPhotoEmail', 'cron': '', 'period': -1, 'code': 'image = (#Camera).camera_take()\n(#EmailProvider).emailProvider_sendMailWithFile(""test@example.com"", ""Photo"", ""This is a photo"", image)'}]",0.7,0,1.707,"[{'name': 'SendPhotoEmail', 'cron': '', 'period': -1, 'code': 'img = (#Camera).camera_take()\nif (img != null) {\n  (#EmailProvider).emailProvider_sendMailWithFile(""test@example.com"", ""Photo"", ""This is a photo"", img)\n} else {\n  (#EmailProvider).emailProvider_sendMail(""test@example.com"", ""Photo"", ""This is a photo"")\n}'}]",0.6,0,4.475
64,9,1,0,"가장 최근에 찍은 동영상을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '동영상'과 내용 '동영상입니다.'로 보내줘","Send an email with the most recent video as an attachment to 'test@example.com' with the subject line ""Video"" and the content ""This is a video.",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""latest_video = (#Camera).camera_video\n(#EmailProvider).emailProvider_sendMailWithFile(\""test@example.com\"", \""Video\"", \""This is a video.\"", latest_video)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Email).email_sendMail(\\n""}",0.44,0,,"[{'name': 'SendEmailWithAttachment', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMailWithFile(toAddress: ""test@example.com"", title: ""Video"", text: ""This is a video."", file: (#Recorder).audioRecord_recordStatus == ""recording"")'}]",0.4,0,4.156,"[{'name': 'SendEmailWithVideo', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMailWithFile(\n  toAddress: ""test@example.com"",\n  title: ""Video"",\n  text: ""This is a video."",\n  file: (#Camera).camera_video\n)'}]",0.9,0,5.118,"[{'name': 'SendRecentVideoEmail', 'cron': '', 'period': -1, 'code': 'videoData = (#Camera).camera_video\n(#EmailProvider).emailProvider_sendMailWithFile(""test@example.com"", ""Video"", ""This is a video."", videoData)'}]",0.9,0,1.751,"[{'name': 'SendRecentVideoEmail', 'cron': '', 'period': -1, 'code': 'file = (#Camera).camera_video\nif (file != null) {\n  (#EmailProvider).emailProvider_sendMailWithFile(""test@example.com"", ""Video"", ""This is a video."", file)\n} else {\n  (#Speaker).mediaPlayback_speak(""전송할 최근 동영상을 찾을 수 없습니다."")\n}'}]",0.6,0,4.195
69,1,1,0,카메라로 10초 동안 속도 2로 타임랩스 영상을 촬영해줘.,Take a time-lapse video with the camera at speed 2 for 10 seconds.,"{ 'GreenhouseA_cam_front': {'category': 'Camera', 'tags': ['GreenhouseA', 'front', 'Camera']}, 'GreenhouseA_cam_back': {'category': 'Camera', 'tags': ['GreenhouseA', 'back', 'Camera']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Camera).camera_takeTimelapse(10, 2)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Camera).camera_startTimelapse(20000""}",0.857,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_takeTimelapse(duration: 10.0, speed: 2.0)'}]",0.95,0,2.579,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_takeTimelapse(duration: 10.0, speed: 2.0)'}]",0.95,0,3.413,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'duration = 10.0\nspeed = 2.0\n(#Camera).camera_takeTimelapse(duration, speed)'}]",0.9,0,1.246,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_takeTimelapse(10.0, 2.0)'}]",0.9,0,2.453
82,2,1,0,지금이 오후 3시 15분이면 알람의 사이렌을 울려줘.,"If it's 3:15pm, blare the siren on the alarm.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Clock).clock_time == 1515) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": ""15 15 * * *"", ""period"": ""-1"", ""code"": ""(#Alarm).alarm_siren_on()""}",0.557,0,,"[{'name': 'Scenario1', 'cron': '0 15 * * *', 'period': -1, 'code': 'if (clock_time == 1515) {\n  (#Alarm).alarm_siren()\n}'}]",0.8,0,3.51,"[{'name': 'Scenario1', 'cron': '0 15 * * *', 'period': -1, 'code': 'if (clock_time == 1515) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,4.25,"[{'name': 'AlarmSirenAtThreeFifteen', 'cron': '15 15 * * *', 'period': -1, 'code': '(#Alarm).alarm_siren()'}]",0.8,0,1.453,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'if (((#Clock).clock_hour == 15) and ((#Clock).clock_minute == 15)) {\n  (#Alarm).alarm_siren()\n} else {\n  (#Alarm).alarm_off()\n}'}]",0.8,0,2.846
85,2,1,0,올해가 2025년이면 알람의 사이렌을 울려줘.,"If the year is 2025, sound the alarm siren.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Clock).clock_year == 2025) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if (2025 - (#CurrentTime).currentTime_getFullYear() == 0) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.493,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Clock).clock_year == 2025) {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.19,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Clock).clock_year == 2025) {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.932,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""if ((#Clock).clock_year == 2025) {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode('siren')\n  }\n}""}]",0.7,0,2.153,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Clock).clock_year == 2025) {\n  if (any(#Alarm)) {\n    if (any(#Alarm).alarm_alarm != \'siren\') {\n      all(#Alarm).alarm_siren()\n    }\n  } else {\n    (#Speaker).mediaPlayback_speak(""사이렌을 울리는 경보 장치가 없습니다."")\n  }\n}'}]",0.6,0,4.27
86,4,1,0,1시간 20분 30초 뒤에 알람의 사이렌을 울려줘,"Sound the alarm's siren in 1 hour, 20 minutes, 30 seconds",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Clock).clock_delay(4830000)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Alarm).alarmControl_soundAlarm()\\n  (#clock).clock_delay(4818000)""}",0.512,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Clock).clock_delay(4200)\n(#Alarm).alarm_siren()'}]",0.2,0,3.826,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Clock).clock_delay(ms: 3600230)\n(#Alarm).alarm_siren()'}]",0.4,0,7.122,"[{'name': 'DelayedAlarmSiren', 'cron': '', 'period': -1, 'code': 'hour = 1\nminute = 20\nsecond = 30\ntotalSeconds = hour * 3600 + minute * 60 + second\n(#Timer).timer_set(""AlarmDelay"", totalSeconds)\n(#Timer).timer_start(""AlarmDelay"")\nwait until((#Timer).timer_isSet(""AlarmDelay"") == false)\n(#Alarm).alarm_siren()'}]",0.5,0,2.514,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#Clock).clock_delay(4830000))\n(#Alarm).alarm_siren()'}]",0.5,0,2.945
87,2,1,0,접촉 센서가 접촉되어 있으면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the contact sensor is in contact.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#ContactSensor).contactSensor_contact == \""closed\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#ContactSensor).contactSensor_isContacted == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.683,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#ContactSensor).contactSensor_contact == ""closed"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.094,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#ContactSensor).contactSensor_contact == ""closed"")\n(#Siren).sirenMode_setSirenMode(""siren"")\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#ContactSensor).contactSensor_contact == ""open"")\n(#Siren).sirenMode_setSirenMode(""off"")'}]",0.5,0,5.771,"[{'name': 'Sound alarm siren if contact sensor is contacted', 'cron': '', 'period': -1, 'code': ""if ((#ContactSensor).contactSensor_contact == closed) {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).sirenMode_setSirenMode('siren')\n  }\n}""}]",0.7,0,2.726,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#ContactSensor).contactSensor_contact == ""closed"") {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).switch_on()\n    (#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.6,0,3.161
108,9,1,0,이메일을 'test@example.com' 주소로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.,"Send an email to 'test@example.com' with the subject line ""Alert"" and the content ""This is an emergency"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#EmailProvider).emailProvider_sendMail(\""test@example.com\"", \""Alert\"", \""This is an emergency.\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Email).email_sendEmail(""}",0.708,0,,"[{'name': 'SendEmailAlert', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(toAddress: ""test@example.com"", title: ""Alert"", text: ""This is an emergency"")'}]",0.95,0,3.43,"[{'name': 'SendEmail', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""test@example.com"", ""Alert"", ""This is an emergency"")'}]",0.95,0,4.539,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""test@example.com"", ""Alert"", ""This is an emergency"")'}]",0.9,0,1.697,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""test@example.com"", ""Alert"", ""This is an emergency"")'}]",0.9,0,2.249
127,3,1,0,가스 밸브가 열려 있으면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the gas valve is open., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#GasValve).valve_valve == \""open\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#GasValve).gasValve_isOpen == true) {\\n  (#Alarm).alarm_sirenOn()\\n""}",0.5,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#GasValve).valve_valve == ""open"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.579,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#GasValve).valve_valve == ""open"") {\n  (#Siren).switch_on()\n  (#Siren).sirenMode_setSirenMode(""siren"")\n}'}]",0.7,0,6.897,"[{'name': 'Sound alarm if gas valve is open', 'cron': '', 'period': -1, 'code': 'if ((#GasValve).valve_valve == ""open"") {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).switch_on()\n    (#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.7,0,2.663,"[{'name': 'Sound siren if gas valve open', 'cron': '', 'period': -1, 'code': ""if ((#GasValve).valve_valve == open) {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).sirenMode_setSirenMode('siren')\n  }\n}""}]",0.6,0,3.635
148,1,1,0,관개 장치의 급수를 시작해줘.,Start watering the irrigator.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Irrigator).irrigatorOperatingState_startWatering()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Irrigator).irrigatorOperatingState_startWatering()""}",1,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Irrigator).irrigatorOperatingState_startWatering()'}]",1,0,3.054,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Irrigator).switch_on()'}]",0.6,0,3.992,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Irrigator).irrigatorOperatingState_startWatering()'}]",1,0,1.477,"[{'name': 'StartIrrigationWatering', 'cron': '', 'period': -1, 'code': '(#Irrigator).irrigatorOperatingState_startWatering()'}]",1,0,2.404
149,2,1,0,누수가 감지되면 알람의 사이렌을 울려줘.,Sound the alarm's siren if a leak is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#LeakSensor).leakSensor_leakage == \""detected\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#LeakDetector).leakDetector_isLeaking == true) {\\n  (#Alarm).alarm_sirenOn()\\n""}",0.5,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#LeakSensor).leakSensor_leakage == ""detected"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#LeakSensor).leakSensor_leakage == ""not_detected"")\n(#Alarm).alarm_off()'}]",0.6,0,4.748,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#LeakSensor).leakSensor_leakage == ""detected"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#LeakSensor).leakSensor_leakage == ""not_detected"")\n(#Alarm).alarm_off()'}]",0.5,0,5.898,"[{'name': 'LeakAlarmSiren', 'cron': '', 'period': -1, 'code': 'if ((#LeakSensor).leakSensor_leakage == detected) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,1.626,"[{'name': 'LeakDetectedAlarm', 'cron': '', 'period': -1, 'code': 'if (any(#LeakSensor).leakSensor_leakage == ""detected"") {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.6,0,3.682
154,1,1,0,조명을 빨간색으로 설정해줘.,Set the light to red.,"{ 'GreenhouseA_light_left_top_1': {'category': 'Light', 'tags': ['GreenhouseA', 'left_top', 'Light']}, 'GreenhouseA_light_center_1': {'category': 'Light', 'tags': ['GreenhouseA', 'center', 'Light']}}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Light).colorControl_setColor(\""255|0|0\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Light).lightSetting_setColor(""}",0.677,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).colorControl_setColor(""RED|0|0"")'}]",0.5,0,2.3,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).colorControl_setColor(""RED"")'}]",0.7,0,2.974,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).colorControl_setColor(""255|0|0"")'}]",1,0,0.974,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).colorControl_setColor(""255|0|0"")'}]",1,0,1.992
157,1,1,0,5의 속도로 조명의 밝기를 80으로 설정해줘.,Set the brightness of the light to 80 with a speed of 5.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Light).switchLevel_setLevel(80, 5)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Light).light_brightnessSet(80""}",0.508,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switchLevel_setLevel(80, 5)'}]",1,0,3.035,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switchLevel_setLevel(80, 5)'}]",1,0,6.369,"[{'name': 'SetLightBrightness', 'cron': '', 'period': -1, 'code': 'level = 80\nrate = 5\n(#Light).switchLevel_setLevel(level, rate)'}]",0.9,0,1.801,"[{'name': 'SetLightBrightness', 'cron': '', 'period': -1, 'code': 'level = 80\nspeed = 5\n(#Light).switchLevel_setLevel(level, speed)'}]",0.9,0,2.403
161,1,1,0,조명의 전원을 토글해줘.,Toggle the power of the light.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Light).switch_toggle()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).switch_switch ==""}",0.667,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switch_toggle()'}]",1,0,2.599,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switch_toggle()'}]",1,0,3.345,"[{'name': 'ToggleLightPower', 'cron': '', 'period': -1, 'code': '(#Light).switch_toggle()'}]",1,0,1.403,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switch_toggle()'}]",1,0,2.227
166,2,1,0,모션 센서가 활성 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the motion sensor is active.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#MotionSensor).motionSensor_motion == \""active\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#MotionSensor).motionDetection_isMotionDetected == true) {\\n  (#Alarm).alarmControl_soundAlarm()\\n""}",0.519,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.11,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#MotionSensor).motionSensor_motion == ""active"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.796,"[{'name': 'MotionSensor Alarm Siren', 'cron': '', 'period': 1000, 'code': 'triggered := false\nif ((#MotionSensor).motionSensor_motion == active) {\n  if (triggered == false) {\n    all(#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,2.458,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.6,0,3.399
167,2,1,0,움직임이 감지되고 있으면 알람의 사이렌을 울려줘.,Sound the alarm's siren if motion is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#MotionSensor).motionSensor_motion == \""active\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#MotionDetector).motionDetection_isMotionDetected == true) {\\n  (#Alarm).alarmControl_soundAlarm()\\n""}",0.467,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#MotionSensor).motionSensor_motion == ""active""\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until(#MotionSensor).motionSensor_motion == ""inactive""\n(#Alarm).alarm_off()'}]",0.6,0,4.295,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#MotionSensor).motionSensor_motion == ""active"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#MotionSensor).motionSensor_motion == ""inactive"")\n(#Alarm).alarm_off()'}]",0.5,0,5.163,"[{'name': 'SoundSirenOnMotion', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,2.37,"[{'name': 'SoundAlarmOnMotion', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false) {\n    if (any(#Alarm)) {\n      all(#Alarm).alarm_siren()\n    } else if (any(#Siren)) {\n      all(#Siren).switch_on()\n      all(#Siren).sirenMode_setSirenMode(""siren"")\n    }\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,3.568
168,2,1,0,존재 감지 센서가 감지 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if a presence sensor is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#PresenceSensor).presenceSensor_presence == \""present\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#PresenceSensor).presenceSensor_isPresent == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.683,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#PresenceSensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.029,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#PresenceSensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#PresenceSensor).presenceSensor_presence == ""not_present"")\n(#Alarm).alarm_off()'}]",0.5,0,5.308,"[{'name': 'Sound alarm siren on presence detected', 'cron': '', 'period': -1, 'code': 'if (any(#PresenceSensor).presenceSensor_presence == present) {\n  if (any(#Alarm).alarm_alarm != siren) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren).switch_switch != on or any(#Siren).sirenMode_sirenMode != siren) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(siren)\n  }\n}'}]",0.7,0,3.09,"[{'name': 'SoundAlarmOnPresenceDetected', 'cron': '', 'period': -1, 'code': 'if (any(#PresenceSensor).presenceSensor_presence == present) {\n  all(#Alarm).alarm_siren()\n}'}]",0.8,0,2.357
173,2,1,0,펌프가 열려있으면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the pump is open.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Pump).pump_pump == \""open\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Pump).pump_isOpen == true) {\\n  (#Alarm).alarm_sound()\\n""}",0.5,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Pump).pump_pump == ""open"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.459,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Pump).pump_pump == ""open"") {\n  (#Siren).switch_on()\n  (#Siren).sirenMode_setSirenMode(""siren"")\n}'}]",0.7,0,4.863,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Pump).pump_pump == open) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,2.443,"[{'name': 'Pump Open Alarm', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Pump).pump_pump == open) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,3.117
215,2,1,0,연기 감지기에서 연기가 감지되면 알람의 사이렌을 울려줘.,Sound the alarm's siren if smoke is detected by the smoke detector.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#SmokeDetector).smokeDetector_smoke == \""detected\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#SmokeDetector).smokeDetector_isSmokeDetected == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.656,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#SmokeDetector).smokeDetector_smoke == ""detected"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#SmokeDetector).smokeDetector_smoke == ""tested"")\n(#Alarm).alarm_off()'}]",0.6,0,4.71,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#SmokeDetector).smokeDetector_smoke == ""detected"")\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#SmokeDetector).smokeDetector_smoke == ""clear"")\n(#Alarm).alarm_off()'}]",0.5,0,5.451,"[{'name': 'Smoke Alarm Siren', 'cron': '', 'period': -1, 'code': 'if ((#SmokeDetector).smokeDetector_smoke == detected) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,1.763,"[{'name': 'SmokeAlarmSiren', 'cron': '', 'period': -1, 'code': 'if ((#SmokeDetector).smokeDetector_smoke == detected) {\n  if (any(#Alarm).alarm_alarm != siren) {\n    any(#Alarm).alarm_siren()\n  }\n}'}]",0.6,0,2.601
229,1,1,0,스피커에서 music.mp3를 재생해줘.,Play 'music.mp3' on the speaker.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Speaker).mediaPlayback_play(\""music.mp3\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Speaker).speaker_playMedia(""}",0.678,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Speaker).mediaPlayback_play(""music.mp3"")'}]",1,0,2.782,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Speaker).mediaPlayback_play(""music.mp3"")'}]",1,0,3.632,"[{'name': 'PlayMusicOnSpeaker', 'cron': '', 'period': -1, 'code': '(#Speaker).mediaPlayback_play(""music.mp3"")'}]",1,0,1.167,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Speaker).mediaPlayback_play(""music.mp3"")'}]",1,0,2.255
236,1,1,0,녹음기로 10초 동안 녹음해서 test.wav로 저장해줘.,Record 10 seconds with a recorder and save it as test.wav.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Recorder).audioRecord_record(\""test.wav\"", 10)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#AudioRecorder).audioRecorder_startRecording(""}",0.805,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Recorder).audioRecord_record(""test.wav"", 10.0)'}]",0.95,0,3.029,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Recorder).audioRecord_record(""test.wav"", 10.0)'}]",0.95,0,3.795,"[{'name': 'RecordAudio', 'cron': '', 'period': -1, 'code': '(#Recorder).audioRecord_record(""test.wav"", 10.0)'}]",0.9,0,1.311,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Recorder).audioRecord_record(""test.wav"", 10.0)'}]",0.9,0,2.411
258,2,1,0,현재 실내 온도가 25도 이상이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the current room temperature is above 25 degrees.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#TemperatureSensor).temperatureMeasurement_temperature >= 25) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Thermometer).thermometer_temperature >= 25.0) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.744,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,3.354,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,4.09,"[{'name': 'AlarmSirenOnHighTemp', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (temp > 25.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.8,0,1.658,"[{'name': 'SoundAlarmIfHot', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (temp > 25.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.8,0,2.464
262,3,1,0,바깥 습도가 80퍼센트 이상이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the humidity outside is above 80 percent., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#WeatherProvider).weatherProvider_humidityWeather >= 80) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#OutdoorHumiditySensor).outdoorHumidityMeasurement_humidity >= 80.0) {\\n  (#Alarm).alarmControl_sirenOn()\\n""}",0.588,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.7,0,3.591,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#WeatherProvider).weatherProvider_humidityWeather > 80.0)\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#WeatherProvider).weatherProvider_humidityWeather <= 80.0)\n(#Alarm).alarm_off()'}]",0.5,0,5.852,"[{'name': 'High Outdoor Humidity Alarm', 'cron': '', 'period': -1, 'code': 'if ((#WeatherProvider).weatherProvider_humidityWeather > 80.0) {\n  (#Alarm).alarm_siren()\n}'}]",0.8,0,1.644,"[{'name': 'SoundAlarmWhenHighHumidity', 'cron': '', 'period': 1000, 'code': 'if ((#WeatherProvider).weatherProvider_humidityWeather > 80.0) {\n  if (any(#Alarm).alarm_alarm != ""siren"") {\n    all(#Alarm).alarm_siren()\n  }\n}'}]",0.6,0,2.975
264,3,1,0,바깥의 초미세먼지 농도가 50 이상이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if the outside fine particulate matter concentration is above 50., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#WeatherProvider).weatherProvider_pm25Weather >= 50) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirQualitySensor).airQualitySensor_ultraFineDust > 50) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.549,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#AirQualityDetector).dustSensor_dustLevel > 50)\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#AirQualityDetector).dustSensor_dustLevel <= 50)\n(#Alarm).alarm_off()'}]",0.5,0,5.15,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#AirQualityDetector).dustSensor_dustLevel > 50)\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#AirQualityDetector).dustSensor_dustLevel <= 50)\n(#Alarm).alarm_off()'}]",0.4,0,5.717,"[{'name': 'AlarmOnFineParticulateAbove50', 'cron': '', 'period': 0, 'code': ""if ((#WeatherProvider).weatherProvider_pm25Weather > 50.0) {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode('siren')\n  }\n}""}]",0.7,0,4.244,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirQualityDetector).dustSensor_dustLevel > 50) {\n  (#Alarm).alarm_siren()\n}'}]",0.5,0,2.354
269,3,1,0,창문이 열린 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if a window is open., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Window).windowControl_window == \""open\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowState_isOpen == true) {\\n  (#Alarm).alarmControl_soundAlarm()\\n""}",0.527,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,3.434,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  (#Alarm).alarm_siren()\n}'}]",1,0,4.18,"[{'name': 'AlarmSirenIfWindowOpen', 'cron': '', 'period': -1, 'code': 'if (any(#Window).windowControl_window == ""open"") {\n  if (any(#Alarm).alarm_alarm == ""siren"") {\n  } else if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}'}]",0.7,0,3.044,"[{'name': 'WindowOpenAlarm', 'cron': '', 'period': 1000, 'code': 'triggered := false\nif (any(#Window).windowControl_window == open) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n  (#Alarm).alarm_off()\n}'}]",0.5,0,3.011
272,2,1,0,낙상 감지 센서에서 낙상이 감지된 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if a fall is detected by the fall detection sensor.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#FallDetector).fallDetection_fall == \""fall\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#FallDetectionSensor).fallDetection_isFallen == true) {\\n  (#Alarm).alarm_sirenOn()\\n""}",0.628,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#FallDetector).fallDetection_fall == ""fall"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.075,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#FallDetector).fallDetection_fall == ""fall"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.884,"[{'name': 'FallDetectionAlarm', 'cron': '', 'period': -1, 'code': 'if ((#FallDetector).fallDetection_fall == fall) {\n  if (any(#Alarm).alarm_alarm != siren) {\n    if (any(#Alarm)) {\n      all(#Alarm).alarm_siren()\n    } else if (any(#Siren)) {\n      all(#Siren).switch_on()\n      all(#Siren).sirenMode_setSirenMode(siren)\n    }\n  }\n}'}]",0.7,0,3.828,"[{'name': 'FallDetectionAlarm', 'cron': '', 'period': -1, 'code': 'if ((#FallDetector).fallDetection_fall == fall) {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(siren)\n  }\n}'}]",0.6,0,3.151
273,2,1,0,점유 센서가 감지 상태이면 알람의 사이렌을 울려줘.,Sound the alarm's siren if an occupancy sensor is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#OccupancySensor).presenceSensor_presence == \""present\"") {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#OccupancySensor).occupancySensor_occupancy == true) {\\n  (#Alarm).alarm_siren_on()\\n""}",0.558,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#OccupancySensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.8,0,3.094,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#OccupancySensor).presenceSensor_presence == ""present""\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until(#OccupancySensor).presenceSensor_presence == ""not_present""\n(#Alarm).alarm_off()'}]",0.5,0,5.217,"[{'name': 'Sound alarm on occupancy detected', 'cron': '', 'period': 100, 'code': 'triggered := false\nif (any(#OccupancySensor).presenceSensor_presence == present) {\n  if (triggered == false) {\n    all(#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,1.857,"[{'name': 'OccupancyAlarm', 'cron': '', 'period': -1, 'code': 'if ((#OccupancySensor).presenceSensor_presence == present) {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,2.542
278,1,1,0,테스트 타이머라는 이름의 60초 길이의 타이머를 추가해줘.,Add a 60-second timer named Test Timer.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Timer).timer_add(\""Test Timer\"", 60)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Timer).timer_addTimer(""}",0.884,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Timer).timer_add(name: ""Test Timer"", timeout: 60.0)'}]",0.95,0,3.165,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Timer).timer_add(name: ""Test Timer"", timeout: 60.0)'}]",0.95,0,3.903,"[{'name': 'AddTestTimer', 'cron': '', 'period': -1, 'code': '(#Timer).timer_add(""Test Timer"", 60)'}]",1,0,2.132,"[{'name': 'AddTestTimer', 'cron': '', 'period': -1, 'code': '(#Timer).timer_add(""Test Timer"", 60.0)'}]",0.9,0,2.277
284,5,1,1,토양 수분이 30% 이하이고 조명이 꺼져 있으면 관개 장치를 작동시키고 조명을 켜 줘.,"If the soil moisture is below 30% and the lights are off, turn on the irrigator and the light.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0) and ((#Light).switch_switch == \""off\"")) {\n  (#Irrigator).switch_on()\n  (#Light).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0 && (#Light).switch_switch ==""}",0.958,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) and ((#Light).switch_switch == ""off"") {\n  (#Irrigator).switch_on()\n  (#Light).switch_on()\n}'}]",0.9,0,4.905,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) and ((#Light).switch_switch == ""off"") {\n  (#Irrigator).switch_on()\n  (#Light).switch_on()\n}'}]",0.9,0,5.633,"[{'name': 'SoilMoistureBelow30AndLightOff', 'cron': '', 'period': -1, 'code': 'soilMoisture = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nlightSwitch = (#Light).switch_switch\nif ((soilMoisture < 30.0) and (lightSwitch == ""off"")) {\n  (#Irrigator).switch_on()\n  (#Light).switch_on()\n}'}]",0.8,0,2.375,"[{'name': 'IrrigationOnDrySoilWithLights', 'cron': '', 'period': -1, 'code': 'soilMoisture = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nlightSwitch = (#Light).switch_switch\nif ((soilMoisture < 30.0) and (lightSwitch == ""off"")) {\n  (#Irrigator).switch_on()\n  (#Light).switch_on()\n}'}]",0.8,0,3.434
285,2,1,1,온도가 33도 이상이면 제습기를 켜고 커튼을 닫아 줘.,"If the temperature is above 33 degrees, turn on the dehumidifier and close the curtains.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#TemperatureSensor).temperatureMeasurement_temperature >= 33.0) {\n  (#Dehumidifier).switch_on()\n  (#Curtain).curtain_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TemperatureSensor).temperature >= 33.0) {\\n  (#Dehumidifier).dehumidifierOn()\\n  (#Curtain).curtainClose()\\n""}",0.784,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 33.0) {\n  (#Dehumidifier).switch_on()\n  (#Curtain).curtain_close()\n}'}]",0.9,0,4.093,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 33.0) {\n  (#Dehumidifier).switch_on()\n  (#Curtain).curtain_close()\n}'}]",0.9,0,4.857,"[{'name': 'HighTempDehumidifierCurtain', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (temp > 33.0) {\n  (#Dehumidifier).switch_on()\n  (#Curtain).curtain_close()\n}'}]",0.8,0,2.01,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 33.0) {\n  (#Dehumidifier).switch_on()\n  (#Curtain).curtain_close()\n}'}]",0.8,0,2.431
286,5,1,1,이산화탄소가 1000ppm 이상이고 블라인드가 열려 있으면 환풍기를 켜고 블라인드를 닫아 줘.,"If the carbon dioxide is above 1000 ppm and the blinds are open, turn on the fan and close the blinds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide >= 1000.0) and ((#Blind).blind_blind == \""open\"")) {\n  (#Fan).switch_on()\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#CarbonDioxideSensor).carbonDioxideConcentration >= 1000) {\\n  if ((#Blind).blindState ==""}",0.62,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#Blind).blind_blind == ""open"") {\n  (#Fan).fanControl_setFanSpeed(100)\n  (#Blind).blind_close()\n}'}]",0.7,0,5.033,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#Blind).blind_blind == ""open"") {\n  (#Fan).fanControl_setFanSpeed(100)\n  (#Blind).blind_close()\n}'}]",0.8,0,5.784,"[{'name': 'CO2 Alert with Blinds Control', 'cron': '', 'period': 1000, 'code': 'triggered := false\nco2 = (#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide\nblindsOpen = (#Blind).blind_blind == ""open""\nif ((co2 > 1000.0) and (blindsOpen == true)) {\n  if (triggered == false) {\n    (#Fan).switch_on()\n    (#Blind).blind_close()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,3.168,"[{'name': 'CO2 and Blinds Control', 'cron': '', 'period': -1, 'code': 'if (((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#Blind).blind_blind == open)) {\n  (#Fan).switch_on()\n  (#Blind).blind_close()\n}'}]",0.8,0,3.185
287,5,1,1,온도가 29도 이상이고 습도가 80% 이상이며 조명이 꺼져 있으면 에어컨을 켜고 조명을 켜 줘.,"If the temperature is above 29 degrees, the humidity is above 80%, and the lights are off, turn on the air conditioner and turn on the lights.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#TemperatureSensor).temperatureMeasurement_temperature >= 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0) and ((#Light).switch_switch == \""off\"")) {\n  (#AirConditioner).switch_on()\n  (#Light).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TemperatureSensor).temperatureMeasurement_temperature >= 29.0) {\\n  if ((#HumiditySensor).humidityMeasurement_humidity >= 80.0) {\\n    if ((#Light).switch_switch ==""}",0.932,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""if ((#TemperatureSensor).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) and ((#LightSensor).lightLevel_light == 0) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode('cool')\n  (#Light).switch_on()\n}""}]",0.6,0,5.806,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) and ((#Light).switch_switch == ""off"") {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(\'cool\')\n  (#AirConditioner).airConditionerMode_setTemperature(27.0)\n  (#Light).switch_on()\n}'}]",0.7,0,7.292,"[{'name': 'TemperatureHumidityLightControl', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nhumidity = (#HumiditySensor).relativeHumidityMeasurement_humidity\nlightsOff = all(#Light).switch_switch == ""off""\nif ((temp > 29.0) and (humidity > 80.0) and (lightsOff == true)) {\n  (#AirConditioner).switch_on()\n  all(#Light).switch_on()\n}'}]",0.8,0,2.791,"[{'name': 'TemperatureHumidityLightControl', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nhumidity = (#HumiditySensor).relativeHumidityMeasurement_humidity\nif ((temp > 29.0) and (humidity > 80.0) and (all(#Light).switch_switch == ""off"")) {\n  all(#AirConditioner).switch_on()\n  all(#Light).switch_on()\n}'}]",0.7,0,3.654
288,5,1,1,조명이 켜져 있고 창문이 닫혀 있으면 커튼을 열고 환풍기를 꺼 줘.,"If the lights are on and the windows are closed, open the curtains and turn off the fan.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Light).switch_switch == \""on\"") and ((#Window).windowControl_window == \""closed\"")) {\n  (#Curtain).curtain_open()\n  (#Fan).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).lightState_switch ==""}",0.78,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") and ((#Window).windowControl_window == ""closed"") {\n  (#Curtain).curtain_open()\n  (#Fan).switch_off()\n}'}]",1,0,4.593,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") and ((#Window).windowControl_window == ""closed"") {\n  (#Curtain).windowShadeLevel_setShadeLevel(100)\n  (#Fan).switch_off()\n}'}]",0.6,0,5.732,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((any(#Light).switch_switch == ""on"") and (all(#Window).windowControl_window == ""closed"")) {\n  all(#Curtain).curtain_open()\n  all(#Fan).switch_off()\n}'}]",0.9,0,1.984,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((any(#Light).switch_switch == ""on"") and (all(#Window).windowControl_window == ""closed"")) {\n  all(#Curtain).curtain_open()\n  all(#Fan).switch_off()\n}'}]",0.8,0,2.749
289,5,1,1,TV가 꺼져 있고 스피커가 재생 중이면 TV를 켜고 스피커를 꺼 줘.,"If the TV is off and the speaker is playing, turn on the TV and turn off the speaker.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Television).switch_switch == \""off\"") and ((#Speaker).mediaPlayback_playbackStatus == \""playing\"")) {\n  (#Television).switch_on()\n  (#Speaker).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TV).tv_isOn == false && (#Speaker).speaker_isPlaying == true) {\\n  (#TV).tv_turnOn()\\n  (#Speaker).speaker_stopPlaying()\\n""}",0.205,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"" and (#Speaker).mediaPlayback_playbackStatus == ""playing"") {\n  (#Television).switch_on()\n  (#Speaker).mediaPlayback_stop()\n}'}]",0.8,0,4.34,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"" and (#Speaker).mediaPlayback_playbackStatus == ""playing"") {\n  (#Television).switch_on()\n  (#Speaker).switch_off()\n}'}]",1,0,5.056,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Speaker).mediaPlayback_playbackStatus == ""playing"")) {\n  (#Television).switch_on()\n  (#Speaker).switch_off()\n}'}]",1,0,1.671,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Speaker).mediaPlayback_playbackStatus == ""playing"")) {\n  (#Television).switch_on()\n  (#Speaker).switch_off()\n}'}]",1,0,2.954
290,5,1,1,조명이 켜져 있고 블라인드가 열려 있으며 움직임이 감지되면 조명을 끄고 블라인드를 닫아 줘.,"If the lights are on, the blinds are open, and motion is detected, turn off the lights and close the blinds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Light).switch_switch == \""on\"") and ((#Blind).blind_blind == \""open\"") and ((#MotionSensor).motionSensor_motion == \""active\"")) {\n  (#Light).switch_off()\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).switch_switch ==""}",0.982,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") and ((#Blind).blind_blind == ""open"") and ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).switch_off()\n  (#Blind).blind_close()\n}'}]",1,0,4.603,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") and ((#Blind).blind_blind == ""open"") and ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).switch_off()\n  (#Blind).blind_close()\n}'}]",1,0,5.4,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Light).switch_switch == ""on"") and ((#Blind).blind_blind == ""open"") and ((#MotionSensor).motionSensor_motion == ""active"")) {\n  (#Light).switch_off()\n  (#Blind).blind_close()\n}'}]",1,0,2.019,"[{'name': 'TurnOffLightsAndCloseBlindsOnMotion', 'cron': '', 'period': -1, 'code': 'if (((#Light).switch_switch == ""on"") and ((#Blind).blind_blind == ""open"") and ((#MotionSensor).motionSensor_motion == ""active"")) {\n  (#Light).switch_off()\n  (#Blind).blind_close()\n}'}]",1,0,3.275
291,5,1,1,알람이 꺼져 있고 조명이 꺼져 있으며 커튼이 열려 있으면 사이렌을 울리고 조명을 켜 줘.,"If the alarm is off, the lights are off, and the curtains are open, sound the siren and turn on the lights.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Alarm).alarm_alarm == \""off\"") and ((#Light).switch_switch == \""off\"") and ((#Curtain).curtain_curtain == \""open\"")) {\n  (#Alarm).alarm_siren()\n  (#Light).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Alarm).alarmState_isOff && (#Light).lightState_isOff && (#Curtain).curtainState_isOpen) {\\n  (#Sirens).sirensState_on()\\n  (#Light).lightState_on()\\n""}",0.25,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Alarm).alarm_alarm == ""off"") and ((#Light).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Siren).switch_on()\n  (#Light).switch_on()\n}'}]",0.8,0,4.984,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Alarm).alarm_alarm == ""off"") and ((#Light).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Siren).switch_on()\n  (#Light).switch_on()\n}'}]",0.8,0,5.772,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Alarm).alarm_alarm == ""off"") and ((#Light).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""open"")) {\n  (#Alarm).alarm_siren()\n  (#Light).switch_on()\n}'}]",1,0,2.258,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Alarm).alarm_alarm == ""off"") and ((#Light).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""open"")) {\n  if (any(#Alarm)) {\n    (#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    (#Siren).sirenMode_setSirenMode(""siren"")\n    all(#Siren).switch_on()\n  }\n  all(#Light).switch_on()\n}'}]",0.6,0,3.709
292,5,1,1,에어컨이 꺼져 있고 커튼이 닫혀 있으면 에어컨을 켜고 커튼을 열어 줘.,"If the air conditioner is off and the curtains are closed, turn on the air conditioner and open the curtains.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#AirConditioner).switch_switch == \""off\"") and ((#Curtain).curtain_curtain == \""closed\"")) {\n  (#AirConditioner).switch_on()\n  (#Curtain).curtain_open()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditionerState_isOn == false && (#Curtain).curtainState_isOpen == false) {\\n  (#AirConditioner).airConditionerControl_turnOn()\\n  (#Curtain).curtainControl_open()\\n""}",0.272,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") {\n  (#AirConditioner).switch_on()\n  (#Curtain).curtain_open()\n}'}]",1,0,4.624,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") {\n  (#AirConditioner).switch_on()\n  (#Curtain).curtain_open()\n}'}]",1,0,5.421,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"")) {\n  (#AirConditioner).switch_on()\n  (#Curtain).curtain_open()\n}'}]",1,0,1.89,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"")) {\n  (#AirConditioner).switch_on()\n  (#Curtain).curtain_open()\n}'}]",1,0,4.405
294,5,1,2,창문이 열려 있고 조명이 꺼져 있으며 커튼이 닫혀 있으면 조명을 켜고 커튼을 열어 줘. 또한 관수기가 꺼져 있고 토양 수분이 40% 이하이면 관수기를 작동시켜 줘.,"If windows are open, lights are off, and curtains are closed, turn on the lights and open the curtains. Also, if the irrigator is off and the soil moisture is below 40%, turn on the irrigator.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Window).windowControl_window == \""open\"") and ((#Light).switch_switch == \""off\"") and ((#Curtain).curtain_curtain == \""closed\"")) {\n  (#Light).switch_on()\n  (#Curtain).curtain_open()\n}\nif (((#Irrigator).switch_switch == \""off\"") and ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 40.0)) {\n  (#Irrigator).switch_on()\n}""}","{""cron"": """", ""period"": ""1000"", ""code"": ""count1 := 0\\ncount2 := 0\\nwhile (true) {\\n  if ((#IrrigationDevice).irrigationDevice_isOn == false) {\\n    (#IrrigationDevice).irrigationDevice_turnOn()\\n    count1 = count1 + 1\\n""}",0.286,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") and ((#Light).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") {\n  (#Light).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"") and ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 40.0) {\n  (#Irrigator).switch_on()\n}'}]",0.9,0,8.618,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"" and (#Light).switch_switch == ""off"" and (#Curtain).windowShade_windowShade == ""closed"") {\n  (#Light).switch_on()\n  (#Curtain).windowShadeLevel_setShadeLevel(100)\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"" and (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 40.0) {\n  (#Irrigator).switch_on()\n}'}]",0.7,0,9.392,"[{'name': 'WindowLightCurtainControl', 'cron': '', 'period': -1, 'code': 'windowsOpen = any(#Window).windowControl_window == ""open""\nlightsOff = all(#Light).switch_switch == ""off""\ncurtainsClosed = all(#Curtain).curtain_curtain == ""closed""\nif ((windowsOpen == true) and (lightsOff == true) and (curtainsClosed == true)) {\n  all(#Light).switch_on()\n  all(#Curtain).curtain_open()\n}'}, {'name': 'IrrigatorSoilMoistureControl', 'cron': '', 'period': -1, 'code': 'irrigatorOff = all(#Irrigator).switch_switch == ""off""\nsoilBelow40 = any(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 40.0\nif ((irrigatorOff == true) and (soilBelow40 == true)) {\n  all(#Irrigator).switch_on()\n}'}]",0.8,0,4.253,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((any(#Window).windowControl_window == ""open"") and (all(#Light).switch_switch == ""off"") and (all(#Curtain).curtain_curtain == ""closed"")) {\n  all(#Light).switch_on()\n  all(#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((all(#Irrigator).switch_switch == ""off"") and ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 40.0)) {\n  all(#Irrigator).switch_on()\n}'}]",0.8,0,5.685
295,5,1,2,환풍기가 꺼져 있고 이산화탄소 수치가 1000 이상이며 커튼이 닫혀 있으면 환풍기를 켜고 커튼을 열어 줘. 조명이 꺼져 있고 온도가 27도 이상이면 조명을 켜고 블라인드를 닫아 줘.,"If the fan is off, the carbon dioxide level is above 1000, and the curtains are closed, turn on the fan and open the curtains. If the lights are off and the temperature is above 27 degrees, turn on the lights and close the blinds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Fan).switch_switch == \""off\"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide >= 1000.0) and ((#Curtain).curtain_curtain == \""closed\"")) {\n  (#Fan).switch_on()\n  (#Curtain).curtain_open()\n}\nif (((#Light).switch_switch == \""off\"") and ((#TemperatureSensor).temperatureMeasurement_temperature >= 27.0)) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""count := 0\\nopen_time := 0\\nclose_time := 0\\nloop {\\n  if ((#Window).windowState_state ==""}",0.254,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Fan).switch_switch == ""off"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000) and ((#Curtain).curtain_curtain == ""closed"") {\n  (#Fan).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 27.0) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",0.9,0,8.678,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Fan).switch_switch == ""off"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000) and ((#Curtain).curtain_curtain == ""closed"") {\n  (#Fan).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 27.0) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",0.9,0,9.408,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Fan).switch_switch == ""off"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#Curtain).curtain_curtain == ""closed"")) {\n  (#Fan).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#Light).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 27.0)) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",0.9,0,4.939,"[{'name': 'FanCurtainControl', 'cron': '', 'period': -1, 'code': 'if (((#Fan).switch_switch == ""off"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#Curtain).curtain_curtain == ""closed"")) {\n  (#Fan).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'LightBlindControl', 'cron': '', 'period': -1, 'code': 'if (((#Light).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 27.0)) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",0.9,0,4.963
296,5,1,2,에어컨이 꺼져 있고 온도가 29도 이상이며 습도가 70% 이상이면 제습기를 제습 모드로 설정하고 켜 줘. 커튼이 열려 있고 조명이 꺼져 있으면 커튼을 닫고 조명을 켜 줘.,"If the air conditioner is off, the temperature is above 29 degrees, and the humidity is above 70%, set the dehumidifier to dehumidify mode and turn it on. If the curtains are open and the lights are off, close the curtains and turn on the lights.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#AirConditioner).switch_switch == \""off\"") and ((#TemperatureSensor).temperatureMeasurement_temperature >= 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 70.0)) {\n  (#Dehumidifier).airConditionerMode_setAirConditionerMode(\""dehumidifying\"")\n  (#Dehumidifier).switch_on()\n}\nif (((#Curtain).curtain_curtain == \""open\"") and ((#Light).switch_switch == \""off\"")) {\n  (#Curtain).curtain_close()\n  (#Light).switch_on()\n}""}","{""cron"": ""0 * * * *"", ""period"": ""30000"", ""code"": ""count := 0     dehumidifierStatus := (#Dehumidifier).dehumidifierStatus_getStatus()     if (dehumidifierStatus ==""}",0.293,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 70.0) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode(""dehumidifying"")\n  (#Dehumidifier).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") and ((#Light).switch_switch == ""off"") {\n  (#Curtain).curtain_close()\n  (#Light).switch_on()\n}'}]",0.7,0,9.876,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 70.0) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode(""dehumidifying"")\n  (#Dehumidifier).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") and ((#Light).switch_switch == ""off"") {\n  (#Curtain).curtain_close()\n  (#Light).switch_on()\n}'}]",0.85,0,10.357,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).switch_switch == ""off"") and ((#AirQualityDetector).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 70.0)) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode(""dehumidifying"")\n  (#Dehumidifier).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#Curtain).curtain_curtain == ""open"") and ((#Light).switch_switch == ""off"")) {\n  (#Curtain).curtain_close()\n  (#Light).switch_on()\n}'}]",0.85,0,3.691,"[{'name': 'ControlDehumidifier', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).switch_switch == ""off"") and ((#AirQualityDetector).temperatureMeasurement_temperature > 29.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 70.0)) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode(""dehumidifying"")\n  (#Dehumidifier).switch_on()\n}'}, {'name': 'CurtainsAndLightsControl', 'cron': '', 'period': -1, 'code': 'if (((#Curtain).curtain_curtain == ""open"") and ((#Light).switch_switch == ""off"")) {\n  (#Curtain).curtain_close()\n  (#Light).switch_on()\n}'}]",0.85,0,4.949
297,5,1,2,조명이 꺼져 있고 움직임이 감지되지 않으며 커튼이 열려 있으면 조명을 켜고 커튼을 닫아 줘. 관수기가 꺼져 있고 창문이 닫혀 있으면 관수기를 켜고 창문을 열어 줘.,"If the lights are off, no motion is detected, and the curtains are open, turn on the lights and close the curtains. If the irrigator is off and the windows are closed, turn on the irrigator and open the windows.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Light).switch_switch == \""off\"") and ((#MotionSensor).motionSensor_motion == \""inactive\"") and ((#Curtain).curtain_curtain == \""open\"")) {\n  (#Light).switch_on()\n  (#Curtain).curtain_close()\n}\nif (((#Irrigator).switch_switch == \""off\"") and ((#Window).windowControl_window == \""closed\"")) {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}""}","{""cron"": ""*/10 * * * *"", ""period"": ""-1"", ""code"": ""prevTemp = (#TemperatureSensor).temperature     if (prevTemp != null) {       count = 0       currentTemp = (#TemperatureSensor).temperature       if (currentTemp - prevTemp >= 5) {         count = count + 1""}",0.309,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#MotionSensor).motionSensor_motion == ""inactive"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Light).switch_on()\n  (#Curtain).curtain_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"") and ((#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}'}]",1,0,8.178,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#MotionSensor).motionSensor_motion == ""inactive"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Light).switch_on()\n  (#Curtain).curtain_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"") and ((#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}'}]",1,0,8.909,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all(#Light).switch_switch == ""off"") and (all(#MotionSensor).motionSensor_motion == ""inactive"") and (all(#Curtain).curtain_curtain == ""open"")) {\n  all(#Light).switch_on()\n  all(#Curtain).curtain_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((all(#Irrigator).switch_switch == ""off"") and (all(#Window).windowControl_window == ""closed"")) {\n  all(#Irrigator).switch_on()\n  all(#Window).windowControl_open()\n}'}]",0.9,0,3.817,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#MotionSensor).motionSensor_motion == ""inactive"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Light).switch_on()\n  (#Curtain).curtain_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"") and ((#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}'}]",1,0,4.286
298,5,1,2,블라인드가 열려 있고 조명이 꺼져 있으며 습도가 80% 이상이면 블라인드를 닫고 조명을 켜 줘. 창문이 닫혀 있고 에어컨이 꺼져 있으면 창문을 열고 에어컨을 켜 줘.,"If the blinds are open, the lights are off, and the humidity is above 80%, close the blinds and turn on the lights. If the windows are closed and the air conditioner is off, open the windows and turn on the air conditioner.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Blind).blind_blind == \""open\"") and ((#Light).switch_switch == \""off\"") and ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0)) {\n  (#Blind).blind_close()\n  (#Light).switch_on()\n}\nif (((#Window).windowControl_window == \""closed\"") and ((#AirConditioner).switch_switch == \""off\"")) {\n  (#Window).windowControl_open()\n  (#AirConditioner).switch_on()\n}""}","{""cron"": """", ""period"": ""5000"", ""code"": ""if ((#CurrentTime).currentTime_getDayOfWeek() != 3) {       if ((#TV).tv_getStatus() ==""}",0.091,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Blind).blind_blind == ""open"") and ((#Light).switch_switch == ""off"") and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Blind).blind_close()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""closed"") and ((#AirConditioner).switch_switch == ""off"") {\n  (#Window).windowControl_open()\n  (#AirConditioner).switch_on()\n}'}]",0.9,0,8.397,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Blind).blind_blind == ""open"" and (#Light).switch_switch == ""off"" and (#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Blind).blind_close()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""closed"" and (#AirConditioner).switch_switch == ""off"") {\n  (#Window).windowControl_open()\n  (#AirConditioner).switch_on()\n}'}]",0.9,0,9.036,"[{'name': 'Control blinds and lights based on humidity', 'cron': '', 'period': -1, 'code': 'if (((#Blind).blind_blind == ""open"") and ((#Light).switch_switch == ""off"") and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0)) {\n  all(#Blind).blind_close()\n  all(#Light).switch_on()\n}'}, {'name': 'Control windows and air conditioner', 'cron': '', 'period': -1, 'code': 'if (((#Window).windowControl_window == ""closed"") and ((#AirConditioner).switch_switch == ""off"")) {\n  all(#Window).windowControl_open()\n  all(#AirConditioner).switch_on()\n}'}]",0.9,0,3.991,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Blind).blind_blind == open) and ((#Light).switch_switch == off) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0)) {\n  (#Blind).blind_close()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#Window).windowControl_window == closed) and ((#AirConditioner).switch_switch == off)) {\n  (#Window).windowControl_open()\n  (#AirConditioner).switch_on()\n}'}]",0.9,0,4.181
299,5,1,2,TV가 꺼져 있고 블라인드가 닫혀 있으며 커튼이 열려 있으면 TV를 켜고 블라인드를 열어 줘. 에어컨이 자동 모드가 아니고 꺼져 있으면 자동 모드로 설정하고 전원을 켜 줘.,"If the TV is off, the blinds are closed, and the curtains are open, turn on the TV and open the blinds. If the air conditioner is not in auto mode and is off, set it to auto mode and turn it on.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Television).switch_switch == \""off\"") and ((#Blind).blind_blind == \""closed\"") and ((#Curtain).curtain_curtain == \""open\"")) {\n  (#Television).switch_on()\n  (#Blind).blind_open()\n}\nif (((#AirConditioner).airConditionerMode_airConditionerMode != \""auto\"") and ((#AirConditioner).switch_switch == \""off\"")) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(\""auto\"")\n  (#AirConditioner).switch_on()\n}""}","{""cron"": """", ""period"": ""3000"", ""code"": ""if ((#Light).switch_switch ==""}",0.246,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") and ((#Blind).blind_blind == ""closed"") and ((#Curtain).curtain_curtain == ""open"") {\n  (#Television).switch_on()\n  (#Blind).blind_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode != ""auto"") and ((#AirConditioner).switch_switch == ""off"") {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""auto"")\n  (#AirConditioner).switch_on()\n}'}]",1,0,8.97,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"" and (#Blind).blind_blind == ""closed"" and (#Curtain).curtain_curtain == ""open"") {\n  (#Television).switch_on()\n  (#Blind).blind_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode != ""auto"" and (#AirConditioner).switch_switch == ""off"") {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""auto"")\n  (#AirConditioner).switch_on()\n}'}]",1,0,9.531,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Blind).blind_blind == closed) and ((#Curtain).curtain_curtain == open)) {\n  (#Television).switch_on()\n  (#Blind).blind_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).airConditionerMode_airConditionerMode != auto) and ((#AirConditioner).switch_switch == off)) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(auto)\n  (#AirConditioner).switch_on()\n}'}]",0.95,0,5.262,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Blind).blind_blind == ""closed"") and ((#Curtain).curtain_curtain == ""open"")) {\n  (#Television).switch_on()\n  (#Blind).blind_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).airConditionerMode_airConditionerMode != ""auto"") and ((#AirConditioner).switch_switch == ""off"")) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""auto"")\n  (#AirConditioner).switch_on()\n}'}]",1,0,4.83
301,5,1,2,문이 열려 있고 알람이 꺼져 있으면 사이렌을 울리고 블라인드가 열려 있으면 닫아 줘. 에어컨이 꺼져 있고 온도가 30도 이상이면 냉방 모드로 설정하고 켜 줘.,"Sound the siren if the door is open and the alarm is turned off, and close the blinds if they are open. If the air conditioner is off and the temperature is above 30 degrees, set it to cool mode and turn it on.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#DoorLock).doorControl_door == \""open\"") and ((#Alarm).alarm_alarm == \""off\"")) {\n  (#Siren).sirenMode_setSirenMode(\""siren\"")\n  if ((#Blind).blind_blind == \""open\"") {\n    (#Blind).blind_close()\n  }\n}\nif (((#AirConditioner).switch_switch == \""off\"") and ((#TemperatureSensor).temperatureMeasurement_temperature >= 30.0)) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(\""cool\"")\n  (#AirConditioner).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#MotionDetector).motionDetection_isMotionDetected == true) {\\n  if ((#Door).doorState_isDoorOpen > 0.5) {\\n    (#Light).lightControl_turnOnLight()\\n    (#Window).windowControl_openWindow()\\n""}",0.311,0,,"[{'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 30.0) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n  (#AirConditioner).switch_on()\n}'}]",0.5,0,8.6,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#DoorLock).doorControl_door == ""open"") and ((#Alarm).alarm_alarm == ""off"") {\n  (#Siren).switch_on()\n}\nif (#Blind).blind_blind == ""open"" {\n  (#Blind).blind_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 30.0) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n  (#AirConditioner).switch_on()\n}'}]",0.75,0,9.349,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""if (((#DoorLock).doorControl_door == open) and ((#Alarm).alarm_alarm == off)) {\n  (#Siren).sirenMode_setSirenMode('siren')\n}\nif ((#Blind).blind_blind == open) {\n  (#Blind).blind_close()\n}""}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).switch_switch == ""off"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 30.0)) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(\'cool\')\n  (#AirConditioner).switch_on()\n}'}]",0.85,0,4.078,"[{'name': 'SecurityAlertAndBlindControl', 'cron': '', 'period': -1, 'code': 'if ((#DoorLock).doorControl_door == ""open"") and ((#Alarm).alarm_alarm == ""off"") {\n  if (any(#Siren).switch_switch == ""off"") {\n    all(#Siren).sirenMode_setSirenMode(""siren"")\n  }\n}\nif (any(#Blind).blind_blind == ""open"") {\n  all(#Blind).blind_close()\n}'}, {'name': 'AirConditionerCoolingControl', 'cron': '', 'period': -1, 'code': 'temp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (((#AirConditioner).switch_switch == ""off"") and (temp > 30.0)) {\n  (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n  (#AirConditioner).switch_on()\n}'}]",0.7,0,7.628
302,5,1,2,TV가 꺼져 있고 커튼이 닫혀 있으며 선풍기가 꺼져 있으면 TV를 켜고 커튼을 열어 줘. 스피커가 재생 중이고 조명이 꺼져 있으면 조명을 켜고 블라인드를 닫아 줘.,"If the TV is off, the curtains are closed, and the fan is off, turn on the TV and open the curtains. If the speakers are playing and the lights are off, turn on the lights and close the blinds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Television).switch_switch == \""off\"") and ((#Curtain).curtain_curtain == \""closed\"") and ((#Fan).switch_switch == \""off\"")) {\n  (#Television).switch_on()\n  (#Curtain).curtain_open()\n}\nif (((#Speaker).mediaPlayback_playbackStatus == \""playing\"") and ((#Light).switch_switch == \""off\"")) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}""}","{""cron"": ""0 0 3 * *"", ""period"": ""0"", ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {       (#clock).clock_delay(5000)       (#Irrigator).irrigatorOperatingState_startWatering()       (#clock).clock_delay(10000)       (#Alarm).alarmControl_soundAlarm()       (#clock).clock_delay(15000)       while ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {         (#Blind).blindControl_closeBlind()""}",0.018,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") and ((#Fan).switch_switch == ""off"") {\n  (#Television).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Speaker).mediaPlayback_playbackStatus == ""playing"") and ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",1,0,8.55,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") and ((#Fan).switch_switch == ""off"") {\n  (#Television).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Speaker).mediaPlayback_playbackStatus == ""playing"") and ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  (#Blind).blind_open()\n}'}]",0.9,0,9.306,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") and ((#Fan).switch_switch == ""off"")) {\n  (#Television).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#Speaker).mediaPlayback_playbackStatus == ""playing"") and ((#Light).switch_switch == ""off"")) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",1,0,3.807,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"") and ((#Fan).switch_switch == ""off"")) {\n  (#Television).switch_on()\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#Speaker).mediaPlayback_playbackStatus == ""playing"") and ((#Light).switch_switch == ""off"")) {\n  (#Light).switch_on()\n  (#Blind).blind_close()\n}'}]",1,0,4.671
303,5,1,2,TV가 켜져 있고 스피커가 꺼져 있으며 조명이 꺼져 있으면 스피커를 켜고 조명을 켜 줘. 에어컨이 난방 모드이고 온도가 21도 이상이면 에어컨을 끄고 블라인드를 닫아 줘.,"If the TV is on, the speakers are off, and the lights are off, turn on the speakers and turn on the lights. If the air conditioner is in heating mode and the temperature is above 21 degrees, turn off the air conditioner and close the blinds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Television).switch_switch == \""on\"") and ((#Speaker).switch_switch == \""off\"") and ((#Light).switch_switch == \""off\"")) {\n  (#Speaker).switch_on()\n  (#Light).switch_on()\n}\nif (((#AirConditioner).airConditionerMode_airConditionerMode == \""heat\"") and ((#TemperatureSensor).temperatureMeasurement_temperature >= 21.0)) {\n  (#AirConditioner).switch_off()\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) {\\n""}",0.673,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""on"" and (#Speaker).switch_switch == ""off"" and (#Light).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""heat"" and (#TemperatureSensor).temperatureMeasurement_temperature > 21.0) {\n  (#AirConditioner).switch_off()\n  (#Blind).blind_close()\n}'}]",0.9,0,8.513,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""on"" and (#Speaker).switch_switch == ""off"" and (#Light).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""heat"" and (#TemperatureSensor).temperatureMeasurement_temperature > 21.0) {\n  (#AirConditioner).switch_off()\n  (#Blind).blind_close()\n}'}]",0.9,0,9.338,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""on"") and ((#Speaker).switch_switch == ""off"") and (all(#Light).switch_switch == ""off"")) {\n  (#Speaker).switch_on()\n  all(#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).airConditionerMode_airConditionerMode == ""heat"") and ((#AirConditioner).airConditionerMode_targetTemperature > 21.0)) {\n  (#AirConditioner).switch_off()\n  all(#Blind).blind_close()\n}'}]",0.85,0,3.354,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Television).switch_switch == ""on"") and ((#Speaker).switch_switch == ""off"") and ((#Light).switch_switch == ""off"")) {\n  (#Speaker).switch_on()\n  (#Light).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if (((#AirConditioner).airConditionerMode_airConditionerMode == ""heat"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 21.0)) {\n  (#AirConditioner).switch_off()\n  (#Blind).blind_close()\n}'}]",0.95,0,4.521
305,6,1,3,매일 아침 8시에 조명을 켜 줘.,Turn on the lights at 8am every morning.,,,"{""name"": ""Scenario1"", ""cron"": ""0 8 * * *"", ""period"": 0, ""code"": ""(#Light).switch_on()""}","{""cron"": ""0 0 1 1 *"", ""period"": ""0"", ""code"": ""if ((#Light).switch_switch ==""}",0.852,0,,"[{'name': 'Scenario1', 'cron': '0 8 * * *', 'period': 0, 'code': '(#Light).switch_on()'}, {'name': 'Scenario2', 'cron': '0 8 * * *', 'period': 0, 'code': '(#Light).switch_on()'}]",1,0,4.493,"[{'name': 'Scenario1', 'cron': '0 8 * * *', 'period': 0, 'code': '(#Light).switch_on()'}, {'name': 'Scenario2', 'cron': '0 8 * * *', 'period': 0, 'code': '(#Light).switch_on()'}]",1,0,5.303,"[{'name': 'TurnOnLightsAt8AM', 'cron': '0 8 * * *', 'period': -1, 'code': '(#Light).switch_on()'}]",1,0,1.747,"[{'name': 'TurnOnLightsAt8AM', 'cron': '0 8 * * *', 'period': -1, 'code': '(#Light).switch_on()'}]",1,0,2.488
306,6,1,3,매일 오후 6시부터 7시 사이에 15초마다 커튼을 닫았다 열었다 해 줘.,Close and open the curtains every 15 seconds between 6pm and 7pm every day.,,,"{""name"": ""Scenario1"", ""cron"": ""0 18 * * *"", ""period"": 15000, ""code"": ""curtain_action := true\nif ((#Clock).clock_hour == 18) {\n  if (curtain_action == true) {\n    (#Curtain).curtain_close()\n    curtain_action = false\n  } else {\n    (#Curtain).curtain_open()\n    curtain_action = true\n  }\n} else {\n  break\n}""}","{""cron"": """", ""period"": ""10000"", ""code"": ""count := 0     soilHumidity := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity     if (soilHumidity < 30.0) {       count = count + 1       if (count >= 2) {         if ((#Clock).clock_getCurrentTime() - soilHumidityLastUpdate) > 60000 {           (#Blind).blindControl_closeBlind()           (#Clock).clock_delay(5000)           (#TextToSpeech).textToSpeech_speak(""}",0.074,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 15000, 'code': 'if (clockHour >= 18 and clockHour < 19) {\n  (#Curtain).curtain_close()\n  wait until(clockSecond == 15)\n  (#Curtain).curtain_open()\n}'}]",0.6,0,4.337,"[{'name': 'Scenario1', 'cron': '', 'period': 15000, 'code': 'if (clock_hour >= 18 and clock_hour < 19) {\n  (#Curtain).curtain_close()\n  wait until(clock_second == 0)\n  (#Curtain).curtain_open()\n  wait until(clock_second == 0)\n}'}]",0.6,0,5.53,"[{'name': 'CurtainToggleEvery15SecBetween6and7pm', 'cron': '0 18 * * *', 'period': 15000, 'code': 'state := ""closing""\nhour = 0\nif ((#Clock).clock_hour >= 19) {\n  break\n}\nhour = (#Clock).clock_hour\nif (hour < 18) {\n  break\n}\nif (state == ""closing"") {\n  all(#Curtain).curtain_close()\n  state = ""opening""\n} else {\n  all(#Curtain).curtain_open()\n  state = ""closing""\n}'}]",0.75,0,3.075,"[{'name': 'CurtainOpenCloseEvening', 'cron': '0 18 * * *', 'period': 15000, 'code': 'action := ""close""\nif ((#Clock).clock_hour < 18) or ((#Clock).clock_hour >= 19) {\n  break\n}\nif (action == ""close"") {\n  all(#Curtain).curtain_close()\n  action = ""open""\n} else {\n  all(#Curtain).curtain_open()\n  action = ""close""\n}'}]",0.7,0,3.25
307,6,1,3,주말 오후 10시부터 11시까지 3분마다 블라인드를 닫아 줘.,Close the blinds every 3 minutes from 10-11pm on weekends.,,,"{""name"": ""Scenario1"", ""cron"": ""0 22 * * 6,0"", ""period"": 180000, ""code"": ""if ((#Clock).clock_hour == 22) {\n  (#Blind).blind_close()\n} else {\n  break\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""open Curtain if closed for 5 seconds     if ((#Curtain).curtain_state ==""}",0.474,0,,"[{'name': 'Scenario1', 'cron': '0 10 * * 0,6', 'period': 180000, 'code': 'all(#Blind).blind_close()'}, {'name': 'Scenario2', 'cron': '0 11 * * 0,6', 'period': 180000, 'code': 'all(#Blind).blind_close()'}]",0.4,0,7.022,"[{'name': 'Scenario1', 'cron': '0 10 * * 0,6', 'period': 180000, 'code': '(#Blind).blind_close()\n#'}, {'name': 'Scenario2', 'cron': '0 11 * * 0,6', 'period': 180000, 'code': '(#Blind).blind_close()'}]",0.5,0,7.868,"[{'name': 'Close blinds every 3 minutes from 10-11pm on weekends', 'cron': '0 22 * * 6,0', 'period': 180000, 'code': 'if ((#Clock).clock_hour >= 22) and ((#Clock).clock_hour < 23) and (((#Clock).clock_weekday == ""saturday"") or ((#Clock).clock_weekday == ""sunday"")) {\n  all(#Blind).blind_close()\n} else {\n  break\n}'}]",0.8,0,2.728,"[{'name': 'Close blinds every 3 minutes on weekends 10-11pm', 'cron': '0 22 * * 6,0', 'period': 180000, 'code': 'if (((#Clock).clock_hour >= 22) and ((#Clock).clock_hour < 23) and (((#Clock).clock_weekday == 6) or ((#Clock).clock_weekday == 0))) {\n  all(#Blind).blind_close()\n} else {\n  break\n}'}]",0.8,0,4.009
308,6,1,3,주말 오후 10시부터 11시까지 3초마다 제습기를 켜 줘.,Turn on the dehumidifier every 3 seconds from 10-11pm on weekends.,,,"{""name"": ""Scenario1"", ""cron"": ""0 22 * * 6,0"", ""period"": 3000, ""code"": ""if ((#Clock).clock_hour == 22) {\n  (#Dehumidifier).switch_on()\n} else {\n  break\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).switch_switch ==""}",0.581,0,,"[{'name': 'Scenario1', 'cron': '0 22 * * 0,6', 'period': 3000, 'code': 'dehumidifierOn := false\nif (not dehumidifierOn) {\n  (#Dehumidifier).switch_on()\n  dehumidifierOn := true\n}\nwait until(#Clock).clock_datetime >= 220000\n(#Dehumidifier).switch_off()\ndehumidifierOn := false'}]",0.5,0,7.964,"[{'name': 'Scenario1', 'cron': '0 22 * * 0,6', 'period': 3000, 'code': 'dehumidifierOn := false\nif (not dehumidifierOn) {\n  (#Dehumidifier).switch_on()\n  dehumidifierOn := true\n}\nwait until(#Clock).clock_time >= 2300\n(#Dehumidifier).switch_off()\ndehumidifierOn := false'}]",0.6,0,8.569,"[{'name': 'Weekend Night Dehumidifier On', 'cron': '0 22 * * 6,0', 'period': 3000, 'code': 'if ((#Dehumidifier).switch_switch == off) {\n  (#Dehumidifier).switch_on()\n}'}]",0.7,0,1.881,"[{'name': 'WeekendDehumidifierControl', 'cron': '0 22 * * 6,7', 'period': 3000, 'code': 'if ((#Dehumidifier).switch_switch == off) {\n  (#Dehumidifier).switch_on()\n}'}]",0.6,0,2.822
309,7,1,3,10초마다 알람과 사이렌을 껐다 켰다 반복해 줘.,Turn the alarm and siren off and on every 10 seconds.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 10000, ""code"": ""alarm_state := true\nif (alarm_state == true) {\n  (#Alarm).alarm_off()\n  (#Siren).switch_off()\n  alarm_state = false\n} else {\n  (#Alarm).alarm_siren()\n  (#Siren).switch_on()\n  alarm_state = true\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditioner_isOn == true) {       (#clock).clock_delay(5000)       (#Blind).blind_close()       (#clock).clock_delay(5000)       if ((#Curtain).curtain_isOpen == true) {         (#Curtain).curtain_close()""}",0.229,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': '(#Alarm).alarm_off()\n(#Siren).switch_on()\nwait until(#Alarm).alarm_alarm == ""off"" and (#Siren).switch_switch == ""on""\n(#Alarm).alarm_siren()\n(#Siren).switch_off()\nwait until(#Alarm).alarm_alarm == ""siren"" and (#Siren).switch_switch == ""off""\n(#Alarm).alarm_off()\n(#Siren).switch_on()'}]",0.3,0,6.304,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': '(#Alarm).alarm_off()\n(#Siren).switch_off()\n(#Alarm).alarm_off()\n(#Siren).switch_on()'}]",0.4,0,4.575,"[{'name': 'AlarmSirenToggle', 'cron': '', 'period': 10000, 'code': 'state := false\nif (state == false) {\n  all(#Alarm).alarm_off()\n  all(#Siren).switch_off()\n  state = true\n} else {\n  all(#Alarm).alarm_siren()\n  all(#Siren).switch_on()\n  state = false\n}'}]",0.9,0,2.571,"[{'name': 'ToggleAlarmSirenEvery10Seconds', 'cron': '', 'period': 10000, 'code': 'state := false\nif (state == false) {\n  all(#Alarm).alarm_off()\n  all(#Siren).switch_off()\n  state = true\n} else {\n  all(#Alarm).alarm_siren()\n  all(#Siren).switch_on()\n  state = false\n}'}]",0.9,0,2.877
310,7,1,3,매일 30초마다 선풍기를 껐다 켰다 반복해 줘.,Turn the fan off and on every 30 seconds every day.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 30000, ""code"": ""fan_on := true\nif (fan_on == true) {\n  (#Fan).switch_off()\n  fan_on = false\n} else {\n  (#Fan).switch_on()\n  fan_on = true\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Door).doorState ==""}",0.293,0,,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': 10000, 'code': 'fanOn := false\nif (fanOn == false) {\n  (#Fan).switch_on()\n  fanOn = true\n} else {\n  (#Fan).switch_off()\n  fanOn = false\n}'}]",0.7,0,5.505,"[{'name': 'Scenario1', 'cron': '', 'period': 30000, 'code': '(#Fan).fanControl_setPercent(0)\n(#Fan).fanControl_setPercent(100)'}]",0.3,0,4.181,"[{'name': 'Fan toggle every 30 seconds daily', 'cron': '0 0 * * *', 'period': 1000, 'code': 'toggleOn := true\nelapsed := 0\nduration := 30000\nif (elapsed >= duration) {\n  if (toggleOn == true) {\n    all(#Fan).switch_off()\n    toggleOn = false\n  } else {\n    all(#Fan).switch_on()\n    toggleOn = true\n  }\n  elapsed = 0\n} else {\n  elapsed = elapsed + period\n}'}]",0.8,0,3.047,"[{'name': 'FanOnOffToggle', 'cron': '0 0 * * *', 'period': 30000, 'code': 'state := false\nif (state == false) {\n  all(#Fan).switch_off()\n  state = true\n} else {\n  all(#Fan).switch_on()\n  state = false\n}'}]",0.9,0,2.875
311,6,1,3,매일 자정에 TV를 꺼 줘.,Turn off the TV at midnight every night.,,,"{""name"": ""Scenario1"", ""cron"": ""0 0 * * *"", ""period"": 0, ""code"": ""(#Television).switch_off()""}","{""cron"": ""0 9 * * 1"", ""period"": ""60000"", ""code"": ""if ((#Window).windowState_isOpen == true) {       (#Clock).clock_delay(7000)       if ((#Blind).blindState_isOpen == true) {         (#Blind).blindControl_closeBlind()""}",0.142,0,,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}, {'name': 'Scenario2', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}]",0.9,0,4.457,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}, {'name': 'Scenario2', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}]",1,0,5.264,"[{'name': 'TurnOffTVAtMidnight', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}]",1,0,1.461,"[{'name': 'TurnOffTVAtMidnight', 'cron': '0 0 * * *', 'period': -1, 'code': '(#Television).switch_off()'}]",1,0,2.156
313,6,1,3,평일 오전 8시부터 자정까지 한 시간마다 조명을 켜 줘.,Turn on the lights every hour on the hour from 8am to midnight on weekdays.,,,"{""name"": ""Scenario1"", ""cron"": ""0 8-23 * * 1-5"", ""period"": 0, ""code"": ""(#Light).switch_on()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Pump).pumpStatus ==""}",0.464,0,,"[{'name': 'Scenario1', 'cron': '0 8-23 * * 1-5', 'period': 0, 'code': '(#Light).switch_on()\nname = ""Scenario2""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario3""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario4""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario5""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()'}]",0.8,0,8.678,"[{'name': 'Scenario1', 'cron': '0 8-23 * * 1-5', 'period': 0, 'code': '(#Light).switch_on()\nname = ""Scenario2""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario3""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario4""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()\nname = ""Scenario5""\ncron = ""0 8-23 * * 1-5""\nperiod = 0\n(#Light).switch_on()'}]",0.7,0,9.479,"[{'name': 'Hourly Lights On Weekdays', 'cron': '0 * * * 1-5', 'period': 0, 'code': 'if (((#Clock).clock_hour >= 8) and ((#Clock).clock_hour < 24)) {\n  (#Light).switch_on()\n} else {\n  (#Light).switch_off()\n}'}]",0.7,0,1.881,"[{'name': 'TurnOnLightsEveryHourWeekdays', 'cron': '0 8-23 * * 1-5', 'period': 0, 'code': '(#Light).switch_on()'}]",1,0,2.35
314,4,1,4,창문이 열리면 알람의 사이렌을 울려 줘.,Sound the alarm's siren when the window opens.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#Window).windowControl_window == \""open\"")\n(#Alarm).alarm_siren()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#SoilMoistureSensor).soilMoistureMeasurement_soilMoisture <= 25.0) {\\n  (#clock).clock_delay(10000)\\n  if ((#SoilMoistureSensor).soilMoistureMeasurement_soilMoisture <= 25.0) {\\n    (#Alarm).alarmControl_sirenOn()\\n""}",0.055,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Window).windowControl_window == ""open""\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until(#Window).windowControl_window == ""closed""\n(#Alarm).alarm_off()'}]",0.7,0,4.674,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Window).windowControl_window == ""open""\n(#Alarm).alarm_siren()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until(#Window).windowControl_window == ""closed""\n(#Alarm).alarm_off()'}]",0.5,0,5.53,"[{'name': 'AlarmSirenOnWindowOpen', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == open) {\n  if (any(#Alarm).alarm_alarm != siren) {\n    if (any(#Alarm)) {\n      all(#Alarm).alarm_siren()\n    } else if (any(#Siren)) {\n      all(#Siren).switch_on()\n      all(#Siren).sirenMode_setSirenMode(siren)\n    }\n  }\n}'}]",0.6,0,2.743,"[{'name': 'SoundAlarmWhenWindowOpens', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Window).windowControl_window == open) {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.015
315,3,1,4,토양 수분이 20% 이상이었다가 이하가 되면 관개 장치를 작동시켜 줘.,Turn on irrigation when soil moisture is above and below 20%., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 20.0)\nwait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 20.0)\n(#Irrigator).switch_on()""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#Light).switch_switch ==""}",0.852,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 20.0)\n(#Irrigator).switch_on()'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0)\n(#Irrigator).switch_on()'}]",0.8,0,6.102,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0)\n(#Irrigator).switch_on()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 20.0)\n(#Irrigator).switch_off()'}]",0.6,0,6.604,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 20.0) {\n  (#Irrigator).switch_on()\n}\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 20.0) {\n  (#Irrigator).switch_on()\n}'}]",0.5,0,2.527,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 20.0) or ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 20.0)) {\n  (#Irrigator).switch_on()\n}'}]",0.5,0,2.721
316,3,1,4,움직임이 감지되면 최대 3번까지 조명을 켜 줘.,Turn on the light up to 3 times when motion is detected., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""motion_count := 0\nprev_motion := \""inactive\""\ncurrent = (#MotionSensor).motionSensor_motion\nif (current == \""active\"") and (prev_motion == \""inactive\"") {\n  if (motion_count < 3) {\n    (#Light).switch_on()\n    motion_count = motion_count + 1\n  }\n}\nprev_motion = current""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#IrrigationDevice).irrigationDevice_isOn == false && (#SoilMoistureSensor).soilMoistureMeasurement_soilMoisture < 20.0) {\\n  (#Sirens).sirens_on()\\n  (#FlashingLights).flashingLights_on()\\n  if ((#Curtain).curtain_isClosed) {\\n    (#Curtain).curtain_open()\\n""}",0.087,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).switchLevel_setLevel(30, 1000)\n  wait until((#MotionSensor).motionSensor_motion == ""inactive"")\n  (#Light).switchLevel_setLevel(30, 1000)\n  wait until((#MotionSensor).motionSensor_motion == ""inactive"")\n  (#Light).switchLevel_setLevel(30, 1000)\n}'}]",0.5,0,6.53,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).colorControl_setColor(30, 1000)\n  wait until((#MotionSensor).motionSensor_motion == ""inactive"")\n  (#Light).colorControl_setColor(30, 1000)\n  wait until((#MotionSensor).motionSensor_motion == ""inactive"")\n  (#Light).colorControl_setColor(30, 1000)\n}'}]",0.4,0,7.399,"[{'name': 'MotionLightControl', 'cron': '', 'period': 100, 'code': 'count := 0\ntriggered := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false and count < 3) {\n    (#Light).switch_on()\n    count = count + 1\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.85,0,2.438,"[{'name': 'TurnOnLightUpTo3TimesOnMotion', 'cron': '', 'period': 1000, 'code': 'count := 0\nmotionActivePrev := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (motionActivePrev == false) {\n    if (count < 3) {\n      (#Light).switch_on()\n      count = count + 1\n    }\n  }\n  motionActivePrev = true\n} else {\n  motionActivePrev = false\n}'}]",0.9,0,3.993
317,3,1,4,온도가 35도 이상이 되면 에어컨을 켜 줘.,Turn on the air conditioner when the temperature is above 35 degrees., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#TemperatureSensor).temperatureMeasurement_temperature >= 35.0)\n(#AirConditioner).switch_on()""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#Door).doorState ==""}",0.5,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""auto"") {\n  if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n    (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n    (#AirConditioner).airConditionerMode_setTemperature(22.0)\n  }\n}'}]",0.4,0,5.702,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""auto"") {\n  if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n    (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n    (#AirConditioner).airConditionerMode_setTemperature(22.0)\n  }\n}'}]",0.3,0,6.543,"[{'name': 'AirConditionerOnHighTemp', 'cron': '', 'period': 1000, 'code': 'triggered := false\ntemp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (temp > 35.0) {\n  if (triggered == false) {\n    (#AirConditioner).switch_on()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.25,"[{'name': 'TurnOnACWhenHot', 'cron': '', 'period': 1000, 'code': 'triggered := false\ntemp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (temp > 35.0) {\n  if (triggered == false) {\n    (#AirConditioner).switch_on()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,3.244
318,3,1,4,습도가 80% 이상이 되면 블라인드를 내려 줘.,Lower the blinds when the humidity is above 80%., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0)\n(#Blind).blind_close()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Dehumidifier).dehumidifierState_currentState ==""}",0.522,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Blind).blind_close()\n}'}]",0.9,0,3.612,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Blind).blindLevel_setBlindLevel(0)\n}'}]",0.4,0,4.717,"[{'name': 'LowerBlindOnHighHumidity', 'cron': '', 'period': 1000, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Blind).blind_close()\n}'}]",0.8,0,1.705,"[{'name': 'LowerBlindsWhenHighHumidity', 'cron': '', 'period': 1000, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  all(#Blind).blind_close()\n}'}]",0.8,0,2.616
319,3,1,4,블라인드가 닫히면 ‘블라인드가 닫혔습니다’라고 말해 줘.,"When the blinds are closed, say 'Blinds are closed'.", ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#Blind).blind_blind == \""closed\"")\n(#Speaker).mediaPlayback_speak(\""Blinds are closed\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowState_isOpen == true) {\\n  (#Blind).blindControl_close()\\n""}",0.482,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Blind).blind_blind == ""closed""\n(#Speaker).mediaPlayback_speak(""Blinds are closed"")'}]",1,0,3.459,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#Blind).blind_blind == ""closed""\n(#Speaker).mediaPlayback_speak(""블라인드가 닫혀 있습니다."")'}]",0.9,0,5.166,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif (all(#Blind).blind_blind == closed) {\n  if (triggered == false) {\n    (#Speaker).mediaPlayback_speak(""블라인드가 닫혀 있습니다."")\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.6,0,2.679,"[{'name': 'BlindsClosedAnnouncement', 'cron': '', 'period': 100, 'code': 'announced := false\nif (all(#Blind).blind_blind == ""closed"") {\n  if (announced == false) {\n    (#Speaker).mediaPlayback_speak(""블라인드가 닫혀 있습니다."")\n    announced = true\n  }\n} else {\n  announced = false\n}'}]",0.7,0,4.485
320,3,1,4,TV가 꺼지면 스피커를 꺼 줘.,Turn off the speakers when the TV is turned off., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#Television).switch_switch == \""off\"")\n(#Speaker).switch_off()""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#MotionDetector).motionDetection_isMotionDetected == true) {\\n  (#Curtain).curtainControl_closeCurtain()\\n  (#Alarm).alarmControl_soundAlarm()\\n""}",0.335,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  (#Speaker).switch_off()\n}'}]",0.8,0,3.288,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  (#Speaker).switch_off()\n}'}]",0.8,0,4.1,"[{'name': 'TurnOffSpeakersWhenTVOff', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  all(#Speaker).switch_off()\n}'}]",0.8,0,1.438,"[{'name': 'TurnOffSpeakersWhenTVOff', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  (#Speaker).switch_off()\n}'}]",0.8,0,2.877
321,3,1,4,커튼이 3번 열렸다 닫히면 조명을 꺼 줘.,Turn off the light when the curtain opens and closes 3 times., ,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""close_count := 0\nprev_state := \""closed\""\nopened := false\ncurr = (#Curtain).curtain_curtain\nif (curr == \""open\"") and (prev_state == \""closed\"") {\n  opened = true\n}\nif (curr == \""closed\"") and (prev_state == \""open\"") and (opened == true) {\n  close_count = close_count + 1\n  opened = false\n}\nprev_state = curr\nif (close_count >= 3) {\n  (#Light).switch_off()\n  break\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowState_isOpen == true) {       (#clock).clock_delay(10000)       (#Curtain).curtainControl_openCurtain()""}",0.381,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") {\n  (#Light).switch_off()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 100, 'code': 'counter := 0\nif ((#Curtain).curtain_curtain == ""open"") {\n  counter += 1\n  if (counter == 3) {\n    (#Light).switch_on()\n    counter := 0\n  }\n}'}]",0.6,0,6.86,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") {\n  (#Light).switch_off()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 100, 'code': 'counter := 0\nif ((#Curtain).curtain_curtain == ""open"") {\n  counter += 1\n  if (counter == 3) {\n    (#Light).switch_on()\n    counter := 0\n  }\n}'}]",0.5,0,7.73,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'count := 0\ncurtainOpened := false\ncurtainClosed := false\nif ((#Curtain).curtain_curtain == ""open"") {\n  if (curtainOpened == false) {\n    curtainOpened = true\n    curtainClosed = false\n  }\n} else if ((#Curtain).curtain_curtain == ""closed"") {\n  if ((curtainOpened == true) and (curtainClosed == false)) {\n    count = count + 1\n    curtainClosed = true\n    curtainOpened = false\n  }\n}\nif (count >= 3) {\n  all(#Light).switch_off()\n  break\n}'}]",0.9,0,3.507,"[{'name': 'CurtainOpenCloseCount', 'cron': '', 'period': 100, 'code': 'count := 0\nlast_state := ""unknown""\ncurr_state = (#Curtain).curtain_curtain\nif ((curr_state == ""open"") or (curr_state == ""closed"")) {\n  if (curr_state != last_state) {\n    count = count + 1\n    last_state = curr_state\n  }\n}\nif (count >= 6) {\n  all(#Light).switch_off()\n  break\n}'}]",0.7,0,3.935
322,4,1,4,제습기가 꺼지면 다시 켜 줘.,Turn the dehumidifier back on when it turns off.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#Dehumidifier).switch_switch == \""off\"")\n(#Dehumidifier).switch_on()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#SectorA.Fan).fanControl_turnOff()""}",0.645,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Dehumidifier).switch_switch == ""off"") {\n  (#Dehumidifier).switch_on()\n}'}]",0.8,0,3.596,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Dehumidifier).switch_switch == ""off"") {\n  (#Dehumidifier).switch_on()\n}'}]",0.8,0,4.452,"[{'name': 'DehumidifierAutoOn', 'cron': '', 'period': 100, 'code': 'dehumidifierWasOn := false\ncurrentState = (#Dehumidifier).switch_switch\nif (currentState == ""on"") {\n  dehumidifierWasOn = true\n} else {\n  if ((currentState == ""off"") and (dehumidifierWasOn == true)) {\n    (#Dehumidifier).switch_on()\n    dehumidifierWasOn = false\n  }\n}'}]",0.7,0,2.669,"[{'name': 'Dehumidifier Auto Restart', 'cron': '', 'period': 1000, 'code': 'turnedOff := false\nif ((#Dehumidifier).switch_switch == ""off"") {\n  if (turnedOff == false) {\n    (#Dehumidifier).switch_on()\n    turnedOff = true\n  }\n} else {\n  turnedOff = false\n}'}]",0.6,0,3.1
323,4,1,4,재실 센서에서 더 이상 감지가 안 되면 ‘문이 열렸습니다’라고 말해 줘.,"When the occupancy sensor no longer detects it, say 'Door is open'.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#PresenceSensor).presenceSensor_presence == \""not present\"")\n(#Speaker).mediaPlayback_speak(\""Door is open\"")""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Sector_B).wind扇_status ==""}",0.606,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#OccupancySensor).presenceSensor_presence == ""not_present""\n(#Speaker).mediaPlayback_speak(""Door is open"")'}]",0.9,0,3.102,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#OccupancySensor).presenceSensor_presence == ""not_present""\n(#Speaker).mediaPlayback_speak(""문이 열려 있습니다."")'}]",0.8,0,4.832,"[{'name': 'SayWhenNoOccupancy', 'cron': '', 'period': 100, 'code': 'no_presence := false\nif ((#OccupancySensor).presenceSensor_presence == present) {\n  no_presence = false\n} else {\n  if (no_presence == false) {\n    (#Speaker).mediaPlayback_speak(""문이 열려 있습니다."")\n    no_presence = true\n  }\n}'}]",0.6,0,2.983,"[{'name': 'Occupancy_NoPresence_Speak', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#OccupancySensor).presenceSensor_presence == not_present) {\n  if (triggered == false) {\n    (#Speaker).mediaPlayback_speak(""문이 열려 있습니다."")\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.884
324,2,1,5,토양 습도가 30% 미만이면 5초 후 급수기를 작동해 줘.,"If the soil humidity is below 30%, wait 5 seconds before activating the waterer.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n  (#Clock).clock_delay(5000)\n  (#Irrigator).irrigatorOperatingState_startWatering()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Fan).fanStatus_hasAnyOddTagEnabled == true) {\\n  (#Irrigator).irrigatorOperatingState_stopAllIrrigation()\\n""}",0.248,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n  wait until(#Clock).clock_delay(5000)\n  (#Irrigator).switch_on()\n}'}]",0.9,0,4.317,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n  wait until(#Clock).clock_delay(5000)\n  (#Irrigator).switch_on()\n}'}]",0.9,0,5.194,"[{'name': 'SoilHumidityWatererDelay', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n  if (triggered == false) {\n    (#Clock).clock_delay(5000)\n    (#Irrigator).switch_on()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.9,0,2.85,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n  (#Clock).clock_delay(5000)\n  (#Irrigator).switch_on()\n}'}]",0.9,0,2.808
325,3,1,5,창문이 열려 있고 온도가 35도 이상이면 10초 대기 후 블라인드를 내려 줘.,"If a window is open and the temperature is above 35 degrees, wait 10 seconds before lowering the blinds.", ,,"{""name"": ""Scenario2"", ""cron"": """", ""period"": -1, ""code"": ""if (((#Window).windowControl_window == \""open\"") and ((#TemperatureSensor).temperatureMeasurement_temperature >= 35.0)) {\n  (#Clock).clock_delay(10000)\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowStatus_taggedWindow ==""}",0.7,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  wait until(#Clock).clock_delay(10000)\n  (#Blind).blindLevel_setBlindLevel(50)\n}'}]",0.7,0,4.907,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  wait until(#Clock).clock_delay(10000)\n  (#Blind).blind_close()\n}'}]",0.9,0,5.483,"[{'name': 'LowerBlindsIfWindowOpenAndHot', 'cron': '', 'period': 100, 'code': ""triggered := false\nif ((any(#Window).windowControl_window == 'open') and (#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(10000)\n    all(#Blind).blind_close()\n  }\n} else {\n  triggered = false\n}""}]",0.85,0,2.33,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((any(#Window).windowControl_window == ""open"") and ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0)) {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(10000)\n    all(#Blind).blind_close()\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.482
326,4,1,5,"습도가 80% 이상이면 3초 뒤 제습기를 켜고, 7초 더 지난 후 창문을 닫아 줘.","If the humidity is above 80%, turn on the dehumidifier after 3 seconds and close the window after another 7 seconds.",,,"{""name"": ""Scenario3"", ""cron"": """", ""period"": -1, ""code"": ""if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0) {\n  (#Clock).clock_delay(3000)\n  (#Dehumidifier).switch_on()\n  (#Clock).clock_delay(7000)\n  (#Window).windowControl_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if (true) {\\n  for (#IrrigationDevice) {\\n    if ((#IrrigationDevice).irrigationDevice_tag % 2 != 0 && (#IrrigationDevice).irrigationDevice_sector ==""}",0.166,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0\nwait until(#Clock).clock_delay(3000)\n(#Dehumidifier).switch_on()\nwait until(#Clock).clock_delay(7000)\n(#Window).windowControl_close()'}]",0.9,0,5.115,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0\nwait until(#Clock).clock_delay(3000)\n(#Dehumidifier).switch_on()\nwait until(#Clock).clock_delay(7000)\n(#Window).windowControl_close()'}]",0.9,0,5.971,"[{'name': 'HumidityDehumidifierWindowControl', 'cron': '', 'period': -1, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Clock).clock_delay(3000)\n  (#Dehumidifier).switch_on()\n  (#Clock).clock_delay(7000)\n  (#Window).windowControl_close()\n}'}]",0.95,0,2.598,"[{'name': 'HumidityDehumidifierWindowControl', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  if (triggered == false) {\n    wait until(true)\n    (#Clock).clock_delay(3000)\n    (#Dehumidifier).switch_on()\n    (#Clock).clock_delay(7000)\n    (#Window).windowControl_close()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.8,0,3.645
327,4,1,5,빛의 세기가 100룩스 이하면 5초 대기 후 LED 조명을 켜 줘.,"If the light intensity is below 100 lux, wait 5 seconds before turning on the LED light.",,,"{""name"": ""Scenario4"", ""cron"": """", ""period"": -1, ""code"": ""if ((#LightSensor).lightLevel_light <= 100.0) {\n  (#Clock).clock_delay(5000)\n  (#Light).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).window_status ==""}",0.595,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#LightSensor).lightLevel_light < 100.0) {\n  wait until(#Clock).clock_delay(5000)\n  (#Light).switch_on()\n}'}]",0.9,0,4.172,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#LightSensor).lightLevel_light < 100.0) {\n  wait until(#Clock).clock_delay(5000)\n  (#Light).switch_on()\n}'}]",0.9,0,5.047,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#LightSensor).lightLevel_light < 100.0) {\n  (#Clock).clock_delay(5000)\n  (#Light).switch_on()\n}'}]",0.95,0,1.699,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#LightSensor).lightLevel_light < 100.0) {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(5000)\n    (#Light).switch_on()\n  }\n} else {\n  triggered = false\n}'}]",0.8,0,3.09
328,4,1,5,급수기를 작동 후 10초 기다렸다가 환풍기를 켜 줘.,"After running the irrigator, wait 10 seconds before turning on the fan.",,,"{""name"": ""Scenario5"", ""cron"": """", ""period"": -1, ""code"": ""(#Irrigator).irrigatorOperatingState_startWatering()\n(#Clock).clock_delay(10000)\n(#Fan).switch_on()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).light_isAllOff() == true) {\\n  (#Window).window_openAllOddTags()\\n""}",0.318,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Irrigator).switch_on()\nwait until(#Irrigator).irrigatorOperatingState_irrigatorOperatingState == ""idle""\n(#Fan).fanControl_setFanSpeed(100)\n(#Fan).switch_on()'}]",0.6,0,4.742,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Timer).switch_on()\nwait until(#Timer).switch_switch == ""off""\n(#Fan).fanControl_setFanSpeed(100)\n(#Fan).switch_on()\nname = ""Scenario2""\ncron = """"\nperiod = 10000\n(#Fan).fanControl_setFanSpeed(100)\n(#Fan).switch_on()'}]",0.5,0,6.486,"[{'name': 'IrrigatorFanDelay', 'cron': '', 'period': 100, 'code': 'waited := false\nirrigating := false\nif ((#Irrigator).irrigatorOperatingState_irrigatorOperatingState == ""watering"") {\n  irrigating = true\n  waited = false\n}\nif ((irrigating == true) and ((#Irrigator).irrigatorOperatingState_irrigatorOperatingState != ""watering"")) {\n  if (waited == false) {\n    (#Clock).clock_delay(10000)\n    waited = true\n    (#Fan).switch_on()\n  }\n  irrigating = false\n}'}]",0.8,0,3.166,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'runningStartTime_ms := 0\nwaitingFanOn := false\nif ((#Irrigator).switch_switch == ""on"") {\n  if (runningStartTime_ms == 0) {\n    runningStartTime_ms = (#Clock).clock_timestamp\n  }\n  waitingFanOn = false\n} else {\n  if ((runningStartTime_ms != 0) and (waitingFanOn == false)) {\n    elapsed = (#Clock).clock_timestamp - runningStartTime_ms\n    if (elapsed >= 10000) {\n      (#Fan).switch_on()\n      waitingFanOn = true\n      runningStartTime_ms = 0\n    }\n  } else if (waitingFanOn == true) {\n    runningStartTime_ms = 0\n  }\n}'}]",0.6,0,4.983
329,4,1,5,"창문이 열려 있으면 5초 후 커튼을 닫고, 10초 더 지난 뒤 블라인드를 닫아 줘.","If the window is open, close the curtains after 5 seconds, and close the blinds after another 10 seconds.",,,"{""name"": ""Scenario6"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Window).windowControl_window == \""open\"") {\n  (#Clock).clock_delay(5000)\n  (#Curtain).curtain_close()\n  (#Clock).clock_delay(10000)\n  (#Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Speaker).speaker_isOn(""}",0.531,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  wait until(#Window).windowControl_window == ""closed""\n  wait until(#Curtain).curtain_curtain == ""closed""\n  wait until(#Blind).blind_blind == ""closed""\n  (#Speaker).mediaPlayback_speak(""All windows, curtains, and blinds are now closed."")\n}'}]",0.5,0,5.926,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  wait until(#Window).windowControl_window == ""closed""\n  wait until(#Blind).blind_blind == ""closed""\n  (#Curtain).curtain_close()\n  wait until(#Blind).blind_blind == ""closed""\n  (#Blind).blind_close()\n}'}]",0.6,0,6.531,"[{'name': 'Window Open Curtain Blind Close', 'cron': '', 'period': 100, 'code': 'step := 0\nwaited := 0\nif ((#Window).windowControl_window == ""open"") {\n  if (step == 0) {\n    waited = 0\n    step = 1\n  }\n  if (step == 1) {\n    waited = waited + 100\n    if (waited >= 5000) {\n      (#Curtain).curtain_close()\n      waited = 0\n      step = 2\n    }\n  } else if (step == 2) {\n    waited = waited + 100\n    if (waited >= 10000) {\n      (#Blind).blind_close()\n      step = 3\n      break\n    }\n  }\n} else {\n  step = 0\n  waited = 0\n  break\n}'}]",0.85,0,4.193,"[{'name': 'CloseCurtainsAndBlindsAfterWindowOpen', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  (#Clock).clock_delay(5000)\n  (#Curtain).curtain_close()\n  (#Clock).clock_delay(10000)\n  (#Blind).blind_close()\n}'}]",1,0,3.15
330,4,1,5,조명이 켜져 있으면 3초 대기 후 조명을 껐다가 3초 뒤 다시 켜 줘.,"If the light is on, wait 3 seconds, turn off the light, and then turn it back on after 3 seconds.",,,"{""name"": ""Scenario7"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Light).switch_switch == \""on\"") {\n  (#Clock).clock_delay(3000)\n  (#Light).switch_off()\n  (#Clock).clock_delay(3000)\n  (#Light).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Blinds).blindsState_checkBlindState ==""}",0.608,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Light).switchLevel_alert()\n  wait until(#Clock).clock_delay(3000)\n  (#Light).switch_on()\n}'}]",0.6,0,4.438,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") {\n  wait until(#Clock).clock_delay(3000)\n  (#Light).switch_off()\n  wait until(#Clock).clock_delay(3000)\n  (#Light).switch_on()\n}'}]",1,0,5.814,"[{'name': 'Light flicker', 'cron': '', 'period': 100, 'code': 'state := 0\nwaitTime := 0\nif (state == 0) {\n  if ((#Light).switch_switch == ""on"") {\n    waitTime = 3000\n    (#Clock).clock_delay(waitTime)\n    all(#Light).switch_off()\n    waitTime = 3000\n    (#Clock).clock_delay(waitTime)\n    all(#Light).switch_on()\n    state = 1\n  }\n} else {\n  break\n}'}]",0.9,0,3.395,"[{'name': 'LightToggleAfterDelay', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Clock).clock_delay(3000)\n  (#Light).switch_off()\n  (#Clock).clock_delay(3000)\n  (#Light).switch_on()\n}'}]",1,0,2.734
331,4,1,5,7초 후에 조명을 끄고 5초 뒤 다시 켜 줘.,Turn off the light after 7 seconds and turn it back on after 5 seconds.,,,"{""name"": ""Scenario8"", ""cron"": """", ""period"": -1, ""code"": ""(#Clock).clock_delay(7000)\n(#Light).switch_off()\n(#Clock).clock_delay(5000)\n(#Light).switch_on()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light_Top).light_isOn == true) {\\n  (#Fan).fan_turnOn()\\n""}",0.326,,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': '(#Light).switchLevel_setLevel(0, 1000)\nwait until(#Clock).clock_delay(7000)\n(#Light).switchLevel_setLevel(100, 1000)\nwait until(#Clock).clock_delay(5000)\n(#Light).switchLevel_setLevel(0, 1000)'}]",0.7,0,7.019,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Light).switch_off()'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(#Clock).clock_delay(7000)\n(#Light).switch_on()\nwait until(#Clock).clock_delay(5000)\n(#Light).switch_off()'}]",0.7,0,6.107,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Clock).clock_delay(7000)\n(#Light).switch_off()\n(#Clock).clock_delay(5000)\n(#Light).switch_on()'}]",1,0,1.691,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Clock).clock_delay(7000)\n(#Light).switch_off()\n(#Clock).clock_delay(5000)\n(#Light).switch_on()'}]",1,0,2.432
332,4,1,5,문이 닫혀 있는데 5초가 지나도 창문이 열려 있지 않으면 블라인드를 열어 줘.,"If the door is closed and the window is not open after 5 seconds, open the blinds.",,,"{""name"": ""Scenario9"", ""cron"": """", ""period"": -1, ""code"": ""if ((#DoorLock).doorControl_door == \""closed\"") {\n  (#Clock).clock_delay(5000)\n  if ((#Window).windowControl_window != \""open\"") {\n      (#Blind).blind_open()\n  }\n}""}","{""cron"": ""0 0 * * *"", ""period"": ""-1"", ""code"": ""if ((#Fan).fanStatus_isOn == false) {\\n  (#Fan).fanControl_turnOff()\\n""}",0.345,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#DoorLock).doorControl_door == ""closed"" and (#Window).windowControl_window == ""unknown"") {\n  wait until(#Window).windowControl_window == ""open""\n  (#Blind).blind_open()\n}'}]",0.6,0,4.438,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#DoorLock).doorControl_door == ""closed"" and (#Window).windowControl_window != ""open"") {\n  wait until(#Window).windowControl_window == ""open""\n  (#Blind).blind_open()\n}'}]",0.6,0,5.27,"[{'name': 'OpenBlindsIfDoorClosedWindowNotOpen', 'cron': '', 'period': 100, 'code': 'triggered := false\nwait until((#DoorLock).doorControl_door == ""closed"")\n(#Clock).clock_delay(5000)\nif ((#Window).windowControl_window != ""open"") and (triggered == false) {\n  (#Blind).blind_open()\n  triggered = true\n}'}]",0.85,0,2.312,"[{'name': 'OpenBlindsIfDoorClosedAndWindowNotOpen', 'cron': '', 'period': 100, 'code': 'triggered := false\nif (((#DoorLock).doorControl_door == ""closed"") and ((#Window).windowControl_window != ""open"")) {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(5000)\n    if (((#DoorLock).doorControl_door == ""closed"") and ((#Window).windowControl_window != ""open"")) {\n      (#Blind).blind_open()\n    }\n  }\n} else {\n  triggered = false\n}'}]",0.8,0,4.25
333,4,1,5,"커튼이 열린 상태라면 2초 뒤 조명을 50으로 낮추고, 다시 4초 기다려서 꺼 줘.","If the curtains are open, turn the lights down to 50 after 2 seconds, then wait another 4 seconds to turn them off.",,,"{""name"": ""Scenario10"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Curtain).curtain_curtain == \""open\"") {\n  (#Clock).clock_delay(2000)\n  (#Light).switchLevel_setLevel(50, 0)\n  (#Clock).clock_delay(4000)\n  (#Light).switch_off()\n}""}","{""cron"": ""0 0 * * 6"", ""period"": ""-1"", ""code"": ""if ((#Irrigator).irrigatorOperatingState_isOn == true) {\\n  (#Irrigator).irrigatorOperatingState_turnOff()\\n""}",0.261,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") {\n  wait until(#Clock).clock_delay(2000)\n  (#Light).switchLevel_setLevel(50, 1000)\n  wait until(#Clock).clock_delay(4000)\n  (#Light).switchLevel_setLevel(0, 1000)\n}'}]",0.8,0,6.2,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") {\n  wait until(#Clock).clock_delay(2000)\n  (#Light).switchLevel_setLevel(50, 1000)\n  wait until(#Clock).clock_delay(4000)\n  (#Light).switchLevel_setLevel(0, 1000)\n}'}]",0.8,0,7.108,"[{'name': 'CurtainLightControl', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"") {\n  (#Clock).clock_delay(2000)\n  (#Light).switchLevel_setLevel(50, 0)\n  (#Clock).clock_delay(4000)\n  (#Light).switch_off()\n}'}]",1,0,2.308,"[{'name': 'DimAndTurnOffLightsAfterCurtainsOpen', 'cron': '', 'period': 100, 'code': 'triggered := false\nstep := 0\nif ((#Curtain).curtain_curtain == open) {\n  if (triggered == false) {\n    triggered = true\n    step = 1\n  }\n  if (step == 1) {\n    (#Clock).clock_delay(2000)\n    all(#Light).switchLevel_setLevel(50, 0)\n    step = 2\n  }\n  if (step == 2) {\n    (#Clock).clock_delay(4000)\n    all(#Light).switch_off()\n    step = 3\n  }\n} else {\n  triggered = false\n  step = 0\n}'}]",0.8,0,5.065
334,6,1,6,5초마다 토양 습도를 측정해서 30% 이하이면 급수기를 켜 줘. 만약 그 때 온도가 35도 이상이면 급수기를 끄고 반복도 종료해 줘.,"Measure soil moisture every 5 seconds, and if it is below 30%, turn on the irrigator. If the temperature is above 35 degrees at that time, turn off the irrigator and stop the loop.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 5000, ""code"": ""soil = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\ntemp = (#TemperatureSensor).temperatureMeasurement_temperature\nif (soil <= 30.0) {\n  (#Irrigator).switch_on()\n  if (temp >= 35.0) {\n      (#Irrigator).switch_off()\n      break\n  }\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#Blind).blindState_currentState ==""}",0.344,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'moistureLevel := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nif (moistureLevel < 30.0) {\n  (#Irrigator).switch_on()\n  wait until(#TemperatureSensor).temperatureMeasurement_temperature > 35.0\n  (#Irrigator).switch_off()\n}'}]",0.7,0,5.988,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'waterLevel := 30.0\ntemperatureThreshold := 35.0\ncurrentHumidity := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\ncurrentTemperature := (#TemperatureSensor).temperatureMeasurement_temperature\nif (currentHumidity < waterLevel) {\n  (#Irrigator).switch_on()\n  wait until(currentTemperature > temperatureThreshold)\n  (#Irrigator).switch_off()\n}'}]",0.7,0,6.874,"[{'name': 'SoilMoistureIrrigationControl', 'cron': '', 'period': 5000, 'code': 'stopLoop := false\nif (stopLoop == false) {\n  soilMoisture = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\n  temperature = (#TemperatureSensor).temperatureMeasurement_temperature\n  if ((soilMoisture < 30.0) and (temperature <= 35.0)) {\n    (#Irrigator).switch_on()\n  } else {\n    (#Irrigator).switch_off()\n  }\n  if (temperature > 35.0) {\n    (#Irrigator).switch_off()\n    stopLoop = true\n    break\n  }\n} else {\n  break\n}'}]",0.85,0,3.58,"[{'name': 'SoilHumidityWaterControl', 'cron': '', 'period': 5000, 'code': 'triggered := false\nsoilHumidity = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\ntemperature = (#TemperatureSensor).temperatureMeasurement_temperature\nif (soilHumidity < 30.0) {\n  if (temperature > 35.0) {\n    (#Irrigator).switch_off()\n    break\n  } else {\n    (#Irrigator).switch_on()\n  }\n} else {\n  (#Irrigator).switch_off()\n}'}]",0.7,0,3.606
335,6,1,6,3초 간격으로 조명을 10번 깜빡여 줘. 깜빡일 때마다 확인해서 비 감지 센서가 비를 감지하는 순간 반복을 중단해 줘.,Blink the light 10 times in 3-second intervals. Check after each blink and stop the loop the moment the rain sensor detects rain.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 3000, ""code"": ""count := 0\n\nif (count >= 10) {\n  break\n}\n(#Light).switch_toggle()\nrain = (#WeatherProvider).weatherProvider_weather\nif (rain == \""rain\"") {\n  break\n}\ncount = count + 1""}","{""cron"": ""* * * * *"", ""period"": ""1000"", ""code"": ""if ((#Irrigator).irrigatorOperatingState_isOn() == false) {\\n  (#clock).clock_delay(10000)\\n""}",0.288,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'repeat := 10\ninterval := 3000\nwhile (repeat > 0) {\n  (#Light).switch_toggle()\n  wait until(wait until(#LightSensor).soundSensor_sound == true)\n  repeat = repeat - 1\n  wait until(#Clock).clock_delay(interval)\n}'}]",0.5,0,4.822,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'counter := 0\nmax_blinks := 10\nwhile (counter < max_blinks) {\n  (#Light).switch_toggle()\n  wait until(#LightSensor).soundSensor_sound == true\n  counter = counter + 1\n  wait until(#LightSensor).soundSensor_sound == false\n  wait until(#Clock).clock_delay(3000)\n}'}]",0.5,0,6.498,"[{'name': 'BlinkLightWithRainStop', 'cron': '', 'period': 3000, 'code': 'blinkCount := 0\nif (any(#WeatherProvider).weatherProvider_weather == ""rain"") {\n  break\n}\nif (blinkCount < 10) {\n  if ((#Light).switch_switch == ""off"") {\n    (#Light).switch_on()\n  } else {\n    (#Light).switch_off()\n  }\n  blinkCount = blinkCount + 1\n} else {\n  (#Light).switch_off()\n  break\n}'}]",0.9,0,2.816,"[{'name': 'BlinkLightWithRainCheck', 'cron': '', 'period': 3000, 'code': 'count := 0\nif ((#WeatherProvider).weatherProvider_weather == ""rain"") {\n  break\n}\nif (count < 10) {\n  (#Light).switch_toggle()\n  count = count + 1\n} else {\n  break\n}'}]",0.9,0,4.29
336,6,1,6,1초마다 선풍기의 전원을 켜고 끄는 토글 동작을 반복해 줘. 매번 동작 직전에 습도를 확인해서 80% 이상이면 반복을 즉시 중단해 줘.,Repeat the toggle action of powering the fan on and off every second. Check the humidity just before each action and stop the loop immediately if it's above 80%.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 1000, ""code"": ""humidity = (#AirQualityDetector).relativeHumidityMeasurement_humidity\nif (humidity >= 80.0) {\n  break\n}\n(#Fan).switch_toggle()""}","{""cron"": """", ""period"": ""10000"", ""code"": ""if ((#Fan).fanState ==""}",0.182,,,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'humidityTriggered := false\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  humidityTriggered = true\n  wait until(humidityTriggered == false)\n}\nfanToggle := false\nif (fanToggle == false) {\n  (#Fan).switch_on()\n  fanToggle = true\n} else {\n  (#Fan).switch_off()\n  fanToggle = false\n}\nif (humidityTriggered == true) {\n  break\n}'}]",0.6,0,6.552,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'humidityThreshold := 80.0\nhighHumidityDetected := false\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity > humidityThreshold) {\n  highHumidityDetected = true\n  wait until(highHumidityDetected == false)\n}\n(#Fan).fanControl_setPercent(50)\n(#Fan).fanControl_setPercent(0)\nif (highHumidityDetected) {\n  break\n}'}]",0.6,0,7.013,"[{'name': 'FanToggleWithHumidityCheck', 'cron': '', 'period': 1000, 'code': 'stopLoop := false\nif (stopLoop == false) {\n  humidity = (#HumiditySensor).relativeHumidityMeasurement_humidity\n  if (humidity > 80.0) {\n    stopLoop = true\n  } else {\n    all(#Fan).switch_toggle()\n  }\n}\nif (stopLoop == true) {\n  break\n}'}]",0.8,0,2.291,"[{'name': 'FanToggleWithHumidityCheck', 'cron': '', 'period': 1000, 'code': 'humidityHigh := false\nif (humidityHigh == false) {\n  humidity = (#HumiditySensor).relativeHumidityMeasurement_humidity\n  if (humidity > 80.0) {\n    humidityHigh = true\n    all(#Fan).switch_off()\n    break\n  }\n  all(#Fan).switch_toggle()\n}'}]",0.7,0,3.448
337,6,1,6,5초마다 블라인드를 10퍼센트씩 닫아줘. 더 이상 못 내릴 때까지.,Close the blinds by 10 percent every 5 seconds. Until you can't lower them anymore.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 5000, ""code"": ""current_level = (#Blind).blindLevel_blindLevel\nif (current_level <= 10) {\n  (#Blind).blindLevel_setBlindLevel(0)\n  break\n}\nnext_level = current_level - 10\n(#Blind).blindLevel_setBlindLevel(next_level)""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#TemperatureSensor).temperature >= 25.0 && (#TemperatureSensor).temperature < 30.0) {\\n  (#AirConditioner).airConditionerState_turnOn()\\n""}",0.656,,,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'currentLevel := (#Blind).blindLevel_blindLevel\nif (currentLevel > 10) {\n  (#Blind).blindLevel_setBlindLevel(currentLevel - 10)\n}'}]",0.7,0,4.18,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'blindLevel := 100\nrepeat := true\nwhile (repeat) {\n  wait until(all(#Blind).blindLevel_blindLevel > blindLevel)\n  all(#Blind).blindLevel_setBlindLevel(blindLevel)\n  blindLevel -= 10\n  if (blindLevel <= 0) {\n    repeat = false\n  }\n}'}]",0.7,0,6.554,"[{'name': 'CloseBlindsGradually', 'cron': '', 'period': 5000, 'code': 'fully_closed := false\nif (fully_closed == false) {\n  level = (#Blind).blindLevel_blindLevel\n  new_level = level - 10\n  if (new_level <= 0) {\n    new_level = 0\n    fully_closed = true\n  }\n  (#Blind).blindLevel_setBlindLevel(new_level)\n} else {\n  break\n}'}]",0.9,0,2.63,"[{'name': 'Close blinds gradually', 'cron': '', 'period': 5000, 'code': 'triggered := false\nif (triggered == false) {\n  level = (#Blind).blindLevel_blindLevel\n  newLevel = level - 10\n  if (newLevel < 0) {\n    newLevel = 0\n  }\n  if (level > 0) {\n    (#Blind).blindLevel_setBlindLevel(newLevel)\n  } else {\n    triggered = true\n    break\n  }\n}'}]",0.8,0,3.435
338,6,1,6,"10초마다 관개기를 켰다가 5초 뒤에 꺼 줘. 관개기를 끌 때, 켤 때 모두 확인해서 일조량이 500룩스 이상이면 관개기를 끄고 반복을 종료해 줘.","Turn on the irrigator every 10 seconds and turn it off after 5 seconds. Check the irrigator both on and off, and if the sunlight is above 500 lux, turn off the irrigator and stop the loop.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 10000, ""code"": ""lux = (#LightSensor).lightLevel_light\nif (lux >= 500.0) {\n  (#Irrigator).switch_off()\n  break\n}\n(#Irrigator).switch_on()\n(#Clock).clock_delay(5000)\nlux = (#LightSensor).lightLevel_light\nif (lux >= 500.0) {\n  (#Irrigator).switch_off()\n  break\n}\n(#Irrigator).switch_off()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Door).doorState ==""}",0.258,,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'sunlightLevel = (#LightSensor).lightLevel_light\nif (sunlightLevel > 500.0) {\n  (#Irrigator).switch_off()\n  wait until(#LightSensor).lightLevel_light <= 500.0\n  (#Irrigator).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 5000, 'code': '(#Irrigator).switch_on()'}, {'name': 'Scenario3', 'cron': '', 'period': 5000, 'code': '(#Irrigator).switch_off()'}]",0.5,0,8.799,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': '(#Irrigator).switch_on()\nwait until(#Clock).clock_delay(5000)\n(#Irrigator).switch_off()\nif ((#LightSensor).lightLevel_light > 500.0) {\n  (#Irrigator).switch_off()\n  period = -1\n}'}]",0.6,0,7.443,"[{'name': 'IrrigatorCycleWithLightCheck', 'cron': '', 'period': 1000, 'code': 'cycleCount := 0\nloopActive := true\nif (loopActive == true) {\n  lightLevel = (#LightSensor).lightLevel_light\n  if (lightLevel > 500.0) {\n    (#Irrigator).switch_off()\n    loopActive = false\n    break\n  }\n  cyclePhase = cycleCount % 10\n  if (cyclePhase < 5) {\n    if ((#Irrigator).switch_switch != ""on"") {\n      (#Irrigator).switch_on()\n    }\n  } else {\n    if ((#Irrigator).switch_switch != ""off"") {\n      (#Irrigator).switch_off()\n    }\n  }\n  cycleCount = cycleCount + 1\n} else {\n  break\n}'}]",0.75,0,4.028,"[{'name': 'IrrigationControl', 'cron': '', 'period': 10000, 'code': 'irrigationOn := false\nif (any(#LightSensor).lightLevel_light > 500) {\n  all(#Irrigator).switch_off()\n  break\n}\nif (irrigationOn == false) {\n  all(#Irrigator).switch_on()\n  irrigationOn = true\n} else {\n  irrigationOn = false\n  wait until((#Clock).clock_delay(5000))\n  all(#Irrigator).switch_off()\n}'}]",0.7,0,3.79
339,6,1,6,2초마다 거실 조명을 켰다 껐다 반복해 줘. 조명을 끌 때마다 확인해서 창문이 열려 있는 게 감지되면 반복을 즉시 중단해 줘.,Turn the living room light on and off every two seconds. Check each time it turns off the light and stop the loop immediately if it detects that a window is open.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 2000, ""code"": ""(#Light).switch_toggle()\nlight_state = (#Light).switch_switch\nif (light_state == \""off\"") {\n  window_state = (#Window).windowControl_window\n  if (window_state == \""open\"") {\n      break\n  }\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""while true {\\n  if ((#PresenceSensor).presenceSensor_isPresent == true) {\\n    (#clock).clock_delay(10000)\\n    (#Light).light_setBrightness((#Light).light_getBrightness())\\n""}",0.365,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'triggered := false\nif ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  triggered = true\n} else {\n  triggered = false\n}\nif (triggered && (#Window).windowControl_window == ""open"") {\n  wait until(false)\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Light).switch_off()\n}'}]",0.6,0,6.987,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'triggered := false\nif ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  triggered = true\n} else {\n  triggered = false\n}\nif (triggered && (#Window).windowControl_window == ""open"") {\n  wait until(false)\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': 'if (triggered && (#Window).windowControl_window == ""open"") {\n  (#Light).switch_off()\n  triggered = false\n}'}]",0.5,0,8.336,"[{'name': 'LivingRoomLightToggle', 'cron': '', 'period': 2000, 'code': 'loop_active := true\nif (loop_active == true) {\n  if ((#Light).switch_switch == ""off"") {\n    (#Light).switch_on()\n  } else {\n    (#Light).switch_off()\n    if (any(#Window).windowControl_window == ""open"") {\n      loop_active = false\n      break\n    }\n  }\n}'}]",0.85,0,2.333,[],0,0,3.344
340,6,1,6,3초마다 텔레비전의 볼륨을 1씩 증가시켜서 5단계가 되면 초기값으로 되돌리는 동작을 반복해 줘. 초기값으로 되돌릴 때 확인해서 움직임이 감지되면 반복을 중단해 줘.,"Every 3 seconds, increase the television volume by 1 level. When it reaches level 5, reset it to the initial value. Repeat this cycle. If motion is detected at the moment of reset, stop the repetition.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 3000, ""code"": ""volume := 0\n\nif (volume >= 5) {\n  motion = (#MotionSensor).motionSensor_motion\n  if (motion == \""active\"") {\n      break\n  }\n  volume = 0\n} else {\n  volume = volume + 1\n}\n(#Television).audioVolume_setVolume(volume)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TV).tv_isOn == false) {\\n  (#clock).clock_delay(10000)\\n  if ((#TV).tv_isOn == true) {\\n    (#TV).tv_turnOn()\\n""}",0.264,,,"[{'name': 'Scenario1', 'cron': '', 'period': 3000, 'code': 'volume_level := 0\nmax_volume := 5\nreset_flag := false\nif (reset_flag == true) {\n  reset_flag = false\n  volume_level = 0\n  (#Television).audioVolume_setVolume(volume_level)\n}\nif (motion_sensor_motion == ""active"") {\n  reset_flag = true\n}\nif (volume_level < max_volume) {\n  volume_level += 1\n  (#Television).audioVolume_setVolume(volume_level)\n}'}]",0.7,0,6.588,"[{'name': 'Scenario1', 'cron': '', 'period': 3000, 'code': 'volume_step := 1\nmax_volume := 100\ncurrent_volume := (#Television).audioVolume_volume\ninitial_volume := current_volume\nwhile (true) {\n  if (current_volume < max_volume) {\n    (#Television).audioVolume_setVolume(current_volume + volume_step)\n    current_volume = (#Television).audioVolume_volume\n  } else {\n    (#Television).audioVolume_setVolume(initial_volume)\n    current_volume = initial_volume\n  }\n  wait until(#MotionSensor).motionSensor_motion == ""inactive""\n  if (current_volume == initial_volume) {\n    break\n  }\n}'}]",0.6,0,8.503,"[{'name': 'TelevisionVolumeCycle', 'cron': '', 'period': 3000, 'code': 'initialVolume := (#Television).audioVolume_volume\ncurrentVolume := initialVolume\nstopCycle := false\nif (stopCycle == false) {\n  newVolume = currentVolume + 1\n  if (newVolume >= 5) {\n    (#Television).audioVolume_setVolume(initialVolume)\n    currentVolume = initialVolume\n    if ((#MotionSensor).motionSensor_motion == active) {\n      stopCycle = true\n    }\n  } else {\n    (#Television).audioVolume_setVolume(newVolume)\n    currentVolume = newVolume\n  }\n}'}]",0.8,0,4.818,"[{'name': 'TV Volume Cycle with Motion Stop', 'cron': '', 'period': 3000, 'code': 'initialVolume := -1\nstep := 0\nmotionDetected := false\nif (initialVolume == -1) {\n  initialVolume = (#Television).audioVolume_volume\n}\nif (motionDetected == false) {\n  step = step + 1\n  vol = (#Television).audioVolume_volume + 1\n  (#Television).audioVolume_setVolume(vol)\n  if (step == 5) {\n    (#Television).audioVolume_setVolume(initialVolume)\n    if ((#MotionSensor).motionSensor_motion == motionEnum.active) {\n      motionDetected = true\n      break\n    }\n    step = 0\n  }\n}'}]",0.7,0,4.179
341,6,1,6,10초마다 블라인드를 완전히 닫아 줘. 그 때마다 확인해서 TV가 켜져 있으면 즉시 반복을 종료해.,"Every 10 seconds, close the blinds completely. Check each time and end the loop immediately if the TV is on.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 10000, ""code"": ""(#Blind).blind_close()\ntv = (#Television).switch_switch\nif (tv == \""on\"") {\n  break\n}""}","{""cron"": ""0 0 * * 1"", ""period"": ""0"", ""code"": ""if ((#Window).windowState_isOpen == true) {\\n  (#Window).windowControl_close()\\n""}",0.523,,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'blindsClosed := false\nwhile (not blindsClosed) {\n  all(#Blind).blindLevel_setBlindLevel(0)\n  wait until((#Television).switch_switch != ""on"")\n  blindsClosed = true\n}'}]",0.6,0,4.428,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'blindsClosed := false\nwhile (not blindsClosed) {\n  all(#Blind).blind_close()\n  wait until((#Television).tvChannel_tvChannel != 0)\n  blindsClosed = true\n}'}]",0.7,0,5.2,"[{'name': 'CloseBlindsEvery10SecondsUnlessTVOn', 'cron': '', 'period': 10000, 'code': 'if ((#Television).switch_switch == ""on"") {\n  break\n}\nall(#Blind).blindLevel_setBlindLevel(0)'}]",0.9,0,1.851,"[{'name': 'CloseBlindsEvery10SecondsUntilTVOff', 'cron': '', 'period': 10000, 'code': 'stopLoop := false\nif (stopLoop == false) {\n  if ((#Television).switch_switch == ""on"") {\n    stopLoop = true\n    break\n  }\n  all(#Blind).blindLevel_setBlindLevel(0)\n}'}]",0.6,0,3.065
342,6,1,6,"2초마다 알람의 사이렌을 1초간 울렸다 꺼지게 하고, 알람의 사이렌을 울릴 때마다 창문이 닫혀 있는지 확인해서 닫혀 있으면 반복을 중단해 줘.","Every two seconds, turn the alarm siren on for 1 second, then turn it off, and every time it turn on the siren, make sure the window is closed and stop the loop if it is.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 2000, ""code"": ""(#Alarm).alarm_siren()\nstate = (#Window).windowControl_window\n(#Clock).clock_delay(1000)\n(#Alarm).alarm_off()\nif (state == \""closed\"") {\n  break\n}""}","{""cron"": ""0 9 * * 1-5"", ""period"": ""-1"", ""code"": ""if ((#Window).window_state ==""}",0.31,,,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'windowClosed := false\nwhile (true) {\n  (#Alarm).alarm_siren()\n  wait until(#Alarm).alarm_alarm == ""siren""\n  (#Alarm).alarm_off()\n  wait until(#Alarm).alarm_alarm == ""off""\n  if ((#Window).windowControl_window == ""closed"") {\n    windowClosed = true\n  }\n  if (windowClosed) {\n    break\n  }\n}'}]",0.7,0,6.075,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'windowClosed := false\nwhile (true) {\n  (#Siren).switch_on()\n  wait until(#Clock).clock_delay(1000)\n  (#Siren).switch_off()\n  wait until(#Clock).clock_delay(1000)\n  if ((#Window).windowControl_window == ""closed"") {\n    windowClosed = true\n  }\n  if (windowClosed) {\n    break\n  }\n}'}]",0.7,0,7.295,"[{'name': 'AlarmSirenEvery2Seconds', 'cron': '', 'period': 100, 'code': 'triggered := false\nif (triggered == false) {\n  if ((#Window).windowControl_window == #Window.windowEnum.closed) {\n    break\n  }\n  (#Alarm).alarm_siren()\n  triggered = true\n  (#Clock).clock_delay(1000)\n  (#Alarm).alarm_off()\n}\nif (triggered == true) {\n  (#Clock).clock_delay(1000)\n  triggered = false\n}'}]",0.85,0,2.576,"[{'name': 'SirenBlareLoop', 'cron': '', 'period': 2000, 'code': 'blare_active := false\nif (blare_active == false) {\n  blare_active = true\n  (#Alarm).alarm_siren()\n  (#Window).windowControl_close()\n  if ((#Window).windowControl_window == closed) {\n    (#Alarm).alarm_off()\n    break\n  }\n  (#Clock).clock_delay(1000)\n  (#Alarm).alarm_off()\n  blare_active = false\n}'}]",0.8,0,3.846
343,6,1,6,5초마다 실내 공기청정기를 ‘자동’ 모드로 전환해 줘. 그 때마다 확인해서 창문이 열려 있으면 모든 반복을 종료해 줘.,"Every 5 seconds, switch the room air purifier to 'auto' mode. Check each time and stop the loop if a window is open.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 5000, ""code"": ""(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode(\""auto\"")\nstate = (#Window).windowControl_window\nif (state == \""open\"") {\n  break\n}""}","{""cron"": ""0 9 * * *"", ""period"": ""-1"", ""code"": ""if ((#Light).light_switch ==""}",0.16,,,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'windowOpen := false\nif (any(#Window).windowControl_window == ""open"") {\n  windowOpen = true\n  break\n}\n(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode(\'auto\')'}, {'name': 'Scenario2', 'cron': '', 'period': 5000, 'code': ""if (windowOpen) {\n  break\n}\n(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')""}]",0.8,0,7.299,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'windowOpen := false\nif (any(#Window).windowControl_window == ""open"") {\n  windowOpen = true\n  break\n}\n(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode(\'quiet\')\nif (windowOpen) {\n  break\n}'}]",0.6,0,6.147,"[{'name': 'AirPurifierAutoMode', 'cron': '', 'period': 5000, 'code': 'loopActive := true\nif (loopActive == true) {\n  if (any(#Window).windowControl_window == open) {\n    loopActive = false\n    break\n  } else {\n    all(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode(auto)\n  }\n}'}]",0.9,0,2.128,"[{'name': 'SilentAirPurifierMode', 'cron': '', 'period': 5000, 'code': 'allWindowOpen := false\nif (allWindowOpen == false) {\n  if (any(#Window).windowControl_window == open) {\n    allWindowOpen = true\n    break\n  }\n  all(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode(""quiet"")\n}'}]",0.6,0,3.1
344,7,1,7,실시간으로 확인해서 토양 습도가 25% 이하로 떨어질 때마다 급수기를 켜고 '급수 시작'이라고 스피커로 출력해줘.,"Check in real-time and turn on the irrigator whenever the soil humidity drops below 25% and announce ""Start watering"" via the speaker.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""triggered := false\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) {\n  if (triggered == false) {\n    (#Irrigator).switch_on()\n    (#Speaker).mediaPlayback_speak(\""Start watering\"")\n    triggered = true\n  }\n} else {\n  triggered = false\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditionerOperatingState_isOff == true && (#Window).windowState_isOpen == true) {       (#Clock).clock_delay(10000)       if ((#HumiditySensor).humiditySensor_getHumidity() > 60) {         (#Blind).blindControl_down()         (#Light).lightControl_off()""}",0.051,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'if (any(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) {\n  (#Irrigator).switch_on()\n  (#Speaker).mediaPlayback_speak(""Start watering"")\n}'}]",0.7,0,4.565,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'if (any(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) {\n  (#Timer).switch_on()\n  (#Speaker).mediaPlayback_speak(""급수 시작"")\n}'}]",0.4,0,6.24,"[{'name': 'SoilHumidityIrrigation', 'cron': '', 'period': 1000, 'code': 'triggered := false\nsoilHumidity = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nif ((soilHumidity < 25.0) and (triggered == false)) {\n  (#Irrigator).switch_on()\n  (#Speaker).mediaPlayback_speak(""급수 시작"")\n  triggered = true\n} else {\n  if (soilHumidity >= 25.0) {\n    triggered = false\n  }\n}'}]",0.85,0,3.479,"[{'name': 'SoilHumidityWateringAnnouncement', 'cron': '', 'period': 1000, 'code': 'triggered := false\nsoilHumidity = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nif (soilHumidity < 25.0) {\n  if (triggered == false) {\n    (#Irrigator).switch_on()\n    (#Speaker).mediaPlayback_speak(""급수 시작"")\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.9,0,4.396
345,7,1,7,1초마다 상태를 확인해서 온도가 35도를 초과할 때마다 환풍기를 켜 줘.,Check the status every 1 second and turn on the fan whenever the temperature exceeds 35 degrees.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 1000, ""code"": ""triggered := false\nif ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  if (triggered == false) {\n    (#Fan).switch_on()\n    triggered = true\n  }\n} else {\n  triggered = false\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""wait until((#HumiditySensor).humidity >= 70)     if ((#Window).windowState ==""}",0.724,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'fanOn := false\nif ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  if (fanOn == false) {\n    (#Fan).switch_on()\n    fanOn = true\n  }\n} else {\n  fanOn = false\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 1000, 'code': 'fanOn := false\nif ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  if (fanOn == false) {\n    (#Fan).switch_on()\n    fanOn = true\n  }\n} else {\n  fanOn = false\n}'}]",0.9,0,8.022,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'fanOn := false\nif ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  if (fanOn == false) {\n    (#Fan).fanControl_setPercent(100)\n    fanOn = true\n  }\n} else {\n  fanOn = false\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 1000, 'code': 'if (fanOn == true) {\n  if ((#TemperatureSensor).temperatureMeasurement_temperature <= 35.0) {\n    (#Fan).fanControl_setPercent(0)\n    fanOn = false\n  }\n}'}]",0.7,0,8.853,"[{'name': 'TemperatureFanControl', 'cron': '', 'period': 1000, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  (#Fan).switch_on()\n}'}]",0.7,0,1.659,"[{'name': 'TemperatureFanControl', 'cron': '', 'period': 1000, 'code': 'if (any(#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\n  all(#Fan).switch_on()\n} else {\n  all(#Fan).switch_off()\n}'}]",0.7,0,2.797
348,7,1,7,현재 날씨에서 비가 감지될 때마다 관개 장치를 꺼 주고 '비가 감지되었습니다'라고 스피커로 출력해줘. 감지는 1분에 한번씩만 하자.,"Whenever rain is detected in the current weather, turn off the irrigator and announce ""Rain detected"" via the speaker. Let's detect only once a minutae.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 60000, ""code"": ""triggered := false\nif ((#WeatherProvider).weatherProvider_weather == \""rain\"") {\n  if (triggered == false) {\n    (#Irrigator).switch_off()\n    (#Speaker).mediaPlayback_speak(\""Rain detected\"")\n    triggered = true\n  }\n} else {\n  triggered = false\n}""}","{""cron"": ""0 7 * * 1"", ""period"": ""-1"", ""code"": ""(#Light).light_setBrightness(20)     wait until (currentTime >= 0 and currentTime < 86400)     while (true) {       if ((#MotionSensor).motionSensor_isMotionDetected == true) {         (#Blind).blind_open()         (#Curtain).curtain_open()         (#Curtain).curtain_close()         if ((#Window).window_isOpen == true) {           (#Fan).fan_turnOn()""}",0.074,,,"[{'name': 'Scenario1', 'cron': '*/1 * * * *', 'period': 10000, 'code': 'if (any(#WeatherProvider).weatherProvider_weather == ""rain"") {\n  (#Irrigator).switch_off()\n  (#Speaker).mediaPlayback_speak(""Rain detected"")\n}'}]",0.7,0,4.863,"[{'name': 'Scenario1', 'cron': '', 'period': 60000, 'code': 'wait until(#WeatherProvider).weatherProvider_weather == ""rain""\n(#Irrigator).switch_off()\n(#Speaker).mediaPlayback_speak(""비 감지"")\nname = ""Scenario2""\ncron = """"\nperiod = 60000\nwait until(#WeatherProvider).weatherProvider_weather == ""rain""\n(#Irrigator).switch_off()\n(#Speaker).mediaPlayback_speak(""비 감지"")'}]",0.6,0,8.36,"[{'name': 'Rain Detection and Irrigator Control', 'cron': '', 'period': 60000, 'code': 'rainDetected := false\nif ((#WeatherProvider).weatherProvider_weather == ""rain"") {\n  if (rainDetected == false) {\n    all(#Irrigator).switch_off()\n    (#Speaker).mediaPlayback_speak(""비 감지"")\n    rainDetected = true\n  }\n} else {\n  rainDetected = false\n}'}]",0.95,0,2.973,"[{'name': 'RainDetectionIrrigationControl', 'cron': '', 'period': 60000, 'code': 'rainPreviouslyDetected := false\nif ((#WeatherProvider).weatherProvider_weather == ""rain"") {\n  if (rainPreviouslyDetected == false) {\n    (#Irrigator).switch_off()\n    (#Speaker).mediaPlayback_speak(""비 감지"")\n    rainPreviouslyDetected = true\n  }\n} else {\n  rainPreviouslyDetected = false\n}'}]",0.95,0,5.012
351,7,1,7,2초마다 상태를 확인해서 TV가 켜질 때마다 스피커도 켜 줘.,Check status every 2 seconds and turn on the speakers whenever the TV turns on.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 2000, ""code"": ""triggered := false\nif ((#Television).switch_switch == \""on\"") {\n  if (triggered == false) {\n    (#Speaker).switch_on()\n    triggered = true\n  }\n} else {\n  triggered = false\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Light).switch_switch ==""}",0.47,,,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'if ((#Television).switch_switch == ""on"") {\n  (#Speaker).switch_on()\n}'}]",0.7,0,4.088,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'tv_on := false\nif ((#Television).switch_switch == ""on"") {\n  if (tv_on == false) {\n    (#Speaker).switch_on()\n    tv_on = true\n  }\n} else {\n  tv_on = false\n}\ntv_on := false\nif ((#Television).switch_switch == ""on"") {\n  if (tv_on == false) {\n    (#Speaker).switch_on()\n    tv_on = true\n  }\n} else {\n  tv_on = false\n}'}]",0.8,0,9.256,"[{'name': 'TurnOnSpeakersWhenTVOn', 'cron': '', 'period': 2000, 'code': 'previous_tv_on := false\ncurrent_tv_on = ((#Television).switch_switch == ""on"")\nif ((current_tv_on == true) and (previous_tv_on == false)) {\n  (#Speaker).switch_on()\n}\nprevious_tv_on = current_tv_on'}]",0.8,0,1.95,"[{'name': 'TurnOnSpeakersWhenTVOn', 'cron': '', 'period': 2000, 'code': 'speakersOnTriggered := false\nif ((#Television).switch_switch == ""on"") {\n  if (speakersOnTriggered == false) {\n    (#Speaker).switch_on()\n    speakersOnTriggered = true\n  }\n} else {\n  speakersOnTriggered = false\n}'}]",0.98,0,3.389
354,7,1,8,토양 습도가 25% 이하가 되면 급수기를 켜고 이후 3초마다 상태를 확인해서 습도가 30% 이상이 될 때까지 급수기를 껐다 켰다 반복해 줘.,"Turn on the irrigator when the soil humidity is below 25% and check the status every 3 seconds thereafter, cycling the irrigator off and on until the humidity is above 30%.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 3000, ""code"": ""active := False\nif (active == False) {\n  wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0)\n  (#Irrigator).switch_on()\n  active = True\n}\nif (active == True) {\n  if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 30.0) {\n      break\n  }\n  (#Irrigator).switch_toggle()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#AirConditioner).airConditionerOperatingState_mode ==""}",0.559,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) {\n  (#Irrigator).switch_on()\n  triggered = true\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 3000, 'code': 'if (triggered) {\n  if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 30.0) {\n    (#Irrigator).switch_off()\n    triggered = false\n  } else {\n    (#Irrigator).switch_toggle()\n  }\n}'}]",0.6,0,8.049,"[{'name': 'Scenario1', 'cron': '', 'period': 3000, 'code': 'waterLevel := 25.0\ntargetLevel := 30.0\nwhile (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= waterLevel {\n  (#Timer).switch_on()\n  wait until(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > targetLevel\n  (#Timer).switch_off()\n  wait until(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= waterLevel\n}'}]",0.5,0,7.481,"[{'name': 'IrrigatorControl', 'cron': '', 'period': 3000, 'code': 'irrigatorOn := false\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) {\n  if (irrigatorOn == false) {\n    (#Irrigator).switch_on()\n    irrigatorOn = true\n  } else {\n    (#Irrigator).switch_off()\n    (#Clock).clock_delay(100)\n    (#Irrigator).switch_on()\n  }\n} else {\n  if (irrigatorOn == true) {\n    (#Irrigator).switch_off()\n    irrigatorOn = false\n    break\n  }\n}'}]",0.6,0,7.006,"[{'name': 'SoilHumidityWateringControl', 'cron': '', 'period': 3000, 'code': 'wateringActive := false\nif ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) and (wateringActive == false) {\n  (#Irrigator).switch_on()\n  wateringActive = true\n}\nif (wateringActive == true) {\n  if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 30.0) {\n    (#Irrigator).switch_off()\n    wateringActive = false\n    break\n  } else {\n    (#Irrigator).switch_toggle()\n  }\n}'}]",0.6,0,4.077
357,7,1,8,"일조량이 200룩스 이하가 되면 4초마다 조명을 켜고, 2초 후에 꺼 주는 동작을 반복해 줘.","When the sunlight is below 200 lux, turn on the light every 4 seconds and turn it off after 2 seconds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 4000, ""code"": ""active := False\nif (active == False) {\n  wait until((#LightSensor).lightLevel_light <= 200.0)\n  active = True\n}\nif (active == True) {\n  (#Light).switch_on()\n  (#Clock).clock_delay(2000)\n  (#Light).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TV).tvState_currentState ==""}",0.406,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#LightSensor).lightLevel_light <= 200.0)\n(#Light).switch_on()'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': '(#Light).switch_off()'}]",0.5,0,4.861,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#LightSensor).lightLevel_light <= 200.0)\n(#Light).switch_on()'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': '(#Light).switch_off()'}]",0.6,0,5.793,"[{'name': 'Sunlight Controlled Light Blink', 'cron': '', 'period': 1000, 'code': 'timer := 0\nlightOn := false\nwait until((#LightSensor).lightLevel_light < 200.0)\ntimer = timer + 1000\nif (timer >= 4000) {\n  (#Light).switch_on()\n  lightOn = true\n}\nif ((lightOn == true) and (timer >= 6000)) {\n  (#Light).switch_off()\n  timer = 0\n  lightOn = false\n}'}]",0.7,0,2.88,"[{'name': 'Light Blink on Low Sunlight', 'cron': '', 'period': 1000, 'code': 'counter := 0\nif ((#LightSensor).lightLevel_light < 200.0) {\n  counter = counter + 1000\n  mod = counter % 6000\n  if ((mod >= 0) and (mod < 4000)) {\n    if ((#Light).switch_switch != ""on"") {\n      (#Light).switch_on()\n    }\n  } else {\n    if ((#Light).switch_switch != ""off"") {\n      (#Light).switch_off()\n    }\n  }\n} else {\n  counter = 0\n  if ((#Light).switch_switch != ""off"") {\n    (#Light).switch_off()\n  }\n}'}]",0.5,0,5.074
359,7,1,8,"조명이 켜지면 블라인드를 닫고, 이후 2초마다 커튼을 열었다 닫았다 반복해 줘.","Close the blinds when the lights come on, then open and close the curtains every two seconds thereafter.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 2000, ""code"": ""active := False\nif (active == False) {\n  wait until((#Light).switch_switch == \""on\"")\n  (#Blind).blind_close()\n  active = True\n}\nif (active == True) {\n  (#Curtain).curtain_open()\n  (#Clock).clock_delay(1000)\n  (#Curtain).curtain_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Door).doorState_isOpen == true) {       if ((#Alarm).alarmState_isOn == false) {         (#Sirens).sirens_activate()""}",0.333,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Blind).blind_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': '(#Curtain).curtain_open()\n(#Curtain).curtain_close()'}]",0.4,0,5.226,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Blind).blind_blind == ""unknown"") {\n  (#Blind).blind_close()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 2000, 'code': 'if ((#Blind).blind_blind == ""closed"") {\n  (#Blind).blind_open()\n  wait until((#Blind).blind_blind == ""open"")\n  (#Blind).blind_close()\n}'}]",0.3,0,7.448,"[{'name': 'BlindCurtainControl', 'cron': '', 'period': 100, 'code': 'blindsClosed := false\ncurtainOpened := false\ncurtainLastToggleTime := 0\nnow := 0\nif ((#Light).switch_switch == ""on"") and (blindsClosed == false) {\n  all(#Blind).blind_close()\n  blindsClosed = true\n  curtainOpened = false\n  curtainLastToggleTime = 0\n} else if (blindsClosed == true) {\n  now = (#Clock).clock_timestamp\n  if (curtainLastToggleTime == 0) {\n    (#Curtain).curtain_open()\n    curtainOpened = true\n    curtainLastToggleTime = now\n  } else {\n    elapsed = now - curtainLastToggleTime\n    if (elapsed >= 2000) {\n      if (curtainOpened == true) {\n        (#Curtain).curtain_close()\n        curtainOpened = false\n      } else {\n        (#Curtain).curtain_open()\n        curtainOpened = true\n      }\n      curtainLastToggleTime = now\n    }\n  }\n}'}]",0.65,0,6.081,"[{'name': 'BlindCloseOnLightOn', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Light).switch_switch == ""on"") {\n  if (triggered == false) {\n    all(#Blind).blind_close()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}, {'name': 'CurtainsOpenCloseEveryTwoSeconds', 'cron': '', 'period': 2000, 'code': 'state := ""open""\nif (state == ""open"") {\n  all(#Curtain).curtain_open()\n  state = ""close""\n} else {\n  all(#Curtain).curtain_close()\n  state = ""open""\n}'}]",0.4,0,4.515
363,7,1,8,"현관 문이 닫히면 즉시 조명을 끄고, 이후 3초마다 경광등을 켜 줘.","Turn off the lights as soon as the front door closes, and then every three seconds thereafter.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 3000, ""code"": ""active := False\nif (active == False) {\n  wait until((#DoorLock).doorControl_door == \""closed\"")\n  (#Light).switch_off()\n  active = True\n}\nif (active == True) {\n  (#Siren).sirenMode_setSirenMode(\""strobe\"")\n}""}","{""cron"": ""0 8 * * *"", ""period"": ""-1"", ""code"": ""(#Light).switch_on()""}",0.976,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#DoorLock).doorControl_door == ""closed"")\n(#Light).switch_off()'}, {'name': 'Scenario2', 'cron': '', 'period': 3000, 'code': '(#Light).switch_off()'}]",0.5,0,4.452,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#DoorLock).doorControl_door == ""closed"")\n(#Light).switch_off()'}, {'name': 'Scenario2', 'cron': '', 'period': 3000, 'code': '(#Light).switch_off()'}]",0.5,0,5.332,"[{'name': 'TurnOffLightsAfterFrontDoorClose', 'cron': '', 'period': 100, 'code': 'turnedOff := false\nwait until((#DoorLock).doorControl_door == ""closed"")\nif (turnedOff == false) {\n  all(#Light).switch_off()\n  turnedOff = true\n} else {\n  all(#Light).switch_off()\n}'}]",0.75,0,2.178,[],0,0,3.652
364,5,1,9,매일 오전 7시에 관개 장치가 꺼져 있고 창문이 닫혀 있으면 관개 장치를 켜고 창문을 열어 줘. 이후 관개 장치가 켜지면 블라인드를 닫아 줘.,"Every morning at 7 am, if the irrigation is off and the windows are closed, turn on the irrigation and open the windows. Then, when the irrigation turns on, close the blinds.",,,"{""name:""Scenario1"", ""cron"":""0 7 * * *"", ""period"":-1, ""code"":""if ((#Irrigator).switch_switch == \""off\"" and (#Window).windowControl_window == \""closed\"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n  wait until((#Irrigator).switch_switch == \""on\"")\n  (#Blind).blind_close()\n}""}","{""cron"": ""0 18 * * *"", ""period"": ""15000"", ""code"": ""if ((#Curtain).curtain_state ==""}",0.353,,,"[{'name': 'Scenario1', 'cron': '0 7 * * *', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"" and (#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until((#Irrigator).switch_switch == ""on"")\n(#Blind).blind_close()'}]",0.8,0,6.415,"[{'name': 'Scenario1', 'cron': '0 7 * * *', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"" and (#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  (#Window).windowControl_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until((#Irrigator).switch_switch == ""on"")\n(#Blind).blind_close()'}]",0.9,0,7.328,"[{'name': 'Morning Irrigation and Window Open', 'cron': '0 7 * * *', 'period': 0, 'code': 'if ((#Irrigator).switch_switch == ""off"" and all(#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  all(#Window).windowControl_open()\n}'}, {'name': 'Close Blinds When Irrigation On', 'cron': '', 'period': -1, 'code': 'wait until((#Irrigator).switch_switch == ""on"")\nall(#Blind).blind_close()'}]",0.9,0,3.146,"[{'name': 'MorningIrrigationAndWindowControl', 'cron': '0 7 * * *', 'period': 0, 'code': 'if ((#Irrigator).switch_switch == ""off"" and all(#Window).windowControl_window == ""closed"") {\n  (#Irrigator).switch_on()\n  all(#Window).windowControl_open()\n}'}, {'name': 'CloseBlindsWhenIrrigationOn', 'cron': '', 'period': 100, 'code': 'irrigationOnTriggered := false\nif ((#Irrigator).switch_switch == ""on"") {\n  if (irrigationOnTriggered == false) {\n    all(#Blind).blind_close()\n    irrigationOnTriggered = true\n  }\n} else {\n  irrigationOnTriggered = false\n}'}]",0.7,0,4.915
366,7,1,9,"실시간으로 확인하여 온도가 28도 이상이면 선풍기를 켜고, 습도가 80% 이상이면 제습기를 켜 줘.","Check in real time, turn on the fan if the temperature is above 28 degrees; and turn on the dehumidifier if the humidity is above 80%.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""temperature = (#TemperatureSensor).temperatureMeasurement_temperature\nhumidity = (#HumiditySensor).relativeHumidityMeasurement_humidity\nif (temperature >= 28.0) {\n  (#Fan).switch_on()\n}\nif (humidity >= 80.0) {\n  (#Dehumidifier).switch_on()\n}""}","{""cron"": ""0 22 * * 5-6"", ""period"": ""3000"", ""code"": ""(#Dehumidifier).dehumidifierControl_onDehumidifier()""}",0.422,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 28.0) {\n  (#Fan).fanControl_setFanSpeed(100)\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 10000, 'code': ""if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode('high')\n}""}]",0.6,0,6.728,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 28.0) {\n  (#Fan).fanControl_setFanSpeed(100)\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 10000, 'code': ""if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Dehumidifier).dehumidifierMode_setDehumidifierMode('dehumidifying')\n}""}]",0.7,0,8.002,"[{'name': 'TemperatureFanDehumidifierControl', 'cron': '', 'period': 1000, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 28.0) {\n  all(#Fan).switch_on()\n} else {\n  all(#Fan).switch_off()\n}\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  all(#Dehumidifier).switch_on()\n} else {\n  all(#Dehumidifier).switch_off()\n}'}]",0.85,0,2.565,"[{'name': 'Fan Control', 'cron': '', 'period': 1000, 'code': 'if ((#TemperatureSensor).temperatureMeasurement_temperature > 28.0) {\n  (#Fan).switch_on()\n} else {\n  (#Fan).switch_off()\n}'}, {'name': 'Dehumidifier Control', 'cron': '', 'period': 1000, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Dehumidifier).switch_on()\n} else {\n  (#Dehumidifier).switch_off()\n}'}]",0.85,0,5.793
368,6,1,9,"주말에는 5초마다 펌프가 꺼져 있으면 켜고, 켜져 있으면 꺼 주고, 선풍기 속도를 10으로 설정해 줘.","On weekends, every 5 seconds, turn the pump on if it's off, off if it's on, and set the fan speed to 10.",,,"{""name"": ""Scenario1"", ""cron"": ""0 0 * * 6,7"", ""period"": 5000, ""code"": ""weekday = (#Clock).clock_weekday\nif ((weekday != \""saturday\"") and (weekday != \""sunday\"")) {\n  break\n}\n(#Fan).fanControl_setFanSpeed(10)\n(#Pump).switch_toggle()""}","{""cron"": ""*/30 * * * *"", ""period"": ""-1"", ""code"": ""if ((#Fan).fanStatus ==""}",0.329,0,,"[{'name': 'Scenario1', 'cron': '0 0 * * 0,6', 'period': 5000, 'code': 'pump_state := """"\nif ((#Clock).clock_weekday == ""saturday"" or (#Clock).clock_weekday == ""sunday"") {\n  if (pump_state == """") {\n    pump_state = (#Pump).switch_switch\n  }\n  if (pump_state == ""off"") {\n    (#Pump).switch_on()\n    (#Fan).fanControl_setFanSpeed(10)\n    pump_state = ""on""\n  } else {\n    (#Pump).switch_off()\n    pump_state = ""off""\n  }\n}'}]",0.7,0,9.321,"[{'name': 'Scenario1', 'cron': '0 0 * * 0,6', 'period': 5000, 'code': 'pump_state := """"\nif (pump_state == """") {\n  pump_state = (#Pump).switch_switch\n}\nif (pump_state == ""off"") {\n  (#Pump).switch_on()\n  (#Fan).fanControl_setFanSpeed(10)\n  pump_state = ""on""\n} else {\n  (#Pump).switch_off()\n  pump_state = ""off""\n}\npump_state := (#Pump).switch_switch'}]",0.2,0,9.612,"[{'name': 'Weekend Pump Toggle and Fan Speed Set', 'cron': '', 'period': 5000, 'code': 'toggleFlag := false\nif ((#Clock).clock_weekday == #Clock.clock_weekday or (#Clock).clock_weekday == #Clock.clock_weekday) {\n  if ((#Pump).switch_switch == ""off"") {\n    (#Pump).switch_on()\n  } else if ((#Pump).switch_switch == ""on"") {\n    (#Pump).switch_off()\n  }\n  (#Fan).fanControl_setFanSpeed(10)\n} else {\n}'}]",0.6,0,3.159,"[{'name': 'Weekend Pump Toggle and Fan Speed', 'cron': '', 'period': 5000, 'code': 'isWeekend := false\nif ((#Clock).clock_weekday == ""saturday"" or (#Clock).clock_weekday == ""sunday"") {\n  isWeekend = true\n} else {\n  isWeekend = false\n  break\n}\nif ((#Pump).switch_switch == ""off"") {\n  (#Pump).switch_on()\n} else {\n  (#Pump).switch_off()\n}\n(#Fan).fanControl_setFanSpeed(10)'}]",0.75,0,4.662
369,7,1,9,"실시간으로 확인하여 움직임이 감지될 때마다 조명을 켜고, 선풍기 속도를 10 높여 줘.",Check in real-time to turn on lights and increase fan speed by 10 whenever motion is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""motion = (#MotionSensor).motionSensor_motion\nif (motion == \""active\"") {\n  (#Light).switch_on()\n  current_speed = (#Fan).fanControl_fanSpeed\n  new_speed = current_speed + 10\n  (#Fan).fanControl_setFanSpeed(new_speed)\n}""}","{""cron"": ""0 0 * * *"", ""period"": ""-1"", ""code"": ""(#TV).tvControl_turnOff()""}",0.462,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).switchLevel_setLevel(#Light).switchLevel_level + 10, 10)\n  (#Fan).fanControl_setFanSpeed(#Fan).fanControl_fanSpeed + 10)\n}'}]",0.8,0,4.801,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  (#Light).switch_on()\n  (#Fan).fanControl_setFanSpeed(#Fan).fanControl_fanSpeed + 10)\n}'}]",0,0,4.945,"[{'name': 'Motion Activated Light and Fan Speed Increase', 'cron': '', 'period': 1000, 'code': 'previousMotionActive := false\nmotionActive = (any(#MotionSensor).motionSensor_motion == ""active"")\nif (motionActive == true) {\n  if (previousMotionActive == false) {\n    all(#Light).switch_on()\n    currentSpeed = (#Fan).fanControl_percent\n    newSpeed = currentSpeed + 10\n    if (newSpeed > 100) {\n      newSpeed = 100\n    }\n    all(#Fan).fanControl_setPercent(newSpeed)\n  }\n  previousMotionActive = true\n} else {\n  previousMotionActive = false\n}'}]",0.8,0,9.104,"[{'name': 'MotionTriggeredLightFan', 'cron': '', 'period': 100, 'code': 'triggered := false\nmotionActive = any(#MotionSensor).motionSensor_motion == ""active""\nif (motionActive == true) {\n  if (triggered == false) {\n    all(#Light).switch_on()\n    currentPercent = 0\n    currentPercent = (#Fan).fanControl_percent\n    newPercent = currentPercent + 10\n    if (newPercent > 100) {\n      newPercent = 100\n    }\n    all(#Fan).fanControl_setPercent(newPercent)\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.8,0,4.144
370,5,1,9,"실시간으로 확인하여 창문이 열려 있으면 블라인드를 닫고, 창문이 닫혀 있으면 커튼을 열어 줘. 또한 실시간으로 확인하여 알람의 사이렌이 울리고 있지 않다면 즉시 알람의 사이렌을 울려 줘.","Check in real time. if the window is open, close the blinds. if it is closed, open the curtains. Also, if the alarm's siren is not sounding, sound it immediately.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""window_status = (#Window).windowControl_window\nif (window_status == \""open\"") {\n  (#Blind).blind_close()\n} else if (window_status == \""closed\"") {\n  (#Curtain).curtain_open()\n}\nalarm_status = (#Alarm).alarm_alarm\nif ((alarm_status != \""siren\"") and (alarm_status != \""both\"")) {\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#TV).tv_volumeController_setVolume((#TV).tv_volumeController_getVolume() + 1)""}",0.384,,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  (#Blind).blind_close()\n} else {\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Alarm).alarm_alarm != ""siren"" and (#Alarm).alarm_alarm != ""both"") {\n  (#Alarm).alarm_siren()\n}'}]",0.9,0,6.678,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'if ((#Window).windowControl_window == ""open"") {\n  (#Blind).blind_close()\n} else {\n  (#Curtain).curtain_open()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'if ((#Alarm).alarm_alarm != ""siren"" and (#Alarm).alarm_alarm != ""both"") {\n  (#Alarm).alarm_siren()\n}'}]",0.6,0,7.4,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'triggeredAlarm := false\nif ((#Window).windowControl_window == ""open"") {\n  (#Blind).blind_close()\n} else if ((#Window).windowControl_window == ""closed"") {\n  (#Curtain).curtain_open()\n}\nif ((#Alarm).alarm_alarm != ""siren"") {\n  if (triggeredAlarm == false) {\n    (#Alarm).alarm_siren()\n    triggeredAlarm = true\n  }\n} else {\n  triggeredAlarm = false\n}'}]",0.9,0,3.3,"[{'name': 'Alarm Siren Control', 'cron': '', 'period': 200, 'code': 'triggered := false\nif ((#Alarm).alarm_alarm != ""siren"") {\n  if (triggered == false) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.5,0,3.864
371,5,1,9,"매주 금요일 오후 6시에 조명이 켜져 있으면 밝기를 30으로 낮추고, TV가 꺼져 있으면 TV를 켜 줘. 선풍기가 꺼져 있으면 선풍기도 켜 줘.","Every Friday at 6pm, if the lights are on, turn them down to 30, and if the TV is off, turn it on. If the fan is off, turn it on.",,,"{""name"": ""Scenario1"", ""cron"": ""0 18 * * 5"", ""period"": 0, ""code"": ""if ((#Light).switch_switch == \""on\"") {\n  (#Light).switchLevel_setLevel(30, 0)\n}\nif ((#Television).switch_switch == \""off\"") {\n  (#Television).switch_on()\n}\nif ((#Fan).switch_switch == \""off\"") {\n  (#Fan).switch_on()\n}""}","{""cron"": ""0 8-23 * * 1-5"", ""period"": ""3600000"", ""code"": ""(#Light).switch_on()""}",0.976,,,"[{'name': 'Scenario1', 'cron': '0 18 * * 5', 'period': 0, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Light).switchLevel_setLevel(30, 10)\n}\nif ((#Television).switch_switch == ""off"") {\n  (#Television).switch_on()\n}\nif ((#Fan).switch_switch == ""off"") {\n  (#Fan).switch_on()\n}'}]",0.95,0,6.259,"[{'name': 'Scenario1', 'cron': '0 18 * * 5', 'period': 0, 'code': 'if ((#Light).switch_switch == ""on"") {\n  (#Light).switchLevel_setLevel(30, 1000)\n}\nif ((#Television).switch_switch == ""off"") {\n  (#Television).switch_on()\n}\nif ((#Fan).switch_switch == ""off"") {\n  (#Fan).switch_on()\n}'}]",0.4,0,7.121,"[{'name': 'FridayEveningAdjustment', 'cron': '0 18 * * 5', 'period': 0, 'code': 'if (any(#Light).switch_switch == ""on"") {\n  all(#Light).switchLevel_setLevel(30, 0)\n}\nif (all(#Television).switch_switch == ""off"") {\n  all(#Television).switch_on()\n}\nif (any(#Fan).switch_switch == ""off"") {\n  all(#Fan).switch_on()\n}'}]",0.95,0,2.924,"[{'name': 'Scenario1', 'cron': '0 18 * * 5', 'period': 0, 'code': 'if (any(#Light).switch_switch == ""on"") {\n  all(#Light).switchLevel_setLevel(30, 0)\n}\nif (all(#Television).switch_switch == ""off"") {\n  all(#Television).switch_on()\n}\nif (any(#Fan).switch_switch == ""off"") {\n  all(#Fan).switch_on()\n}'}]",0.95,0,3.754
373,6,1,9,매일 아침 8시에 스피커가 꺼져 있으면 스피커를 켜고 ‘오늘 날씨입니다’라고 말해 줘. 이후 조명이 꺼져 있으면 켜고 블라인드를 열어 줘.,"Every morning at 8am, if the speaker is off, turn it on and announce 'This is the weather today' via the speaker. Then, if the lights are off, turn them on and open the blinds.",,,"{""name"": ""Scenario1"", ""cron"": ""0 8 * * *"", ""period"": 0, ""code"": ""if ((#Speaker).switch_switch == \""off\"") {\n  (#Speaker).switch_on()\n  (#Speaker).mediaPlayback_speak(\""This is the weather today\"")\n  if ((#Light).switch_switch == \""off\"") {\n    (#Light).switch_on()\n    (#Blind).blind_open()\n  }\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 20.0) {\\n  wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 20.0);\\n  (#Irrigator).irrigatorOperatingState_startWatering()\\n""}",0.864,0,,"[{'name': 'Scenario1', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Speaker).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Speaker).mediaPlayback_speak(""This is the weather today"")\n}'}, {'name': 'Scenario2', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  (#Blind).blind_open()\n}'}]",0.85,0,6.99,"[{'name': 'Scenario1', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Speaker).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Speaker).mediaPlayback_speak(""오늘의 날씨입니다."")\n}'}, {'name': 'Scenario2', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Light).switch_switch == ""off"") {\n  (#Light).switch_on()\n  (#Blind).blind_open()\n}'}]",0.9,0,8.726,"[{'name': 'MorningAnnouncementAndLighting', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Speaker).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Speaker).mediaPlayback_speak(""오늘의 날씨입니다."")\n}\nif (any(#Light).switch_switch == ""off"") {\n  all(#Light).switch_on()\n}\nall(#Blind).blind_open()'}]",0.85,0,3.488,"[{'name': 'MorningRoutine', 'cron': '0 8 * * *', 'period': 0, 'code': 'if ((#Speaker).switch_switch == ""off"") {\n  (#Speaker).switch_on()\n  (#Speaker).mediaPlayback_speak(""오늘의 날씨입니다."")\n}\nif (all(#Light).switch_switch == ""off"") {\n  all(#Light).switch_on()\n  all(#Blind).blind_open()\n}'}]",0.85,0,4.289
374,7,1,10,1초마다 확인하여 관개 장치가 꺼졌다 켜진 횟수가 4번을 초과하고 펌프가 2번 이상 작동했으면 블라인드를 닫고 커튼을 내려 줘.,Check every second and close the blinds and lower the curtains if the number of times the irrigation has turned off and on exceeds 4 and the pump has run more than 2 times.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 1000, ""code"": ""prev_irrigator_state := (#Irrigator).switch_switch\nirrigator_off_to_on_count := 0\nprev_pump_state := (#Pump).switch_switch\npump_on_count := 0\nirrigator_state = (#Irrigator).switch_switch\npump_state = (#Pump).switch_switch\nif ((prev_irrigator_state == \""off\"") and (irrigator_state == \""on\"")) {\n  irrigator_off_to_on_count = irrigator_off_to_on_count + 1\n}\nprev_irrigator_state = irrigator_state\nif ((pump_state == \""on\"") and (prev_pump_state != \""on\"")) {\n  pump_on_count = pump_on_count + 1\n}\nprev_pump_state = pump_state\nif ((irrigator_off_to_on_count > 4) and (pump_on_count >= 2)) {\n  (#Blind).blind_close()\n  (#Curtain).curtain_close()\n  break\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#MotionDetector).motionDetection_isMotionDetected == true) {\\n  for (var1 = 0; var1 < 3; var1++) {\\n    (#Light).switch_on()\\n    (#clock).clock_delay(1000)\\n""}",0.157,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'counter := 0\npumpRunCount := 0\nlastSwitchState := (#Irrigator).switch_switch\nif (#Irrigator).switch_switch != lastSwitchState {\n  counter += 1\n  lastSwitchState := (#Irrigator).switch_switch\n}\nif (#Pump).switch_switch == ""on"" {\n  pumpRunCount += 1\n}\nif (counter > 4 and pumpRunCount > 2) {\n  (#Blind).blind_close()\n  (#Curtain).curtain_close()\n}'}]",0.75,0,7.739,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'pumpOnOffCount := 0\npumpRunCount := 0\nif (any(#Irrigator).switch_switch == ""on"") {\n  pumpOnOffCount += 1\n}\nif (any(#Pump).switch_switch == ""on"") {\n  pumpRunCount += 1\n}\nif (pumpOnOffCount > 4 and pumpRunCount > 2) {\n  all(#Blind).blind_close()\n  all(#Curtain).curtain_close()\n}'}]",0.7,0,8.303,"[{'name': 'IrrigationAndPumpCountCheck', 'cron': '', 'period': 1000, 'code': 'irrigationToggleCount := 0\npumpRunCount := 0\nirrigationPreviouslyOn := false\npumpPreviouslyOn := false\nirrigationCurrentlyOn = (any(#Irrigator).switch_switch == ""on"")\nif ((irrigationCurrentlyOn == true) and (irrigationPreviouslyOn == false)) {\n  irrigationToggleCount = irrigationToggleCount + 1\n}\nirrigationPreviouslyOn = irrigationCurrentlyOn\npumpCurrentlyOn = (any(#Pump).switch_switch == ""on"")\nif ((pumpCurrentlyOn == true) and (pumpPreviouslyOn == false)) {\n  pumpRunCount = pumpRunCount + 1\n}\npumpPreviouslyOn = pumpCurrentlyOn\nif ((irrigationToggleCount > 4) and (pumpRunCount > 2)) {\n  all(#Blind).blind_close()\n  all(#Curtain).curtain_close()\n}'}]",0.9,0,7.534,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'irrigationCount := 0\npumpRunCount := 0\nirrigationWasOn := false\npumpWasOn := false\nif ((#Irrigator).switch_switch == ""on"") {\n  if (irrigationWasOn == false) {\n    irrigationWasOn = true\n  }\n} else {\n  if (irrigationWasOn == true) {\n    irrigationCount = irrigationCount + 1\n    irrigationWasOn = false\n  }\n}\nif ((#Pump).switch_switch == ""on"") {\n  if (pumpWasOn == false) {\n    pumpWasOn = true\n  }\n} else {\n  if (pumpWasOn == true) {\n    pumpRunCount = pumpRunCount + 1\n    pumpWasOn = false\n  }\n}\nif ((irrigationCount > 4) and (pumpRunCount > 2)) {\n  all(#Blind).blind_close()\n  all(#Curtain).curtain_close()\n}'}]",0.8,0,6.531
376,7,1,10,"2초마다 체크해서 매일 오전 6시부터 9시 사이에 조명이 켜져 있는 누적 시간이 10분 이상이고, 관개 장치가 세 번 이상 꺼졌다 켜졌으면 스피커로 '관수 완료되었습니다'라고 말해 줘.","Check every two seconds, and if the cumulative time the lights are on between 6 a.m. and 9 a.m. each day is 10 minutes or more, and the irrigator has been turned off and on three or more times during that same period, announce ""Watering complete"" via the speaker.",,,"{""name"": ""Scenario1"", ""cron"": ""0 6 * * *"", ""period"": 2000, ""code"": ""light_on_duration := 0\nirrigator_toggle_count := 0\nprev_irrigator := \""\""\n\nif ((#Clock).clock_hour < 9) {\n  if ((#Light).switch_switch == \""on\"") {\n    light_on_duration = light_on_duration + 2000\n  }\n\n  current_irrigator = (#Irrigator).switch_switch\n  if ((prev_irrigator == \""on\"") and (current_irrigator == \""off\"")) {\n    irrigator_toggle_count = irrigator_toggle_count + 1\n  }\n  prev_irrigator = current_irrigator\n\n  if ((light_on_duration >= 600000) and (irrigator_toggle_count >= 3)) {\n    (#Speaker).mediaPlayback_speak(\""Watering complete\"")\n    break\n  }\n} else {\n  break\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#HumiditySensor).humiditySensor_getHumidity() >= 80.0) {\\n  (#Blind).blindControl_down()\\n""}",0.637,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'totalOnTime := 0\nwateringCount := 0\nlastSwitchState := (#Light).switch_switch\nstartOfDay := (#Clock).clock_datetime\nif (#Clock).clock_datetime >= 180000 and (#Clock).clock_datetime < 270000 {\n  if (#Light).switch_switch == ""on"" {\n    totalOnTime += 2\n  }\n  if (#Light).switch_switch != lastSwitchState {\n    wateringCount += 1\n  }\n  lastSwitchState := (#Light).switch_switch\n}\nif (#Clock).clock_datetime >= 270000 {\n  startOfDay := (#Clock).clock_datetime\n  totalOnTime := 0\n  wateringCount := 0\n  lastSwitchState := (#Light).switch_switch\n}\nif (#Clock).clock_datetime >= 270000 and (#Clock).clock_datetime < 270000 + 600000 {\n  if (#Irrigator).irrigatorOperatingState_irrigatorOperatingState == ""idle"" and (#Irrigator).switch_switch == ""on"" and wateringCount >= 3 {\n    (#Speaker).mediaPlayback_speak(""Watering complete"")\n  }\n}'}]",0.65,0,14.354,"[{'name': 'Scenario1', 'cron': '', 'period': 2000, 'code': 'totalOnTime := 0\ncycleCount := 0\nlastSwitchState := ""off""\nif ((#Light).switch_switch == ""on"") {\n  totalOnTime += 2\n}\nif (totalOnTime >= 600) {\n  (#Speaker).mediaPlayback_speak(""관개 완료"")\n  totalOnTime = 0\n}\nif (lastSwitchState != (#Light).switch_switch) {\n  cycleCount += 1\n  lastSwitchState = (#Light).switch_switch\n}\nif (cycleCount >= 3) {\n  (#Irrigator).switch_on()\n  (#Irrigator).switch_off()\n  cycleCount = 0\n}'}, {'name': 'Scenario2', 'cron': '0 6 * * *', 'period': 0, 'code': 'totalOnTime := 0\ncycleCount := 0\nlastSwitchState := ""off""\nif ((#Light).switch_switch == ""on"") {\n  totalOnTime += 2\n}\nif (totalOnTime >= 600) {\n  (#Speaker).mediaPlayback_speak(""관개 완료"")\n  totalOnTime = 0\n}\nif (lastSwitchState != (#Light).switch_switch) {\n  cycleCount += 1\n  lastSwitchState = (#Light).switch_switch\n}\nif (cycleCount >= 3) {\n  (#Irrigator).switch_on()\n  (#Irrigator).switch_off()\n  cycleCount = 0\n}'}]",0.5,0,19.25,"[{'name': 'LightOnIrrigatorUsageMonitor', 'cron': '', 'period': 2000, 'code': 'cumulativeLightOnTime := 0\nirrigatorOnOffCount := 0\nlastIrrigatorState := ""off""\ncurrentDay := 0\nannounceDone := false\nif (currentDay == 0) {\n  currentDay = (#Clock).clock_date\n  lastIrrigatorState = (#Irrigator).switch_switch\n}\ncurrentDate = (#Clock).clock_date\ncurrentHour = (#Clock).clock_hour\nif (currentDate != currentDay) {\n  cumulativeLightOnTime = 0\n  irrigatorOnOffCount = 0\n  announceDone = false\n  currentDay = currentDate\n}\nif ((currentHour >= 6) and (currentHour < 9)) {\n  if ((#Light).switch_switch == ""on"") {\n    cumulativeLightOnTime = cumulativeLightOnTime + 2\n  }\n  currentIrrigatorState = (#Irrigator).switch_switch\n  if (currentIrrigatorState != lastIrrigatorState) {\n    irrigatorOnOffCount = irrigatorOnOffCount + 1\n    lastIrrigatorState = currentIrrigatorState\n  }\n  if ((cumulativeLightOnTime >= 600) and (irrigatorOnOffCount >= 3) and (announceDone == false)) {\n    (#Speaker).mediaPlayback_speak(""급수 완료"")\n    announceDone = true\n  }\n}'}]",0.7,0,8.721,"[{'name': 'IrrigationCompletionAlert', 'cron': '', 'period': 2000, 'code': 'lightsOnDuration := 0\nlastCheckMinute := -1\nirrigationOffOnCount := 0\nlastIrrigationSwitch := """"\nirrigationPreviouslyOn := false\nspeakingTriggered := false\ncurrentDay := 0\nif (currentDay != (#Clock).clock_date) {\n  currentDay = (#Clock).clock_date\n  lightsOnDuration = 0\n  irrigationOffOnCount = 0\n  speakingTriggered = false\n  lastIrrigationSwitch = """"\n  irrigationPreviouslyOn = false\n}\nhour = (#Clock).clock_hour\nminute = (#Clock).clock_minute\nif ((hour >= 6) and (hour < 9)) {\n  anyLightOn := any(#Light).switch_switch == ""on""\n  if (anyLightOn == true) {\n    lightsOnDuration = lightsOnDuration + 2\n  }\n}\nirrigationState := (#Irrigator).switch_switch\nif (lastIrrigationSwitch == """") {\n  lastIrrigationSwitch = irrigationState\n}\nif (irrigationState != lastIrrigationSwitch) {\n  if ((lastIrrigationSwitch == ""off"") and (irrigationState == ""on"")) {\n    irrigationOffOnCount = irrigationOffOnCount + 1\n  }\n  lastIrrigationSwitch = irrigationState\n}\nif ((speakingTriggered == false) and (lightsOnDuration >= 600) and (irrigationOffOnCount >= 3) and (irrigationState == ""off"")) {\n  (#Speaker).mediaPlayback_speak(""관개 완료"")\n  speakingTriggered = true\n}'}]",0.7,0,8.901
377,7,1,10,"실시간으로 확인하여 토양 습도 센서 값이 연속으로 3회 15 이하를 기록하고 그 중 두 번째 값이 가장 낮았다면 관개 장치를 켜고 블라인드를 닫아 줘. 단, 3월은 제외하고.","Check in real time, and if the soil moisture sensor value is below 15 three times in a row, and the second value is the lowest, turn on the irrigation device and close the blinds. However, this does not apply to March.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""h1 := 100\nh2 := 100\nh3 := 100\n\nif ((#Clock).clock_month != 3) {\n  h1 = h2\n  h2 = h3\n  h3 = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\n\n  if ((h1 <= 15) and (h2 <= 15) and (h3 <= 15) and (h2 < h1) and (h2 < h3)) {\n    (#Irrigator).switch_on()\n    (#Blind).blind_close()\n  }\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Blind).blindState_currentState ==""}",0.58,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'low_moisture_count := 0\nlowest_moisture := 100.0\nlast_lowest_moisture := 100.0\ncurrent_moisture := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nif (current_moisture < 15.0) {\n  low_moisture_count += 1\n  if (current_moisture < lowest_moisture) {\n    lowest_moisture = current_moisture\n    last_lowest_moisture = current_moisture\n  }\n} else {\n  low_moisture_count = 0\n}\nif (low_moisture_count >= 3) {\n  (#Irrigator).switch_on()\n  (#Blind).blind_close()\n  low_moisture_count = 0\n  lowest_moisture = 100.0\n  last_lowest_moisture = 100.0\n}\nif (month == 3) {\n  low_moisture_count = 0\n  lowest_moisture = 100.0\n  last_lowest_moisture = 100.0\n}'}, {'name': 'Scenario2', 'cron': '0 0 1 * *', 'period': -1, 'code': '(#Blind).blind_open()'}]",0.6,0,14.629,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'low_moisture_count := 0\nlowest_moisture_reading := 100.0\nlast_low_moisture_reading := 100.0\nmonth := (#Clock).clock_month\nif (month != 3) {\n  wait until(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 15.0\n  low_moisture_count += 1\n  last_low_moisture_reading := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\n  if (low_moisture_count >= 2) {\n    if (last_low_moisture_reading <= lowest_moisture_reading) {\n      lowest_moisture_reading := last_low_moisture_reading\n      (#Irrigator).switch_on()\n      (#Blind).blind_close()\n    }\n    low_moisture_count := 0\n  }\n}'}]",0.6,0,11.152,"[{'name': 'SoilMoistureIrrigationControl', 'cron': '', 'period': 1000, 'code': 'count := 0\nvalues := [100.0, 100.0, 100.0]\nif ((#Clock).clock_month == 3) {\n  count = 0\n} else {\n  currentValue = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\n  values = [values[1], values[2], currentValue]\n  belowThreshold = (values[0] < 15.0) and (values[1] < 15.0) and (values[2] < 15.0)\n  secondLowest = (values[1] < values[0]) and (values[1] < values[2])\n  if (belowThreshold and secondLowest) {\n    count = count + 1\n  } else {\n    count = 0\n  }\n  if (count >= 1) {\n    (#Irrigator).switch_on()\n    (#Blind).blind_close()\n    break\n  }\n}'}]",0.85,0,5.526,"[{'name': 'SoilMoistureLowConsecutiveCheck', 'cron': '', 'period': 1000, 'code': 'count := 0\nlowest := 101.0\nsecondIsLowest := false\nif (#Clock).clock_month == 3 {\n  count = 0\n  lowest = 101.0\n  secondIsLowest = false\n  break\n}\nsoil = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\nif (soil <= 15.0) {\n  count = count + 1\n  if (count == 2) {\n    lowest = soil\n    secondIsLowest = true\n  } else if (count == 3) {\n    secondIsLowest = (lowest < soil)\n  } else if (count > 3) {\n    count = 1\n    lowest = 101.0\n    secondIsLowest = false\n  }\n} else {\n  count = 0\n  lowest = 101.0\n  secondIsLowest = false\n}\nif ((count >= 3) and (secondIsLowest == true)) {\n  (#Irrigator).switch_on()\n  all(#Blind).blind_close()\n  count = 0\n  lowest = 101.0\n  secondIsLowest = false\n  break\n}'}]",0.6,0,8.904
386,4,1,11,"실시간으로 확인하여 움직임이 감지되면 5초 대기 후 조명을 켜고, 10초 후 커튼을 열고, 15초 후 펌프가 꺼져 있으면 펌프를 켜 줘.","Check in real-time and turn on the lights after 5 seconds if motion is detected, open the curtains after 10 seconds, turn on the pump if it's off after 15 seconds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#MotionSensor).motionSensor_motion == \""active\"")\n(#Clock).clock_delay(5000)\n(#Light).switch_on()\n(#Clock).clock_delay(10000)\n(#Curtain).curtain_open()\n(#Clock).clock_delay(15000)\nif ((#Pump).switch_switch == \""off\"") {\n  (#Pump).switch_on()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""(#Irrigator).irrigatorOperatingState_startWatering()\\n(#clock).clock_delay(10000)\\n(#Ventilator).ventilatorOperatingState_startVentilating()""}",0.695,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'motionDetected := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (motionDetected == false) {\n    wait until(#Clock).clock_delay(5000)\n    (#Light).switch_on()\n    wait until(#Clock).clock_delay(10000)\n    (#Curtain).curtain_open()\n    wait until(#Pump).switch_switch == ""off""\n    (#Pump).switch_on()\n    motionDetected = true\n  }\n} else {\n  motionDetected = false\n}'}]",0.7,0,7.524,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'motionDetected := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (motionDetected == false) {\n    wait until(#Clock).clock_delay(5000)\n    (#Light).switch_on()\n    wait until(#Clock).clock_delay(10000)\n    (#Curtain).curtain_open()\n    wait until(#Clock).clock_delay(15000)\n    if ((#Pump).switch_switch == ""off"") {\n      (#Pump).switch_on()\n    }\n    motionDetected = true\n  }\n} else {\n  motionDetected = false\n}'}]",0.7,0,9.105,"[{'name': 'MotionTriggeredActions', 'cron': '', 'period': 100, 'code': 'motionDetected := false\nmotionDetectedTime := 0\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (motionDetected == false) {\n    motionDetected = true\n    motionDetectedTime = (#Clock).clock_timestamp\n  }\n} else {\n  motionDetected = false\n  motionDetectedTime = 0\n}\nif (motionDetected == true) {\n  elapsed = (#Clock).clock_timestamp - motionDetectedTime\n  if (elapsed >= 5000) {\n    all(#Light).switch_on()\n  }\n  if (elapsed >= 10000) {\n    all(#Curtain).curtain_open()\n  }\n  if ((elapsed >= 15000) and (any(#Pump).switch_switch == ""off"")) {\n    all(#Pump).switch_on()\n  }\n}'}]",0.75,0,4.128,"[{'name': 'MotionTriggeredActions', 'cron': '', 'period': 100, 'code': 'motionDetected := false\nmotionDetectedTime := 0\ncurrentTime = 0\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (motionDetected == false) {\n    motionDetected = true\n    currentTime = (#Clock).clock_timestamp\n    motionDetectedTime = currentTime\n  } else {\n    currentTime = (#Clock).clock_timestamp\n    elapsed = currentTime - motionDetectedTime\n    if (elapsed >= 5000) {\n      all(#Light).switch_on()\n    }\n    if (elapsed >= 10000) {\n      all(#Curtain).curtain_open()\n    }\n    if (elapsed >= 15000) {\n      if (any(#Pump).switch_switch == ""off"") {\n        all(#Pump).switch_on()\n      }\n    }\n  }\n} else {\n  motionDetected = false\n  motionDetectedTime = 0\n}'}]",0.65,0,6.181
387,3,1,11,"1월 1일에, 실시간으로 확인하여 조명이 꺼지면 3초 대기 후 펌프를 끄고, 5초 후 블라인드를 닫으며, 추가로 7초 후 조명을 다시 켠 다음 알람의 사이렌을 울려 줘.","On January 1, check in real-time and when the lights turns off, wait 3 seconds, turn off the pump, close the blinds after 5 seconds, turn the lights back on after an additional 7 seconds, and sound the alarm's siren.", ,,"{""name"": ""Scenario1"", ""cron"": ""0 0 1 1 *"", ""period"": 0, ""code"": ""wait until((#Light).switch_switch == \""off\"")\nif (((#Clock).clock_month == 1) and ((#Clock).clock_day == 1)) {\n  (#Clock).clock_delay(3000)\n  (#Pump).switch_off()\n  (#Clock).clock_delay(5000)\n  (#Blind).blind_close()\n  (#Clock).clock_delay(7000)\n  (#Light).switch_on()\n  (#Alarm).alarm_siren()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).window_isOpen == true) {\\n  (#clock).clock_delay(5000)\\n  (#Curtain).curtain_control_closeCurtain()\\n  (#clock).clock_delay(10000)\\n  (#Blind).blind_control_closeBlind()\\n""}",0.305,0,,"[{'name': 'Scenario1', 'cron': '0 1 1 * *', 'period': -1, 'code': 'if ((#Clock).clock_date == 20250101) {\n  (#Speaker).mediaPlayback_speak(""Check-in complete. Waiting for lights to turn off."")\n  wait until((#Light).switch_switch == ""off"")\n  (#Pump).switch_off()\n  wait until(#Clock).clock_delay(5000)\n  (#Blind).blind_close()\n  wait until(#Clock).clock_delay(7000)\n  (#Light).switch_on()\n  (#Alarm).alarm_siren()\n}'}]",0.8,0,8.633,"[{'name': 'Scenario1', 'cron': '0 0 1 1 *', 'period': -1, 'code': 'if ((#Clock).clock_date == 20250101) {\n  (#Speaker).mediaPlayback_speak(""체크인 완료. 불이 꺼지기를 기다리는 중입니다."")\n  wait until((#Light).switch_switch == ""off"")\n  (#Speaker).mediaPlayback_speak(""조명이 꺼졌습니다. 펌프를 끄는 중입니다."")\n  (#Pump).switch_off()\n  (#Speaker).mediaPlayback_speak(""블라인드 닫기."")\n  wait until(#Blind).blind_blind == ""closing""\n  (#Speaker).mediaPlayback_speak(""조명을 다시 엽니다."")\n  wait until(#Light).switch_switch == ""off""\n  (#Speaker).mediaPlayback_speak(""조명을 다시 켭니다."")\n  (#Light).switch_on()\n  (#Speaker).mediaPlayback_speak(""경보 사이렌이 울립니다."")\n  (#Alarm).alarm_siren()\n  (#Speaker).mediaPlayback_speak(""알람의 사이렌이 활성화되었습니다."")\n}'}]",0.5,0,19.292,"[{'name': 'January1_LightPumpBlindAlarm', 'cron': '0 0 1 1 *', 'period': 200, 'code': 'lightOffDetected := false\nstep := 0\nstartTime := 0.0\nif (step == 0) {\n  if ((#Light).switch_switch == ""off"") {\n    lightOffDetected = true\n  } else {\n    lightOffDetected = false\n  }\n  if (lightOffDetected == true) {\n    step = 1\n    startTime = (#Clock).clock_timestamp\n  }\n} else if (step == 1) {\n  elapsed = (#Clock).clock_timestamp - startTime\n  if (elapsed >= 3000) {\n    (#Pump).switch_off()\n    step = 2\n    startTime = (#Clock).clock_timestamp\n  }\n} else if (step == 2) {\n  elapsed = (#Clock).clock_timestamp - startTime\n  if (elapsed >= 5000) {\n    (#Blind).blind_close()\n    step = 3\n    startTime = (#Clock).clock_timestamp\n  }\n} else if (step == 3) {\n  elapsed = (#Clock).clock_timestamp - startTime\n  if (elapsed >= 7000) {\n    (#Light).switch_on()\n    (#Alarm).alarm_siren()\n    break\n  }\n}'}]",0.8,0,6.344,"[{'name': 'NewYearLightOutSequence', 'cron': '0 0 1 1 *', 'period': 100, 'code': 'triggered := false\nstep := 0\ntimer := 0\nif (triggered == false) {\n  wait until(any(#Light).switch_switch == ""off"")\n  triggered = true\n  step = 1\n  timer = 0\n}\nif (triggered == true) {\n  timer = timer + period\n  if (step == 1 and timer >= 3000) {\n    all(#Pump).switch_off()\n    step = 2\n    timer = 0\n  }\n  if (step == 2 and timer >= 5000) {\n    all(#Blind).blind_close()\n    step = 3\n    timer = 0\n  }\n  if (step == 3 and timer >= 7000) {\n    all(#Light).switch_on()\n    step = 4\n    timer = 0\n  }\n  if (step == 4) {\n    if (any(#Alarm).alarm_alarmVolume != ""mute"") {\n      all(#Alarm).alarm_siren()\n    } else {\n      all(#Alarm).alarm_siren()\n    }\n    break\n  }\n}'}]",0.8,0,6.937
391,4,1,11,"에어컨이 켜지면 5초 후 블라인드를 닫고, 5초 더 기다린 후 커튼이 열려 있으면 커튼을 닫고, 이후 10초 후 조명 밝기를 10퍼센트로 낮춰 줘.","When the air conditioner turns on, close the blinds after five seconds, wait another five seconds and close the curtains if they're open, and then turn the lights down to 10 percent brightness after 10 seconds.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#AirConditioner).switch_switch == \""on\"")\n(#Clock).clock_delay(5000)\n(#Blind).blind_close()\n(#Clock).clock_delay(5000)\nif ((#Curtain).curtain_curtain == \""open\"") {\n  (#Curtain).curtain_close()\n}\n(#Clock).clock_delay(10000)\n(#Light).switchLevel_setLevel(10, 1)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Curtain).curtain_state ==""}",0.867,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#AirConditioner).airConditionerMode_airConditionerMode == ""cool"")\n(#Blind).blind_close()\n(#Clock).clock_delay(5000)\nif ((#Curtain).curtain_curtain == ""open"") {\n  (#Curtain).curtain_close()\n}\n(#Clock).clock_delay(10000)\n(#Light).switchLevel_setLevel(10, 10)'}]",0.85,0,6.963,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#AirConditioner).switch_switch == ""on"")\n(#Blind).blind_close()\n(#Clock).clock_delay(5000)\nif ((#Curtain).curtain_curtain == ""open"") {\n  (#Curtain).curtain_close()\n}\n(#Clock).clock_delay(10000)\n(#Light).colorControl_setHue(10)\n(#Light).colorControl_setSaturation(10)'}]",0.6,0,8.021,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nphase := 0\nstartTime := 0\nif ((#AirConditioner).switch_switch == ""on"") {\n  if (triggered == false) {\n    triggered = true\n    phase = 1\n    startTime = (#Clock).clock_timestamp\n  }\n} else {\n  triggered = false\n  phase = 0\n}\nif (triggered == true) {\n  currentTime = (#Clock).clock_timestamp\n  elapsed = currentTime - startTime\n  if ((phase == 1) and (elapsed >= 5000)) {\n    all(#Blind).blind_close()\n    phase = 2\n  } else if ((phase == 2) and (elapsed >= 10000)) {\n    if (any(#Curtain).curtain_curtain == ""open"") {\n      all(#Curtain).curtain_close()\n    }\n    phase = 3\n  } else if ((phase == 3) and (elapsed >= 20000)) {\n    all(#Light).switchLevel_setLevel(10, 1000)\n    phase = 4\n  }\n  if (phase == 4) {\n    break\n  }\n}'}]",0.75,0,6.231,"[{'name': 'AC_On_Close_Blinds_Curtains_Lights', 'cron': '', 'period': 100, 'code': 'acOnTriggered := false\nblindsClosed := false\ncurtainsClosed := false\nlightsDimmed := false\nif (((#AirConditioner).switch_switch == ""on"") and (acOnTriggered == false)) {\n  acOnTriggered = true\n  blindsClosed = false\n  curtainsClosed = false\n  lightsDimmed = false\n}\nif (acOnTriggered == true) {\n  if (blindsClosed == false) {\n    wait until((#Clock).clock_timestamp >= (#Clock).clock_timestamp + 5000)\n    all(#Blind).blind_close()\n    blindsClosed = true\n  } else if ((curtainsClosed == false) and (all(#Curtain).curtain_curtain == ""open"")) {\n    wait until((#Clock).clock_timestamp >= (#Clock).clock_timestamp + 10000)\n    all(#Curtain).curtain_close()\n    curtainsClosed = true\n  } else if ((lightsDimmed == false) and (curtainsClosed == true or all(#Curtain).curtain_curtain != ""open"")) {\n    wait until((#Clock).clock_timestamp >= (#Clock).clock_timestamp + 20000)\n    all(#Light).switchLevel_setLevel(10, 1000)\n    lightsDimmed = true\n    break\n  }\n} else {\n  acOnTriggered = false\n  blindsClosed = false\n  curtainsClosed = false\n  lightsDimmed = false\n}'}]",0.7,0,12.77
393,8,1,13,섹터 에이에 있는 선풍기를 꺼 줘.,Turn off the fan in sector A.,"{
  ""sectorA_fan_2"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""even"", ""Fan""]
  },
  ""sectorA_fan_4"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""even"", ""Fan""]
  },
  ""sectorB_fan_1"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""odd"", ""Fan""]
  },
  ""sectorB_fan_3"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""odd"", ""Fan""]
  },
  ""sectorC_fan_1"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorC"", ""odd"", ""Fan""]
  },
  ""sectorC_fan_5"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorC"", ""odd"", ""Fan""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#SectorA #Fan).switch_off()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""count := 0     while (count < 10) {       (#Light).switch_on()       (#clock).delay(3000)       (#Light).switch_off()       (#clock).delay(3000)       if ((#RainSensor).rainSensor_isRaining == true) {         break""}",0.269,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Fan #SectorA).switch_off()'}]",1,0,2.108,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Fan #SectorA).switch_off()'}]",0.4,0,2.913,"[{'name': 'TurnOffSectorAFan', 'cron': '', 'period': -1, 'code': 'all(#SectorA #Fan).switch_off()'}]",0.95,0,1.124,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#SectorA #Fan).switch_off()'}]",0.95,0,2.157
394,8,1,13,섹터 비와 섹터 에이에 있는 선풍기가 모두 켜져 있으면 홀수 태그가 붙은 블라인드 중 하나를 닫아 줘.,"If the fans in Sector B and Sector A are both on, close one of the odd-tagged blinds.","{
  ""sectorA_fan_2"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""even"", ""Fan""]
  },
  ""sectorA_fan_4"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""even"", ""Fan""]
  },
  ""sectorB_fan_1"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""odd"", ""Fan""]
  },
  ""sectorB_fan_3"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""odd"", ""Fan""]
  },
  ""sectorC_fan_5"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorC"", ""odd"", ""Fan""]
  },
  ""sectorC_fan_7"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorC"", ""odd"", ""Fan""]
  },
  ""wall_blind_1"": {
    ""category"": ""Blind"",
    ""tags"": [""Wall"", ""odd"", ""Blind""]
  },
  ""wall_blind_3"": {
    ""category"": ""Blind"",
    ""tags"": [""Wall"", ""odd"", ""Blind""]
  },
  ""wall_blind_2"": {
    ""category"": ""Blind"",
    ""tags"": [""Wall"", ""even"", ""Blind""]
  },
  ""wall_blind_4"": {
    ""category"": ""Blind"",
    ""tags"": [""Wall"", ""even"", ""Blind""]
  },
  ""center_blind_main"": {
    ""category"": ""Blind"",
    ""tags"": [""Center"", ""Blind""]
  },
  ""center_blind_aux"": {
    ""category"": ""Blind"",
    ""tags"": [""Center"", ""Blind""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((all(#Fan #SectorA).switch_switch == \""on\"") and (all(#Fan #SectorB).switch_switch == \""on\"")) {\n  (#Odd #Blind).blind_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""isOn := false     while (true) {       if ((#HumiditySensor).humidityMeasurement_humidity >= 80) {         break""}",0.576,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Fan #SectorB).fanControl_fanSpeed > 0) and ((#Fan #SectorA).fanControl_fanSpeed > 0) {\n  if (any(#Blind).blind_blind == ""open"") {\n    (#Blind).blind_close()\n  }\n}'}]",0.6,0,4.421,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Fan #SectorB).fanControl_fanSpeed > 0) and ((#Fan #SectorA).fanControl_fanSpeed > 0) {\n  if (any(#Blind).blind_blind == ""open"") {\n    (#Blind).blind_close()\n  }\n}'}]",0.5,0,5.23,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all(#SectorB #Fan).switch_switch == ""on"") and (all(#SectorA #Fan).switch_switch == ""on"")) {\n  (#Blind #odd).blind_close()\n}'}]",0.9,0,1.692,"[{'name': 'CloseOddBlindIfFansOn', 'cron': '', 'period': -1, 'code': 'if ((all(#SectorB #Fan).switch_switch == ""on"") and (all(#SectorA #Fan).switch_switch == ""on"")) {\n  (#Blind #odd).blind_close()\n}'}]",0.9,0,2.84
395,8,1,13,"홀수 태그가 붙은 선풍기 중 하나라도 켜져 있으면, 하단부에 있는 모든 관개 장치를 꺼 줘.","If any of the odd-tagged fans are on, turn off all the irrigator at the bottom.","{
  ""ZoneA_Fan_1"": {
    ""category"": ""Fan"",
    ""tags"": [""ZoneA"", ""Odd"", ""Fan""]
  },
  ""ZoneA_Fan_2"": {
    ""category"": ""Fan"",
    ""tags"": [""ZoneA"", ""Even"", ""Fan""]
  },
  ""Sector1_Fan_Upper"": {
    ""category"": ""Fan"",
    ""tags"": [""Sector1"", ""Upper"", ""Odd"", ""Fan""]
  },
  ""Sector1_Fan_Lower"": {
    ""category"": ""Fan"",
    ""tags"": [""Sector1"", ""Lower"", ""Even"", ""Fan""]
  },
  ""Greenhouse_Irrigator_1"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Greenhouse"", ""Lower"", ""Odd"", ""Irrigator""]
  },
  ""Greenhouse_Irrigator_2"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Greenhouse"", ""Lower"", ""Even"", ""Irrigator""]
  },
  ""ZoneB_Irrigator_Upper_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""ZoneB"", ""Upper"", ""Odd"", ""Irrigator""]
  },
  ""ZoneB_Irrigator_Upper_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""ZoneB"", ""Upper"", ""Even"", ""Irrigator""]
  }
}
",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (any(#Odd #Fan).switch_switch == \""on\"") {\n  all(#Lower #Irrigator).switch_off()\n}""}","{""cron"": """", ""period"": ""5000"", ""code"": ""if ((#Blind).blind_getCurrentPosition() < 100) {       (#Blind).blind_controlBlind(10)""}",0.527,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Odd).switch_switch == ""on"") {\n  all(#Lower).switch_off()\n}'}]",0.7,0,2.744,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Odd).switch_switch == ""on"") {\n  all(#Lower).switch_off()\n}'}]",0.7,0,3.554,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Fan #Odd).switch_switch == ""on"") {\n  all(#Irrigator #Lower).switch_off()\n}'}]",0.95,0,1.461,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Fan #Odd).switch_switch == ""on"") {\n  all(#Irrigator #Lower).switch_off()\n}'}]",0.9,0,2.123
396,8,1,13,짝수 태그가 붙은 창문이 열려 있으면 섹터 에이에 있는 선풍기를 꺼 줘.,Turn off the fan in Sector A if an even-tagged window is open.,"{
  ""SectorA_Fan_1"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Odd"", ""Fan""]
  },
  ""SectorA_Fan_2"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Even"", ""Fan""]
  },
  ""SectorA_Fan_3"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Odd"", ""Fan""]
  },
  ""SectorA_Fan_4"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Even"", ""Fan""]
  },
  ""SectorB_Window_1"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Odd"", ""Window""]
  },
  ""SectorB_Window_2"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Even"", ""Window""]
  },
  ""ZoneC_Window_Left"": {
    ""category"": ""Window"",
    ""tags"": [""ZoneC"", ""Odd"", ""Left"", ""Window""]
  },
  ""ZoneC_Window_Right"": {
    ""category"": ""Window"",
    ""tags"": [""ZoneC"", ""Even"", ""Right"", ""Window""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Even #Window).windowControl_window == \""open\"") {\n  (#SectorA #Fan).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""while (true) {       (#Irrigator).irrigatorOperatingState_startIrrigation()       (#clock).clock_delay(10000)       (#Irrigator).irrigatorOperatingState_stopIrrigation()       (#clock).clock_delay(5000)       if ((#Luminometer).luminometer_illuminance > 500) {         break""}",0.091,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Window).windowControl_window == ""open"") {\n  all(#SectorA).switch_off()\n}'}]",0.6,0,2.848,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Window).windowControl_window == ""open"") {\n  all(#SectorA).switch_off()\n}'}]",0.4,0,3.666,"[{'name': 'TurnOffFanIfEvenWindowOpen', 'cron': '', 'period': -1, 'code': 'if (any(#Window #Even).windowControl_window == open) {\n  all(#Fan #SectorA).switch_off()\n}'}]",0.9,0,1.34,"[{'name': 'TurnOffFanIfEvenWindowOpen', 'cron': '', 'period': -1, 'code': 'if (any(#Window #Even).windowControl_window == ""open"") {\n  all(#Fan #SectorA).switch_off()\n}'}]",0.9,0,2.417
397,8,1,13,섹터 비에 있는 홀수 태그가 붙은 관개 장치를 모두 꺼 줘.,Turn off all odd-tagged irrigator in the sector B.,"{
  ""Greenhouse_Irrigator_1"": {
    ""category"": ""Irrigator"",
    ""tags"": [""SectorA"", ""Lower"", ""Odd"", ""Irrigator""]
  },
  ""Greenhouse_Irrigator_2"": {
    ""category"": ""Irrigator"",
    ""tags"": [""SectorA"", ""Lower"", ""Even"", ""Irrigator""]
  },
  ""ZoneB_Irrigator_Upper_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""SectorB"", ""Upper"", ""Odd"", ""Irrigator""]
  },
  ""ZoneB_Irrigator_Upper_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""SectorB"", ""Upper"", ""Even"", ""Irrigator""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""all(#SectorB #Odd #Irrigator).switch_off()""}","{""cron"": """", ""period"": ""-1"", ""code"": ""while (true) {       (#LivingRoomLight).switch_on()       (#clock).delay(2000)       (#LivingRoomLight).switch_off()       (#clock).delay(2000)       if ((#Window).windowState_isOpen == true) {         break""}",0.395,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#SectorB #Odd).switch_off()'}]",0.8,0,2.184,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#SectorB).switch_off()\nname = ""Scenario2""\ncron = """"\nperiod = -1\n(#Odd).switch_off()'}]",0.8,0,3.742,"[{'name': 'TurnOffOddSectorBIrrigators', 'cron': '', 'period': -1, 'code': 'all(#Irrigator #Odd #SectorB).switch_off()'}]",0.95,0,1.253,"[{'name': 'TurnOffOddIrrigatorsInSectorRain', 'cron': '', 'period': -1, 'code': 'all(#Irrigator #Odd #SectorB).switch_off()'}]",0.95,0,2.017
398,8,1,13,상단부에 있는 짝수 태그가 붙은 창문이 열려 있으면 커튼을 닫아 줘.,"If the even-tagged windows at the top are open, close the curtains.","{
  ""GreenhouseA_Window_Top_2"": {
    ""category"": ""Window"",
    ""tags"": [""GreenhouseA"", ""Upper"", ""Even"", ""Window""]
  },
  ""GreenhouseA_Window_Top_4"": {
    ""category"": ""Window"",
    ""tags"": [""GreenhouseA"", ""Upper"", ""Even"", ""Window""]
  },
  ""ZoneB_Window_Upper_Left"": {
    ""category"": ""Window"",
    ""tags"": [""ZoneB"", ""Upper"", ""Even"", ""Left"", ""Window""]
  },
  ""ZoneB_Window_Upper_Right"": {
    ""category"": ""Window"",
    ""tags"": [""ZoneB"", ""Upper"", ""Odd"", ""Right"", ""Window""]
  },
  ""Sector1_Curtain_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""Sector1"", ""Curtain"", ""Left""]
  },
  ""Sector1_Curtain_Right"": {
    ""category"": ""Curtain"",
    ""tags"": [""Sector1"", ""Curtain"", ""Right""]
  },
  ""ZoneC_Curtain_Main"": {
    ""category"": ""Curtain"",
    ""tags"": [""ZoneC"", ""Curtain""]
  },
  ""GreenhouseA_Curtain_Back"": {
    ""category"": ""Curtain"",
    ""tags"": [""GreenhouseA"", ""Curtain"", ""Back""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Upper #Even #Window).windowControl_window == \""open\"") {\n  (#Curtain).curtain_close()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""count := 0     period(3000) {       (#TV).volume_up()       count = count + 1       if (count == 5) {         count = 0         if ((#MotionSensor).motionDetected == true) {           break""}",0.477,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window #Upper #Even).windowControl_window == ""open"") {\n  (#Curtain #Sector1).curtain_close()\n}'}]",0.9,0,3.043,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window #Upper #Even).windowControl_window == ""open"") {\n  (#Curtain #Sector1).curtain_close()\n}'}]",0.6,0,3.842,"[{'name': 'Close Curtains If Even Upper Windows Open', 'cron': '', 'period': -1, 'code': 'if (any(#Window #Even #Upper).windowControl_window == ""open"") {\n  all(#Curtain).curtain_close()\n}'}]",0.9,0,1.503,"[{'name': 'CloseCurtainsIfWindowsOpen', 'cron': '', 'period': -1, 'code': 'if (any(#Window #Even #Upper).windowControl_window == ""open"") {\n  all(#Curtain).curtain_close()\n}'}]",0.9,0,2.272
399,8,1,13,"상단부에 있는 조명이 모두 꺼져 있으면, 홀수 태그가 붙은 모든 창문을 열어 줘.","If all the lights at the top are off, open all the windows tagged with odd numbers.","{
  ""SectorA_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Upper"", ""Right"", ""Light""]
  },
  ""SectorC_Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorC"", ""Upper"", ""Center"", ""Light""]
  },
  ""SectorA_Light_Upper"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Light""]
  },
  ""SectorA_Window_Odd_Left"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Odd"", ""Left"", ""Window""]
  },
  ""SectorB_Window_Odd_Right"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Odd"", ""Right"", ""Window""]
  },
  ""SectorC_Window_Odd_Center"": {
    ""category"": ""Window"",
    ""tags"": [""SectorC"", ""Odd"", ""Center"", ""Window""]
  },
  ""SectorA_Window_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Odd"", ""Window""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (all(#Upper #Light).switch_switch == \""off\"") {\n  all(#Odd #Window).windowControl_open()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""while (true) {\\n  (#Blind).blindControl_setBlind(0)\\n  (#clock).clock_delay(10000)\\n  if ((#TV).tvControl_isOn()) {\\n    break\\n""}",0.329,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Upper).switch_switch == ""off"") {\n  all(#Odd).windowControl_open()\n}'}]",0.7,0,2.802,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Upper).switch_switch == ""off"") {\n  all(#Odd).windowControl_open()\n}'}]",0.9,0,3.648,"[{'name': 'OpenOddWindowsIfTopLightsOff', 'cron': '', 'period': -1, 'code': 'if (all(#Upper #Light).switch_switch == ""off"") {\n  all(#Odd #Window).windowControl_open()\n}'}]",1,0,1.313,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Light #Upper).switch_switch == ""off"") {\n  all(#Window #Odd).windowControl_open()\n}'}]",0.95,0,2.705
400,8,1,13,짝수 태그가 붙은 스피커 중 하나라도 켜져 있으면 섹터 비에 있는 조명을 모두 꺼 줘.,"If any of the even-tagged speakers are on, turn off all lights in the sector B.","{
  ""SectorA_Speaker_Odd_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorA"", ""Odd"", ""Left"", ""Speaker""]
  },
  ""SectorB_Speaker_Odd_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorB"", ""Odd"", ""Right"", ""Speaker""]
  },
  ""SectorC_Speaker_Even_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorC"", ""Even"", ""Left"", ""Speaker""]
  },
  ""SectorB_Speaker_Even_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorB"", ""Even"", ""Right"", ""Speaker""]
  },
  ""SectorB_Light_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Right"", ""Light""]
  },
  ""SectorB_Light_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Center"", ""Light""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (any(#Even #Speaker).switch_switch == \""on\"") {\n  all(#SectorB #Light).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""period(2000) {       (#Alarm).alarmControl_sirenOn()       (#clock).clock_delay(1000)       (#Alarm).alarmControl_sirenOff()       if ((#Window).windowState_checkWindowState() ==""}",0.402,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Speaker).switch_switch == ""on"") {\n  all(#SectorB).switch_off()\n}'}]",0.6,0,2.94,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Even).switch_switch == ""on"") {\n  all(#SectorB).switch_off()\n}'}]",0.5,0,3.656,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Speaker #Even).switch_switch == ""on"") {\n  all(#Light #SectorB).switch_off()\n}'}]",0.9,0,1.416,"[{'name': 'TurnOffLightsIfEvenSpeakerOn', 'cron': '', 'period': -1, 'code': 'if (any(#Speaker #Even).switch_switch == ""on"") {\n  all(#Light #SectorB).switch_off()\n}'}]",0.9,0,2.628
401,8,1,13,벽에 있는 홀수 태그가 붙은 모든 블라인드가 열려 있으면 조명을 꺼 줘.,"If all odd-tagged blinds on the wall are open, turn off the lights.","{
  ""SectorA_Fan_Odd_Left"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Odd"", ""Left"", ""Fan""]
  },
  ""SectorA_Fan_Even_Right"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Even"", ""Right"", ""Fan""]
  },
  ""SectorB_Window_Odd_Left"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Odd"", ""Left"", ""Window""]
  },
  ""SectorB_Window_Even_Right"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Even"", ""Right"", ""Window""]
  },
  ""SectorC_Curtain_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorC"", ""Left"", ""Curtain""]
  },
  ""SectorC_Curtain_Right"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorC"", ""Right"", ""Curtain""]
  },
  ""Group1_HumiditySensor_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Left"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Right"", ""HumiditySensor""]
  },
  ""SectorA_Light_Upper"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Light""]
  },
  ""SectorB_Light_Lower"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Light""]
  },
    ""Room1_Blind_Wall_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""Room1"", ""Wall"", ""Odd"", ""Blind""]
  },
  ""Room1_Blind_Wall_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""Room1"", ""Wall"", ""Even"", ""Blind""]
  },
  ""SectorA_Blind_Left_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Left"", ""Odd"", ""Blind""]
  },
  ""SectorA_Blind_Right_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Right"", ""Even"", ""Blind""]
  },
  ""SectorB_Blind_Wall_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Wall"", ""Even"", ""Blind""]
  },
  ""SectorC_Blind_Wall_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorC"", ""Wall"", ""Odd"", ""Blind""]
  },
  ""SectorC_Blind_Center_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorC"", ""Center"", ""Odd"", ""Blind""]
  },
  ""SectorB_Blind_Center_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Center"", ""Even"", ""Blind""]
  },
  ""SectorA_Speaker_Even_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorA"", ""Even"", ""Left"", ""Speaker""]
  },
  ""SectorB_Speaker_Odd_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorB"", ""Odd"", ""Right"", ""Speaker""]
  }
}
",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (all(#Wall #Odd #Blind).blind_blind == \""open\"") {\n  (#Light).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""while (true) {\\n  (#AirPurifier).airPurifierMode_setAuto()\\n  if ((#Window).windowState_isOpen) {\\n    break\\n""}",0.573,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Odd).blind_blind == ""open"") {\n  all(#Light).switch_off()\n}'}]",0.7,0,3.151,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Odd).blind_blind == ""open"") {\n  all(#Light).switch_off()\n}'}]",0.9,0,3.99,"[{'name': 'TurnOffLightsIfOddBlindsOpen', 'cron': '', 'period': -1, 'code': 'if (all(#Blind #Odd #Wall).blind_blind == ""open"") {\n  all(#Light).switch_off()\n}'}]",0.9,0,1.749,"[{'name': 'TurnOffLightsIfOddWallBlindsOpen', 'cron': '', 'period': -1, 'code': 'if (all(#Blind #Odd #Wall).blind_blind == ""open"") {\n  all(#Light).switch_off()\n}'}]",0.9,0,2.759
402,8,1,13,상단부에 있거나 섹터 에이에 있는 조명 중 하나가 켜져 있으면 선풍기를 모두 켜 줘.,"If any of the lights at the top or in sector A are on, turn on all the fans.","{
  ""SectorA_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Light""]
  },
  ""SectorA_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Right"", ""Light""]
  },
  ""SectorA_Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Lower"", ""Center"", ""Light""]
  },
  ""SectorB_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Upper"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Upper"", ""Right"", ""Light""]
  },
  ""SectorB_Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Center"", ""Light""]
  },
  ""SectorA_Fan_Upper_Left"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Fan""]
  },
  ""SectorA_Fan_Upper_Right"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Upper"", ""Right"", ""Fan""]
  },
  ""SectorA_Fan_Lower_Center"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Lower"", ""Center"", ""Fan""]
  },
  ""SectorB_Fan_Upper_Left"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""Upper"", ""Left"", ""Fan""]
  },
  ""SectorB_Fan_Upper_Right"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""Upper"", ""Right"", ""Fan""]
  },
  ""SectorB_Fan_Lower_Center"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""Lower"", ""Center"", ""Fan""]
  },
  ""SectorA_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Lower"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Right"", ""Light""]
  },
  ""SectorA_Fan_Lower_Right"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorA"", ""Lower"", ""Right"", ""Fan""]
  },
  ""SectorB_Fan_Lower_Left"": {
    ""category"": ""Fan"",
    ""tags"": [""SectorB"", ""Lower"", ""Left"", ""Fan""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((any(#Upper #Light).switch_switch == \""on\"") or (any(#SectorA #Light).switch_switch == \""on\"")) {\n  all(#Fan).switch_on()\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""while (true) {\\n  if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) {\\n    (#Irrigator).irrigatorOperatingState_startWatering()\\n    (#Speaker).speakerText_speak(""}",0.533,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Light) or (#SectorA)).switch_switch == ""on"") {\n  all(#Fan).switch_on()\n}'}]",0.8,0,3.061,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Upper).switch_switch == ""on"" or (#SectorA).switch_switch == ""on"") {\n  all(#Fan).switch_on()\n}'}]",,0,4.025,"[{'name': 'FanOnIfTopOrSectorALightOn', 'cron': '', 'period': 100, 'code': 'if ((any(#Upper #Light).switch_switch == ""on"") or (any(#SectorA #Light).switch_switch == ""on"")) {\n  all(#Fan).switch_on()\n} else {\n  all(#Fan).switch_off()\n}'}]",0.85,0,2.181,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((any(#Upper #Light).switch_switch == ""on"") or (any(#SectorA #Light).switch_switch == ""on"")) {\n  all(#Fan).switch_on()\n}'}]",1,0,2.623
403,6,1,14,매일 자정 선풍기가 꺼져 있으면 선풍기를 꺼 줘. 또한 그 때마다 선풍기를 꺼 줘,"Every night at midnight, turn off the fan if it is off. Also, turn off the fan again at that time",,,"{""name"": ""Scenario1"", ""cron"": ""0 0 * * *"", ""period"": 0, ""code"": ""if ((#Fan).switch_switch == \""off\"") {\n  (#Fan).switch_off()\n  (#Fan).switch_off()\n}""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#TemperatureSensor).temperatureSensor_getCurrentTemperature() > 35) {\\n  (#Fan).fanController_turnOnFan()\\n""}",0.472,0,,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': 0, 'code': 'if ((#Fan).switch_switch == ""off"") {\n  (#Fan).switch_on()\n}'}, {'name': 'Scenario2', 'cron': '0 0 * * *', 'period': 0, 'code': 'if ((#Fan).switch_switch == ""on"") {\n  (#Fan).switch_off()\n}'}]",0.5,0,5.543,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': -1, 'code': 'if ((#Fan).fanControl_fanSpeed == 0) {\n  (#Fan).switch_off()\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(#Clock).clock_time == 2400\n(#Fan).switch_off()'}]",,0,6.235,"[{'name': 'Scenario1', 'cron': '0 0 * * *', 'period': -1, 'code': 'if ((#Fan).switch_switch == ""on"") {\n  (#Fan).switch_off()\n}\n(#Fan).switch_off()'}]",0.7,0,1.6,"[{'name': 'TurnOffFanAtMidnightIfOn', 'cron': '0 0 * * *', 'period': 0, 'code': 'if ((#Fan).switch_switch == ""on"") {\n  (#Fan).switch_off()\n}'}, {'name': 'TurnOffFanWheneverOn', 'cron': '', 'period': 100, 'code': 'if ((#Fan).switch_switch == ""on"") {\n  (#Fan).switch_off()\n}'}]",0.6,0,3.385
404,4,1,14,주말에는 관개 장치가 꺼지면 관개 장치를 꺼 줘.,"On weekends, turn off the irrigation when it turns off.",,,"{""name"": ""Scenario1"", ""cron"": ""0 0 * * 6,0"", ""period"": 0, ""code"": ""wait until((#Irrigator).switch_switch == \""off\"")\n(#Irrigator).switch_off()""}","{""cron"": """", ""period"": ""3000"", ""code"": ""if ((#Illuminometer).illuminometer_illuminance < 200) {\\n  (#Light).light_switchOn()\\n""}",0.268,0,,"[{'name': 'Scenario1', 'cron': '0 0 * * 0,6', 'period': -1, 'code': 'if ((#Clock).clock_weekday == ""sunday"" or (#Clock).clock_weekday == ""saturday"") {\n  wait until((#Irrigator).irrigatorOperatingState_irrigatorOperatingState == ""idle"")\n  (#Irrigator).switch_off()\n}'}]",0.6,0,5.624,"[{'name': 'Scenario1', 'cron': '0 0 * * 0,6', 'period': -1, 'code': 'if ((#Clock).clock_weekday == ""sunday"" or (#Clock).clock_weekday == ""saturday"") and (#Irrigator).switch_switch == ""off"") {\n  (#Irrigator).switch_on()\n}'}]",,0,6.014,"[{'name': 'Turn off irrigation on weekends if it turns off', 'cron': '', 'period': 100, 'code': 'isIrrigationOffPrev := true\nwait until(((#Clock).clock_weekday == #Clock.clock_weekday) or ((#Clock).clock_weekday == #Clock.clock_weekday))\nif (((#Irrigator).switch_switch == ""off"") and (isIrrigationOffPrev == false)) {\n  (#Irrigator).switch_off()\n  isIrrigationOffPrev = true\n} else if ((#Irrigator).switch_switch == ""on"") {\n  isIrrigationOffPrev = false\n}'}]",0.6,0,3.628,"[{'name': 'Scenario1', 'cron': '0 0 * * 6,0', 'period': -1, 'code': 'if ((#Irrigator).switch_switch == ""off"") {\n  (#Irrigator).switch_off()\n}'}]",0.7,0,3.243
405,7,1,14,실시간으로 확인하여 블라인드가 닫힌 상태에서 또 닫히면 전등을 켜 줘,"Check in real-time, and turn on the light if the blinds are closed again while already closed.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""wasClosed := false\nif (wasClosed == true) {\n  if ((wasClosed == false) and ((#Blind).blind_blind == \""closed\"")) {\n    (#Light).switch_on()\n  }\n}\nwasClosed = ((#Blind).blind_blind == \""closed\"")""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#Door).doorState_state ==""}",0.241,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'blindsClosed := false\nif ((#Blind).blind_blind == ""closed"") {\n  blindsClosed = true\n} else {\n  blindsClosed = false\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 100, 'code': 'if (blindsClosed == true) {\n  wait until((#Blind).blind_blind == ""closed"")\n  (#Light).switch_on()\n}'}]",0.7,0,6.571,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'blindsClosed := false\nif ((#Blind).blind_blind == ""closed"") {\n  if (blindsClosed == false) {\n    (#Light).switch_on()\n    blindsClosed = true\n  }\n} else {\n  blindsClosed = false\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 100, 'code': 'if ((#Blind).blind_blind == ""closed"") {\n  if (blindsClosed == false) {\n    (#Light).switch_on()\n    blindsClosed = true\n  }\n} else {\n  blindsClosed = false\n}'}]",,0,9.131,"[{'name': 'DetectBlindsClosedAgain', 'cron': '', 'period': 100, 'code': 'blindsPreviouslyClosed := false\nblindsCurrentlyClosed = any(#Blind).blind_blind == ""closed""\nif (blindsCurrentlyClosed == true) {\n  if (blindsPreviouslyClosed == true) {\n    (#Light).switch_on()\n  }\n  blindsPreviouslyClosed = true\n} else {\n  blindsPreviouslyClosed = false\n}'}]",0.7,0,2.453,"[{'name': 'BlindsClosedLightOn', 'cron': '', 'period': 100, 'code': 'blindsClosed := false\nif (all(#Blind).blind_blind == closed) {\n  if (blindsClosed == false) {\n    all(#Light).switch_on()\n    blindsClosed = true\n  }\n} else {\n  blindsClosed = false\n}'}]",0.8,0,2.912
408,6,1,14,1초마다 확인하여 온도가 30도 미만이면서 25도 이상일 때마다 에어컨을 켜 줘.,Check every second to turn on the air conditioner whenever the temperature is below 30 degrees but above 25 degrees.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 1000, ""code"": ""temp = (#TemperatureSensor).temperatureMeasurement_temperature\nif ((temp < 30.0) and (temp >= 25.0)) {\n  (#AirConditioner).switch_on()\n}""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#Light).switch_switch ==""}",0.42,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'if ((#AirConditioner).airConditionerMode_airConditionerMode == ""auto"") {\n  if (((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) and ((#TemperatureSensor).temperatureMeasurement_temperature < 30.0)) {\n    (#AirConditioner).airConditionerMode_setAirConditionerMode(""cool"")\n    (#AirConditioner).airConditionerMode_setTemperature(27.0)\n  } else {\n    (#AirConditioner).airConditionerMode_setAirConditionerMode(""auto"")\n  }\n}'}]",0.75,0,7.44,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': ""if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) and ((#TemperatureSensor).temperatureMeasurement_temperature < 30.0) {\n  (#AirConditioner).airConditionerMode_setTemperature(27.0)\n  (#AirConditioner).airConditionerMode_setAirConditionerMode('cool')\n  (#AirConditioner).switch_on()\n}""}]",,0,6.876,"[{'name': 'TemperatureBasedACControl', 'cron': '', 'period': 1000, 'code': 'if (((#TemperatureSensor).temperatureMeasurement_temperature < 30.0) and ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0)) {\n  if ((#AirConditioner).switch_switch == ""off"") {\n    (#AirConditioner).switch_on()\n  }\n} else {\n  if ((#AirConditioner).switch_switch == ""on"") {\n    (#AirConditioner).switch_off()\n  }\n}'}]",0.8,0,2.885,"[{'name': 'AirConditionerTemperatureControl', 'cron': '', 'period': 1000, 'code': 'if (((#TemperatureSensor).temperatureMeasurement_temperature < 30.0) and ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0)) {\n  (#AirConditioner).switch_on()\n}'}]",0.95,0,3.005
410,7,1,14,실시간으로 확인하여 재실 센서가 감지 상태일 때마다 10초 대기 후 조명의 밝기를 현재 밝기로 맞춰줘.,Check in real-time to adjust lights to their current brightness after a 10-second wait whenever an occupancy sensor is detected.,,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": 100, ""code"": ""wait until((#OccupancySensor).presenceSensor_presence == \""present\"")\n(#Clock).clock_delay(10000)\nlevel = (#Light).switchLevel_level\n(#Light).switchLevel_setLevel(level, 1)""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Door).door_isOpen == true) {\\n  (#Alarm).alarm_light_on()\\n  (#clock).clock_delay(0)\\n""}",0.286,0,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'currentBrightness := (#Light).switchLevel_level\nwait until(#OccupancySensor).presenceSensor_presence == ""present""\n(#Light).switchLevel_setLevel(currentBrightness, 100)'}, {'name': 'Scenario2', 'cron': '', 'period': 100, 'code': 'wait until(#OccupancySensor).presenceSensor_presence == ""not_present""\n(#Light).switchLevel_setLevel(0, 100)'}]",0.6,0,6.034,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'wait until(#OccupancySensor).presenceSensor_presence == ""present""\n(#Light).switchLevel_setLevel(#Light).switchLevel_level, 1000)\nname = ""Scenario2""\ncron = """"\nperiod = 10000\nwait until(#OccupancySensor).presenceSensor_presence == ""not_present""\n(#Light).switchLevel_setLevel(100, 1000)'}]",,0,6.95,"[{'name': 'AdjustLightsToCurrentBrightnessOnOccupancy', 'cron': '', 'period': 100, 'code': 'detected := false\nif (any(#OccupancySensor).presenceSensor_presence == present) {\n  if (detected == false) {\n    detected = true\n    (#Clock).clock_delay(10000)\n    all(#Light).switchLevel_setLevel((#Light).switchLevel_level, 0)\n  }\n} else {\n  detected = false\n}'}]",0.75,0,2.348,"[{'name': 'AdjustLightsAfterOccupancy', 'cron': '', 'period': 100, 'code': 'detected := false\nif (any(#OccupancySensor).presenceSensor_presence == ""present"") {\n  if (detected == false) {\n    detected = true\n    wait until((#Clock).clock_second % 60 != ((#Clock).clock_second - 10) % 60)\n    wait until((#Clock).clock_second % 60 == ((#Clock).clock_second + 10) % 60)\n    brightness = (#Light).switchLevel_level\n    if (brightness >= 0) {\n      all(#Light).switchLevel_setLevel(brightness, 0)\n    }\n  }\n} else {\n  detected = false\n}'}]",0.7,0,4.32
411,7,1,14,TV가 꺼져 있으면 10초 대기 후 다시 TV를 확인하여 켜져 있으면 TV를 켜 줘.,"If the TV is off, wait 10 seconds, then check the TV again and turn it on if it's on.",,,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Television).switch_switch == \""off\"") {\n  (#Clock).clock_delay(10000)\n  if ((#Television).switch_switch == \""on\"") {\n    (#Television).switch_on()\n  }\n}""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#AirPurifier).airPurifierState_getState() ==""}",0.375,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  wait until(#Television).switch_switch == ""on""\n  (#Television).switch_on()\n}'}]",0.7,0,3.729,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Television).switch_switch == ""off"") {\n  wait until(#Clock).clock_delay(10000)\n  if ((#Television).switch_switch == ""on"") {\n    (#Television).switch_on()\n  }\n}'}]",,0,5.434,"[{'name': 'TurnOnTVIfOff', 'cron': '', 'period': 0, 'code': 'if ((#Television).switch_switch == ""off"") {\n  (#Clock).clock_delay(10000)\n  if ((#Television).switch_switch == ""off"") {\n    (#Television).switch_on()\n  }\n}'}]",0.85,0,1.955,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Television).switch_switch == ""off"") {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(10000)\n    if ((#Television).switch_switch == ""off"") {\n      (#Television).switch_on()\n    }\n  }\n} else {\n  triggered = false\n}'}]",0.85,0,3
412,3,1,14,"월, 수, 금에 실시간으로 확인하여 창문이 열려 있지 않으면 창문을 닫아 줘.","Check in real-time on Mon, Wed, Fri and close the window if it's not open.", ,,"{""name"": ""Scenario1"", ""cron"": ""0 0 * * 1,3,5"", ""period"": 100, ""code"": ""if ((#Window).windowControl_window != \""open\"") {\n  (#Window).windowControl_close()\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""while (true) {\\n  if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) {\\n    (#Irrigator).irrigatorOperatingState_startWatering()\\n    (#Speaker).speakerText_speak(""}",0.691,0,,"[{'name': 'Scenario1', 'cron': '0 15 * * 1,3,5', 'period': 10000, 'code': 'windowClosed := false\nif ((#Window).windowControl_window == ""closed"") {\n  windowClosed = true\n}\nif (windowClosed == false) {\n  (#Window).windowControl_close()\n}'}]",0.8,0,5.656,"[{'name': 'Scenario1', 'cron': '0 16 * * 1,3,5', 'period': 10000, 'code': 'if ((#Window).windowControl_window == ""closed"") {\n  (#Window).windowControl_close()\n}'}]",,0,6.272,"[{'name': 'CloseWindowIfNotOpen', 'cron': '0 * * * 1,3,5', 'period': 1000, 'code': 'triggered := false\nif ((#Window).windowControl_window != ""open"") {\n  if (triggered == false) {\n    (#Window).windowControl_close()\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.8,0,2.501,"[{'name': 'CloseWindowOnMonWedFri', 'cron': '0 * * * *', 'period': 10000, 'code': 'if (((#Clock).clock_weekday == monday) or ((#Clock).clock_weekday == wednesday) or ((#Clock).clock_weekday == friday)) {\n  if ((#Window).windowControl_window != open) {\n  } else {\n    (#Window).windowControl_close()\n  }\n} else {\n  break\n}'}]",0.6,0,3.639
413,7,1,15,"매주 평일 오전 9시 창문이 닫혀 있고 이산화탄소 농도가 1000ppm 이상이며 기온이 30도 이상이면, 5초 후 창문을 열고, 팬이 꺼져 있으면 켜 줘. 그 후, 실시간으로 확인하여 1분 연속으로 미세먼지 농도가 50 이상으로 유지되면 창문을 다시 닫고, 팬도 꺼 줘. 만약 그 때 온실 내 습도가 40% 이하이면 가습기를 작동시켜 줘. 또한 마찬가지로 그 때 토양 습도가 25% 이하이고 관개 장치가 꺼져 있으면 물을 줘.","Every weekday at 9 a.m., if the windows are closed, the carbon dioxide concentration is above 1000 ppm, and the temperature is above 30 degrees, open the windows after 5 seconds and turn on the fans if they are off.Then, check in real time and if the particulate matter concentration remains above 50 for one continuous minute, close the windows again and turn off the fans.If the humidity in the greenhouse is below 40% at that time, turn on the humidifier. Similarly, if the soil humidity is below 25% and the irrigation is turned off, water the plants.",,,"{""name"": ""Scenario1"", ""cron"": ""0 9 * * *"", ""period"": 100, ""code"": ""phase := 0\nconsecutive_time := 0\nif ((#Clock).clock_weekday == \""saturday\"") or ((#Clock).clock_weekday == \""sunday\"") {\n  break\n}\n\nif (phase == 0) {\n  if ((#Window).windowControl_window == \""closed\"") and \n  ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide >= 1000.0) and \n  ((#AirQualityDetector).temperatureMeasurement_temperature >= 30.0) {\n    (#Clock).clock_delay(5000)\n    (#Window).windowControl_open()\n    \n    if ((#Fan).switch_switch == \""off\"") {\n      (#Fan).switch_on()\n    }\n    \n    phase = 1  \n  }\n} \nelse if (phase == 1) {\n  if ((#AirQualityDetector).dustSensor_fineDustLevel >= 50) {\n    consecutive_time = consecutive_time + 100  \n  } else {\n    consecutive_time = 0\n  }\n  if (consecutive_time >= 60000) {\n    (#Window).windowControl_close()\n    (#Fan).switch_off()\n    \n    if ((#HumiditySensor).relativeHumidityMeasurement_humidity <= 40.0) {\n      (#Humidifier).switch_on()\n    }\n    \n    if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 25.0) and ((#Irrigator).switch_switch == \""off\"") {\n      (#Irrigator).switch_on()\n    }\n    \n    break\n  }\n}""}","{""cron"": """", ""period"": ""1000"", ""code"": ""if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {\\n  (#Fan).fanOperatingState_startFan()\\n""}",0.656,0,,"[{'name': 'Scenario1', 'cron': '0 9 * * 1-5', 'period': 10000, 'code': 'windowClosed := false\nco2High := false\ntemperatureHigh := false\nparticulateMatterHigh := false\nhumidityLow := false\nsoilHumidityLow := false\nirrigationOff := false\nif (any(#Window).windowControl_window == ""closed"") {\n  windowClosed = true\n}\nif (any(#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) {\n  co2High = true\n}\nif (any(#TemperatureSensor).temperatureMeasurement_temperature > 30.0) {\n  temperatureHigh = true\n}\nif (any(#AirQualityDetector).dustSensor_dustLevel > 50) {\n  particulateMatterHigh = true\n}\nif (any(#HumiditySensor).relativeHumidityMeasurement_humidity < 40.0) {\n  humidityLow = true\n}\nif (any(#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) {\n  soilHumidityLow = true\n}\nif (any(#Irrigator).switch_switch == ""off"") {\n  irrigationOff = true\n}\nif (windowClosed && co2High && temperatureHigh && particulateMatterHigh) {\n  wait until(#Clock).clock_delay(5000)\n  if (any(#Window).windowControl_window == ""closed"") {\n    all(#Window).windowControl_open()\n  }\n  if (any(#Fan).switch_switch == ""off"") {\n    all(#Fan).switch_on()\n  }\n}\nif (particulateMatterHigh) {\n  wait until(#Clock).clock_delay(60000)\n  if (any(#AirQualityDetector).dustSensor_dustLevel > 50) {\n    all(#Window).windowControl_close()\n    all(#Fan).switch_off()\n  }\n  if (humidityLow) {\n    all(#Humidifier).switch_on()\n  }\n}\nif (soilHumidityLow && irrigationOff) {\n  all(#Irrigator).switch_on()\n}'}]",0.7,0,23.116,[],,0,51.049,"[{'name': 'MorningVentilationAndAirQualityControl', 'cron': '0 9 * * 1-5', 'period': 1000, 'code': 'wait_start := false\nwait_pm := false\npm_start_timestamp := 0\nif (((#Window).windowControl_window == ""closed"") and ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and ((#AirQualityDetector).temperatureMeasurement_temperature > 30.0) and (wait_start == false)) {\n  wait_start = true\n  (#Clock).clock_delay(5000)\n  all(#Window).windowControl_open()\n  if (any(#Fan).switch_switch == ""off"") {\n    all(#Fan).switch_on()\n  }\n}\nif (wait_start == true) {\n  pm_concentration_high = false\n  if (any(#AirQualityDetector).dustSensor_dustLevel > 50) {\n    pm_concentration_high = true\n  }\n  current_time = (#Clock).clock_timestamp\n  if (pm_concentration_high == true) {\n    if (wait_pm == false) {\n      wait_pm = true\n      pm_start_timestamp = current_time\n    } else {\n      duration = current_time - pm_start_timestamp\n      if (duration >= 60000) {\n        all(#Window).windowControl_close()\n        all(#Fan).switch_off()\n        pm_soil_humid_check := true\n        wait_pm = false\n        wait_start = false\n      }\n    }\n  } else {\n    wait_pm = false\n  }\n}\nif (defined(pm_soil_humid_check) and pm_soil_humid_check == true) {\n  pm_soil_humid_check = false\n  if ((#AirQualityDetector).relativeHumidityMeasurement_humidity < 40.0) {\n    all(#Humidifier).switch_on()\n  }\n  if (((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 25.0) and (any(#Irrigator).switch_switch == ""off"")) {\n    all(#Irrigator).switch_on()\n  }\n}'}]",0.7,0,8.518,"[{'name': 'MorningVentilationAndAirQualityControl', 'cron': '0 9 * * 1-5', 'period': 1000, 'code': 'ventilationStarted := false\npmOverThresholdStart := 0\nfanWasTurnedOn := false\nwaitAfterOpenDone := false\nweekdays := [""monday"", ""tuesday"", ""wednesday"", ""thursday"", ""friday""]\nif ((#Clock).clock_weekday == ""saturday"" or (#Clock).clock_weekday == ""sunday"") {\n  break\n}\nif (ventilationStarted == false) {\n  if (((all(#Window).windowControl_window == ""closed"") and\n       ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 1000.0) and\n       ((#AirQualityDetector).temperatureMeasurement_temperature > 30.0))) {\n    waitAfterOpenDone = false\n    ventilationStarted = true\n    pmOverThresholdStart = 0\n    fanWasTurnedOn = false\n    wait until(waitAfterOpenDone == true)\n  } else {\n    break\n  }\n}\nif (ventilationStarted == true and waitAfterOpenDone == false) {\n  (#Window).windowControl_open()\n  (#Clock).clock_delay(5000)\n  if (any(#Fan).switch_switch == ""off"") {\n    all(#Fan).switch_on()\n    fanWasTurnedOn = true\n  }\n  waitAfterOpenDone = true\n}\npmLevel = (#AirQualityDetector).dustSensor_dustLevel\ncurrentTime = (#Clock).clock_timestamp\nif ((pmLevel > 50) == true) {\n  if (pmOverThresholdStart == 0) {\n    pmOverThresholdStart = currentTime\n  } else {\n    elapsed = currentTime - pmOverThresholdStart\n    if (elapsed >= 60000) {\n      all(#Window).windowControl_close()\n      if (fanWasTurnedOn == true) {\n        all(#Fan).switch_off()\n      }\n      hum = (#HumiditySensor).relativeHumidityMeasurement_humidity\n      soilHum = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity\n      irrigatorState = (#Irrigator).switch_switch\n      if (hum < 40.0) {\n        all(#Humidifier).switch_on()\n      }\n      if ((soilHum < 25.0) and (irrigatorState == ""off"")) {\n        all(#Irrigator).switch_on()\n      }\n      break\n    }\n  }\n} else {\n  pmOverThresholdStart = 0\n}'}]",0.75,0,12.843
418,7,1,15,매일 밤 10시에 하단부에 있는 창문이 열려 있고 짝수 태그가 붙은 조명이 켜져 있으면 사이렌을 울려 줘. 사이렌을 울렸다면 5초 후 블라인드를 닫아 줘. 사이렌을 울렸는지 상관 없이 5초 후부터는 실시간으로 확인해서 홀수 태그가 붙은 문이 두 번 열렸다 닫히면 커튼을 닫아 줘. 커튼을 닫은 후 문이 두 번 열린 총 시간만큼 알람의 경광등을 켰다가 꺼 줘.,"Sound the siren every night at 10 p.m. if the window located at the bottom is open and a light with an even-numbered tag is on. If the siren is sounded, close the blinds after 5 seconds. Starting 5 seconds later, regardless of whether the siren was triggered, monitor in real-time: when a door with an odd-numbered tag has opened and closed twice in total, close the curtains. After closing the curtains, turn on the alarm's strobe for the total duration the door remained open across the two events, then turn it off.",,,"{""name"": ""Scenario1"", ""cron"": ""0 22 * * *"", ""period"": 100, ""code"": ""state := 0\nsiren_triggered := false\ndoor_open_flag := false\ndoor_open_count := 0\nfirst_open_start := 0\nfirst_open_end := 0\nsecond_open_start := 0\nsecond_open_end := 0\n\nif (state == 0) {\n  if ((#Window #Lower).windowControl_window == \""open\"" and (#Light #Even).switch_switch == \""on\"") {\n    (#Alarm).alarm_siren()\n    siren_triggered = true\n  }\n  (#Clock).clock_delay(5000)\n  state = 1\n}\n\nif (state == 1) {\n  if (siren_triggered == true) {\n    (#Blind).blind_close()\n  }\n  state = 2\n}\n\nif (state == 2 and door_open_count >= 2) {\n  (#Curtain).curtain_close()\n  total_time = (first_open_end - first_open_start) + (second_open_end - second_open_start)\n  total_time = total_time * 1000\n  (#Alarm).alarm_siren()\n  (#Clock).clock_delay(total_time)\n  (#Alarm).alarm_off()\n  break\n}\n\nif ((#DoorLock #Odd).doorControl_door == \""open\"" and door_open_flag == false) {\n  door_open_flag = true\n  now = (#Clock).clock_timestamp\n  door_open_count = door_open_count + 1\n  if (door_open_count == 1) {\n    first_open_start = now\n  } else if (door_open_count == 2) {\n    second_open_start = now\n  }\n}\nif ((#DoorLock #Odd).doorControl_door == \""closed\"" and door_open_flag == true) {\n  door_open_flag = false\n  now = (#Clock).clock_timestamp\n  if (door_open_count == 1) {\n    first_open_end = now\n  } else if (door_open_count == 2) {\n    second_open_end = now\n  }\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""while true {\\n  if ((#Light).switch_switch ==""}",0.756,,,"[{'name': 'Scenario1', 'cron': '0 22 * * *', 'period': -1, 'code': 'if (any(#Window).windowControl_window == ""open"") {\n  if (any(#Light).switch_switch == ""on"") {\n    (#Siren).switch_on()\n    wait until(#Siren).switch_switch == ""on""\n    (#Blind).blind_close()\n    wait until(#Blind).blind_blind == ""closed""\n    (#Alarm).alarm_strobe()\n    wait until(#DoorLock).doorControl_door == ""closed""\n    (#Alarm).alarm_off()\n  }\n}'}, {'name': 'Scenario2', 'cron': '0 22 * * *', 'period': 5000, 'code': 'triggered := false\nif (any(#DoorLock).doorControl_door == ""closed"") {\n  if (triggered == false) {\n    triggered = true\n  }\n} else {\n  triggered = false\n}\nif (triggered == true) {\n  (#Curtain).curtain_close()\n  wait until(#DoorLock).doorControl_door == ""closed""\n  (#Alarm).alarm_strobe()\n  wait until(#DoorLock).doorControl_door == ""closed""\n  (#Alarm).alarm_off()\n}'}]",0.65,0,14.628,"[{'name': 'Scenario1', 'cron': '0 22 * * *', 'period': 0, 'code': 'if ((#Window).windowControl_window == ""open"") and ((#Light).switch_switch == ""on"") {\n  (#Siren).switch_on()\n  wait until(#Clock).clock_delay(5000)\n  (#Blind).blind_close()\n  wait until(#DoorLock).doorControl_door == ""unknown""\n  (#Curtain).curtain_close()\n  (#Curtain).curtain_open()\n  (#Curtain).curtain_close()\n  (#Curtain).curtain_open()\n  (#Alarm).alarm_setAlarmVolume(""both"")\n  wait until(#Alarm).alarm_alarm == ""off""\n  (#Alarm).alarm_setAlarmVolume(""off"")\n}'}, {'name': 'Scenario2', 'cron': '0 22 * * *', 'period': 0, 'code': 'wait until(#DoorLock).doorControl_door == ""unknown""\n(#Curtain).curtain_close()\n(#Curtain).curtain_open()\n(#Curtain).curtain_close()\n(#Curtain).curtain_open()\n(#Alarm).alarm_setAlarmVolume(""both"")\nwait until(#Alarm).alarm_alarm == ""off""\n(#Alarm).alarm_setAlarmVolume(""off"")'}]",,0,17.12,"[{'name': 'NightSirenAndBlind', 'cron': '0 22 * * *', 'period': 0, 'code': 'sirenTriggered := false\nif ((any(#Window).windowControl_window == ""open"") and (any(#Light).switch_switch == ""on"")) {\n  (#Siren).sirenMode_setSirenMode(\'siren\')\n  sirenTriggered = true\n}\nif (sirenTriggered == true) {\n  (#Blind).blind_close()\n}'}, {'name': 'DoorOpenCloseMonitor', 'cron': '0 22 * * *', 'period': 1000, 'code': 'doorOpenCount := 0\ntotalOpenDuration := 0.0\ndoorOpenStart := 0.0\ndoorStatePrevious := ""closed""\ncurtainClosed := false\nalarmActive := false\nwait until((#Clock).clock_second >= 5)\ncurrentDoorState = """"\nif (any(#DoorLock).doorControl_door == ""open"") {\n  currentDoorState = ""open""\n} else {\n  currentDoorState = ""closed""\n}\nif ((doorStatePrevious == ""closed"") and (currentDoorState == ""open"")) {\n  doorOpenStart = (#Clock).clock_timestamp\n}\nif ((doorStatePrevious == ""open"") and (currentDoorState == ""closed"")) {\n  openDuration = (#Clock).clock_timestamp - doorOpenStart\n  totalOpenDuration = totalOpenDuration + openDuration\n  doorOpenCount = doorOpenCount + 1\n}\ndoorStatePrevious = currentDoorState\nif ((doorOpenCount >= 2) and (curtainClosed == false)) {\n  (#Curtain).curtain_close()\n  curtainClosed = true\n  alarmActive = true\n  alarmOffTime := (#Clock).clock_timestamp + totalOpenDuration\n}\nif ((alarmActive == true) and ((#Clock).clock_timestamp < alarmOffTime)) {\n  (#Alarm).alarm_strobe()\n} else if (alarmActive == true) {\n  (#Alarm).alarm_off()\n  alarmActive = false\n  break\n}'}]",0.65,0,8.848,[],0,0,11.709
430,1,1,-,팔을 위로 들어.,Raise your arm up.,,,{},"{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowState_isOpen == true) {\\n  (#Light).switch_off()\\n  (#clock).clock_delay(1000)\\n  while ((#Blind).blindState_currentPosition > 0) {\\n    (#Blind).blindControl_moveDown(10)\\n    (#clock).clock_delay(1000)\\n""}",0.187,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Alarm).sirenMode_setSirenMode('up')""}]",0,0,2.948,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""(#Alarm).airConditionerMode_setAirConditionerMode('up')""}]",,0,4.082,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""팔을 들어 올립니다."")'}]",0,0,2.35,[],1,0,1.841
431,8,1,-,그룹1번의 습도가 하나라도 30미만이 되면 그룹1번의 관개장치를 켜줘.,Turn on Group 1’s irrigator if any of the humidity levels go below 30.,"{
  ""Group1_HumiditySensor_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Left"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Right"", ""HumiditySensor""]
  },
  ""Group1_HumiditySensor_Center"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Center"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Center"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Center"", ""HumiditySensor""]
  },
  ""Group1_Irrigator_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group1"", ""Left"", ""Irrigator""]
  },
  ""Group2_Irrigator_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Right"", ""Irrigator""]
  },
  ""Group1_Irrigator_Row1"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group1"", ""Row1"", ""Irrigator""]
  },
  ""Group2_Irrigator_Row2"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Row2"", ""Irrigator""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until(any(#Group1 #HumiditySensor).relativeHumidityMeasurement_humidity<30))\n (#Group1 #Irrigator).irrigatorOperatingState_startWatering()""
}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Door).doorState ==""}",0.379,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(any(#Group1).relativeHumidityMeasurement_humidity <= 30.0)\nall(#Group1).irrigatorOperatingState_startWatering()'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(all(#Group1).irrigatorOperatingState_irrigatorOperatingState != ""watering"")\n(#Center).mediaPlayback_speak(""All Group 1 irrigators have stopped."")'}]",0.85,0,5.298,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(any(#Group1).relativeHumidityMeasurement_humidity <= 30.0)\n(#Irrigator).switch_on()'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(all(#Group1).relativeHumidityMeasurement_humidity > 30.0)\n(#Irrigator).switch_off()'}]",,0,5.825,"[{'name': 'TurnOnIrrigatorWhenHumidityLow', 'cron': '', 'period': 1000, 'code': 'if (any(#Group1 #HumiditySensor).relativeHumidityMeasurement_humidity < 30.0) {\n  all(#Group1 #Irrigator).switch_on()\n} else {\n  all(#Group1 #Irrigator).switch_off()\n}'}]",0.7,0,1.818,"[{'name': 'IrrigateWhenHumidityLow', 'cron': '', 'period': 1000, 'code': 'triggered := false\nhumidity := (#HumiditySensor #Group1).relativeHumidityMeasurement_humidity\nif ((humidity < 30.0) and (triggered == false)) {\n  (#Irrigator #Group1).switch_on()\n  triggered = true\n} else if ((humidity >= 30.0) and (triggered == true)) {\n  triggered = false\n}'}]",0.7,0,3.859
432,8,1,-,홀수 태그가 붙은 창문이 하나라도 열려 있으면 홀수 블라인드를 닫아 줘.,"If any of the odd-tagged windows are open, close the odd blinds.","{
  ""SectorA_Window_Left_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Left"", ""Odd"", ""Window""]
  },
  ""SectorB_Window_Right_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Right"", ""Odd"", ""Window""]
  },
  ""SectorA_Window_Wall_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Wall"", ""Odd"", ""Window""]
  },
  ""SectorB_Window_Center_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Center"", ""Odd"", ""Window""]
  },
  ""SectorA_Blind_Left_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Left"", ""Odd"", ""Blind""]
  },
  ""SectorB_Blind_Right_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Right"", ""Odd"", ""Blind""]
  },
  ""SectorA_Blind_Wall_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Wall"", ""Odd"", ""Blind""]
  },
  ""SectorB_Blind_Center_Odd"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Center"", ""Odd"", ""Blind""]
  },
  ""SectorA_Window_Left_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Left"", ""Even"", ""Window""]
  },
  ""SectorB_Window_Right_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Right"", ""Even"", ""Window""]
  },
  ""SectorA_Window_Wall_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Wall"", ""Even"", ""Window""]
  },
  ""SectorB_Window_Center_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Center"", ""Even"", ""Window""]
  },
  ""SectorA_Blind_Left_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Left"", ""Even"", ""Blind""]
  },
  ""SectorB_Blind_Right_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Right"", ""Even"", ""Blind""]
  },
  ""SectorA_Blind_Wall_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""Wall"", ""Even"", ""Blind""]
  },
  ""SectorB_Blind_Center_Even"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""Center"", ""Even"", ""Blind""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if (any(#Odd #Window).windowControl_window == \""open\"") {\n  (#Odd #Blind).blind_close()\n}""}","{""cron"": ""0 7 * * *"", ""period"": ""-1"", ""code"": ""if ((#IrrigationSystem).irrigationSystem_isOn == false && (#Window).window_isOpen == false) {       (#IrrigationSystem).irrigationSystem_turnOn()       (#Window).window_open()""}",0.063,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Odd).windowControl_window == ""open"") {\n  all(#Odd).blind_close()\n}'}]",0.9,0,2.654,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Odd).windowControl_window == ""open"") {\n  all(#Odd).blind_close()\n}'}]",,0,3.684,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Window #Odd).windowControl_window == ""open"") {\n  all(#Blind #Odd).blind_close()\n}'}]",0.9,0,1.703,"[{'name': 'CloseOddBlindsWhenOddWindowsOpen', 'cron': '', 'period': -1, 'code': 'if (any(#Odd #Window).windowControl_window == ""open"") {\n  all(#Odd #Blind).blind_close()\n}'}]",0.95,0,2.275
433,8,1,-,상단부에 있는 조명과 커튼이 모두 꺼져 있으면 스피커를 켜 줘.,"If all the top lights and curtains are off, turn on the speaker.","{
  ""SectorA_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Right"", ""Light""]
  },
  ""SectorA_Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Center"", ""Light""]
  },
  ""SectorB_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Left"", ""Light""]
  },

  ""SectorA_Curtain_Upper_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Curtain""]
  },
  ""SectorB_Curtain_Lower_Right"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorB"", ""Lower"", ""Right"", ""Curtain""]
  },
  ""SectorA_Curtain_Upper_Center"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorA"", ""Upper"", ""Center"", ""Curtain""]
  },
  ""SectorB_Curtain_Lower_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorB"", ""Lower"", ""Left"", ""Curtain""]
  },

  ""SectorA_Speaker_Lower_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorA"", ""Lower"", ""Left"", ""Speaker""]
  },
  ""SectorB_Speaker_Upper_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorB"", ""Upper"", ""Right"", ""Speaker""]
  },
  ""SectorA_Speaker_Lower_Center"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorA"", ""Lower"", ""Center"", ""Speaker""]
  },
  ""SectorB_Speaker_Upper_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""SectorB"", ""Upper"", ""Left"", ""Speaker""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((all(#Upper #Light).switch_switch == \""off\"") and (all(#Curtain).curtain_curtain == \""closed\"")) {\n  (#Speaker).switch_on()\n}""}","{""cron"": """", ""period"": ""5000"", ""code"": ""if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0) {\\n  (#Irrigator).irrigatorOperatingState_startWatering()\\n""}",0.707,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Light).switch_switch == ""off"" and all(#Curtain).curtain_curtain == ""closed"") {\n  (#Speaker).switch_on()\n}'}]",0.8,0,3.527,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Upper).switch_switch == ""off"") {\n  all(#Upper).switch_on()\n}'}]",,0,3.871,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all((#Upper #Light)).switch_switch == ""off"") and (all((#Upper #Curtain)).curtain_curtain == ""closed"")) {\n  (#Speaker).switch_on()\n}'}]",0.95,0,1.63,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all(#Upper #Light).switch_switch == ""off"") and (all(#Upper #Curtain).curtain_curtain == ""closed"")) {\n  all(#Upper #Speaker).switch_on()\n}'}]",0.9,0,2.581
434,8,1,-,그룹2번의 습도가 모두 80을 초과하면 관개장치를 꺼 줘.,Turn off the irrigator if all humidity levels in Group 2 exceed 80.,"{
  ""Group1_HumiditySensor_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Left"", ""HumiditySensor""]
  },
  ""Group1_HumiditySensor_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Right"", ""HumiditySensor""]
  },
  ""Group1_HumiditySensor_Center"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group1"", ""Center"", ""HumiditySensor""]
  },
  ""Group1_Irrigator_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group1"", ""Left"", ""Irrigator""]
  },
  ""Group1_Irrigator_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group1"", ""Right"", ""Irrigator""]
  },
  ""Group1_Irrigator_Center"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group1"", ""Center"", ""Irrigator""]
  },

  ""Group2_HumiditySensor_Upper"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Upper"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Lower"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Lower"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Center"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Center"", ""HumiditySensor""]
  },
  ""Group2_Irrigator_Upper"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Upper"", ""Irrigator""]
  },
  ""Group2_Irrigator_Lower"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Lower"", ""Irrigator""]
  },
  ""Group2_Irrigator_Center"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Center"", ""Irrigator""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until(all(#Group2 #HumiditySensor).relativeHumidityMeasurement_humidity > 80) {\n  (#Group2 #Irrigator).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#TemperatureSensor).temperature >= 28.0) {\\n  (#Fan).fan_on()\\n""}",0.462,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Group2).relativeHumidityMeasurement_humidity > 80.0) {\n  all(#Group2).switch_off()\n}'}]",0.7,0,2.97,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) and ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Irrigator).switch_off()\n}'}]",,0,4.904,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (all(#Group2 #HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {\n  (#Irrigator).switch_off()\n}'}]",0.7,0,1.725,"[{'name': 'TurnOffIrrigationWhenHumidityHigh', 'cron': '', 'period': 1000, 'code': 'if ((all(#Group1).relativeHumidityMeasurement_humidity > 80.0) and (all(#Group2).relativeHumidityMeasurement_humidity > 80.0)) {\n  all(#Irrigator).switch_off()\n}'}]",0.6,0,2.617
435,8,1,-,홀수 태그의 커튼이 열려 있고 상단부 조명이 꺼져 있으면 창문을 열어 줘.,"If the odd-tagged curtains are open and the upper lights are off, open the window.","{
  ""SectorA_Curtain_Odd"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorA"", ""Odd"", ""Curtain""]
  },
  ""SectorB_Curtain_Even"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorB"", ""Even"", ""Curtain""]
  },
  ""SectorA_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Upper"", ""Left"", ""Light""]
  },
  ""SectorB_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Upper"", ""Right"", ""Light""]
  },
  ""SectorA_Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""SectorA"", ""Lower"", ""Center"", ""Light""]
  },
  ""SectorB_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""SectorB"", ""Lower"", ""Left"", ""Light""]
  },
  ""SectorA_Window_Left_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Left"", ""Odd"", ""Window""]
  },
  ""SectorB_Window_Right_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Right"", ""Even"", ""Window""]
  },
  ""SectorA_Window_Center_Odd"": {
    ""category"": ""Window"",
    ""tags"": [""SectorA"", ""Center"", ""Odd"", ""Window""]
  },
  ""SectorB_Window_Left_Even"": {
    ""category"": ""Window"",
    ""tags"": [""SectorB"", ""Left"", ""Even"", ""Window""]
  },
  ""SectorA_Curtain_Even"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorA"", ""Even"", ""Curtain""]
  },
  ""SectorB_Curtain_Odd"": {
    ""category"": ""Curtain"",
    ""tags"": [""SectorB"", ""Odd"", ""Curtain""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((#Odd #Curtain).curtain_curtain == \""open\"") and (all(#Upper #Light).switch_switch == \""off\"")) {\n  (#Window).windowControl_open()\n}""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#Light).switch_switch ==""}",0.625,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).windowControl_window == ""open"") and ((#Upper).switch_switch == ""off"") {\n  (#Window).windowControl_open()\n}'}]",0.6,0,3.436,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Curtain).curtain_curtain == ""open"" and (#Upper).switch_switch == ""off"") {\n  (#Window).windowControl_open()\n}'}]",,0,4.584,"[{'name': 'OpenWindowOnCurtainLightCondition', 'cron': '', 'period': -1, 'code': 'if (((#Odd).curtain_curtain == ""open"") and ((#Upper).switch_switch == ""off"")) {\n  (#Window).windowControl_open()\n}'}]",0.85,0,1.798,"[{'name': 'OpenWindowIfCurtainOpenAndTopLightOff', 'cron': '', 'period': -1, 'code': 'if ((#Curtain #Odd).curtain_curtain == ""open"") and ((#Light #Upper).switch_switch == ""off"") {\n  (#Window).windowControl_open()\n}'}]",0.9,0,2.678
436,8,1,-,거실 불을 모두 켜줘,Turn on all the lights in the living room.,"{
  ""Livingroom_Light_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Left"", ""Light""]
  },
  ""Livingroom_Light_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Right"", ""Light""]
  },
  ""Livingroom_Light_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Center"", ""Light""]
  },
  ""Livingroom_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Upper"", ""Left"", ""Light""]
  },
  ""Livingroom_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Upper"", ""Right"", ""Light""]
  },
  ""Livingroom_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Lower"", ""Left"", ""Light""]
  },
  ""Livingroom_Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Lower"", ""Right"", ""Light""]
  },
  ""Livingroom_Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Livingroom"", ""Upper"", ""Center"", ""Light""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""all(#Livingroom #Light).switch_on()""}","{""cron"": ""0 0 * * 6"", ""period"": ""5000"", ""code"": ""if ((#Pump).pumpStatus ==""}",0.179,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Livingroom).switch_on()'}]",0.9,0,2.096,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Livingroom).switch_on()'}]",,0,3.144,"[{'name': 'TurnOnLivingRoomLights', 'cron': '', 'period': -1, 'code': 'all(#Livingroom #Light).switch_on()'}]",1,0,1.045,"[{'name': 'TurnOnLivingRoomLights', 'cron': '', 'period': -1, 'code': 'all(#Livingroom #Light).switch_on()'}]",1,0,1.771
437,8,1,-,하우스A 모두 닫아줘.,Close everything in House A.,"{ 
  ""s_blind_1"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""odd"", ""Blind""]
  },
  ""s_blind_3"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorA"", ""odd"", ""Blind""]
  },
  ""s_blind_2"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""even"", ""Blind""]
  },
  ""s_blind_4"": {
    ""category"": ""Blind"",
    ""tags"": [""SectorB"", ""even"", ""Blind""]
  },
  ""center_blind_main"": {
    ""category"": ""Blind"",
    ""tags"": [""Center"", ""Blind""]
  },
  ""center_blind_aux"": {
    ""category"": ""Blind"",
    ""tags"": [""Center"", ""Blind""]
  }
}
",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""all(#SectorA).blind_close()""}","{""cron"": """", ""period"": ""0"", ""code"": ""while (true) {\\n  if ((#MotionSensor).motionSensor_isMotionDetected == true) {\\n    (#Light).light_on()\\n    (#Fan).fan_speed_increase(10)\\n""}",0.483,0,,[],0,0,7.348,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#SectorA).blind_close()'}]",,0,2.952,"[{'name': 'CloseAllBlindsHouseA', 'cron': '', 'period': -1, 'code': 'all(#Blind #SectorA).blind_close()'}]",0.95,0,1.051,"[{'name': 'CloseAllHouseA', 'cron': '', 'period': -1, 'code': 'all(#SectorA #Blind).blind_close()'}]",0.95,0,2.119
438,8,1,-,그룹1번 태그 모두 꺼줘.,Turn off everything with Group 1’s tag.,"{
  ""Group1_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Upper"", ""Left"", ""Light""]
  },
  ""Group1_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Upper"", ""Right"", ""Light""]
  },
  ""Group1_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Lower"", ""Left"", ""Light""]
  },
  ""Group1_Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Lower"", ""Right"", ""Light""]
  },
  ""Group1_Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Upper"", ""Center"", ""Light""]
  },
  ""Group1_Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Group1"", ""Lower"", ""Center"", ""Light""]
  },
  ""Group1_Alarm_Upper_Left"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group1"", ""Upper"", ""Left"", ""Alarm""]
  },
  ""Group1_Alarm_Upper_Right"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group1"", ""Upper"", ""Right"", ""Alarm""]
  },
  ""Group1_Alarm_Lower_Left"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group1"", ""Lower"", ""Left"", ""Alarm""]
  },
  ""Group1_Alarm_Lower_Right"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group1"", ""Lower"", ""Right"", ""Alarm""]
  },
  ""Group2_Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Upper"", ""Left"", ""Light""]
  },
  ""Group2_Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Upper"", ""Right"", ""Light""]
  },
  ""Group2_Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Lower"", ""Left"", ""Light""]
  },
  ""Group2_Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Lower"", ""Right"", ""Light""]
  },
  ""Group2_Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Upper"", ""Center"", ""Light""]
  },
  ""Group2_Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Group2"", ""Lower"", ""Center"", ""Light""]
  },
  ""Group2_Alarm_Upper_Left"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group2"", ""Upper"", ""Left"", ""Alarm""]
  },
  ""Group2_Alarm_Lower_Right"": {
    ""category"": ""Alarm"",
    ""tags"": [""Group2"", ""Lower"", ""Right"", ""Alarm""]
  }, 
  ""Group1_Dehumidifier_Left"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Left"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Right"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Right"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Center"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Center"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Upper_Left"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Upper"", ""Left"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Upper_Right"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Upper"", ""Right"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Lower_Left"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Lower"", ""Left"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Lower_Right"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Lower"", ""Right"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Upper_Center"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Upper"", ""Center"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Lower_Center"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Lower"", ""Center"", ""Dehumidifier""]
  },
  ""Group1_Dehumidifier_Back"": {
    ""category"": ""Dehumidifier"",
    ""tags"": [""Group1"", ""Back"", ""Dehumidifier""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""all(#Group1).switch_off()\n
all(#Group1).alarm_off()""}","{""cron"": """", ""period"": ""0"", ""code"": ""if ((#Window).window_isOpen == true) {       (#Blind).blind_close()""}",0.487,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Group1).switch_off()'}]",0.8,0,2.287,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Group1).switch_off()'}]",,0,3.141,"[{'name': 'TurnOffGroup1', 'cron': '', 'period': -1, 'code': 'all(#Group1).switch_off()'}]",0.8,0,0.996,"[{'name': 'TurnOffAllGroup1', 'cron': '', 'period': -1, 'code': 'all(#Group1).switch_off()'}]",0.5,0,2.008
439,8,1,-,상단부가 모두 꺼져있거나 닫혀있으면 모두 꺼줘.,"If everything in the upper area is either off or closed, turn off everything in the upper area.","{
  ""Light_Upper_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Upper"", ""Left"", ""Light""]
  },
  ""Light_Upper_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Upper"", ""Right"", ""Light""]
  },
  ""Light_Upper_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Upper"", ""Center"", ""Light""]
  },
  ""Light_Lower_Left"": {
    ""category"": ""Light"",
    ""tags"": [""Lower"", ""Left"", ""Light""]
  },
  ""Light_Lower_Right"": {
    ""category"": ""Light"",
    ""tags"": [""Lower"", ""Right"", ""Light""]
  },
  ""Light_Lower_Center"": {
    ""category"": ""Light"",
    ""tags"": [""Lower"", ""Center"", ""Light""]
  },
  ""Curtain_Upper_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""Upper"", ""Left"", ""Curtain""]
  },
  ""Curtain_Upper_Right"": {
    ""category"": ""Curtain"",
    ""tags"": [""Upper"", ""Right"", ""Curtain""]
  },
  ""Curtain_Upper_Center"": {
    ""category"": ""Curtain"",
    ""tags"": [""Upper"", ""Center"", ""Curtain""]
  },
  ""Curtain_Lower_Left"": {
    ""category"": ""Curtain"",
    ""tags"": [""Lower"", ""Left"", ""Curtain""]
  },
  ""Curtain_Lower_Right"": {
    ""category"": ""Curtain"",
    ""tags"": [""Lower"", ""Right"", ""Curtain""]
  },
  ""Curtain_Lower_Center"": {
    ""category"": ""Curtain"",
    ""tags"": [""Lower"", ""Center"", ""Curtain""]
  },
  ""Speaker_Upper_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""Upper"", ""Left"", ""Speaker""]
  },
  ""Speaker_Upper_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""Upper"", ""Right"", ""Speaker""]
  },
  ""Speaker_Upper_Center"": {
    ""category"": ""Speaker"",
    ""tags"": [""Upper"", ""Center"", ""Speaker""]
  },
  ""Speaker_Lower_Left"": {
    ""category"": ""Speaker"",
    ""tags"": [""Lower"", ""Left"", ""Speaker""]
  },
  ""Speaker_Lower_Right"": {
    ""category"": ""Speaker"",
    ""tags"": [""Lower"", ""Right"", ""Speaker""]
  },
  ""Speaker_Lower_Center"": {
    ""category"": ""Speaker"",
    ""tags"": [""Lower"", ""Center"", ""Speaker""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""if ((all(#Upper).switch_switch == \""off\"") and (all(#Upper).curtain_curtain == \""closed\"")) {\n  (#Upper).switch_off()\n}""}","{""cron"": ""0 18 * * 5"", ""period"": ""-1"", ""code"": ""if ((#Light).light_isOn == true) {       (#Light).light_setBrightness(30)""}",0.449,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Upper).switch_switch == ""off"") and ((#Curtain).curtain_curtain == ""closed"")) {\n  (#Upper).switch_off()\n  (#Curtain).curtain_close()\n}'}]",0.9,0,4.006,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (((#Upper).switch_switch == ""off"") or ((#Upper).switch_switch == ""off"")) {\n  (#Upper).switch_off()\n  (#Upper).switch_off()\n}'}]",,0,4.597,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all(#Upper).switch_switch == ""off"") and (all(#Upper).curtain_curtain == ""closed"")) {\n  all(#Upper).switch_off()\n  all(#Upper).curtain_close()\n}'}]",0.85,0,1.534,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((all(#Upper).switch_switch == ""off"") or (all(#Upper).curtain_curtain == ""closed"")) {\n  all(#Upper).switch_off()\n}'}]",0.7,0,3.171
440,8,1,-,그룹2번이 하나라도 80을 초과하면 그룹2번은 꺼줘.,"If any sensor in Group 2 goes over 80, turn off Group 2.","{
  ""Group1_TemperatureSensor_Left"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group1"", ""Left"", ""TemperatureSensor""]
  },
  ""Group1_TemperatureSensor_Right"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group1"", ""Right"", ""TemperatureSensor""]
  },
  ""Group1_TemperatureSensor_Center"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group1"", ""Center"", ""TemperatureSensor""]
  },
  ""Group1_TemperatureSensor_Upper_Left"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group1"", ""Upper"", ""Left"", ""TemperatureSensor""]
  },
  ""Group1_TemperatureSensor_Lower_Right"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group1"", ""Lower"", ""Right"", ""TemperatureSensor""]
  },

  ""Group2_HumiditySensor_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Left"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Right"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Center"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Center"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Upper_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Upper"", ""Left"", ""HumiditySensor""]
  },
  ""Group2_HumiditySensor_Lower_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group2"", ""Lower"", ""Right"", ""HumiditySensor""]
  },

  ""Group2_Irrigator_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Left"", ""Irrigator""]
  },
  ""Group2_Irrigator_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Right"", ""Irrigator""]
  },
  ""Group2_Irrigator_Center"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Center"", ""Irrigator""]
  },
  ""Group2_Irrigator_Upper_Center"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Upper"", ""Center"", ""Irrigator""]
  },
  ""Group2_Irrigator_Lower_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group2"", ""Lower"", ""Left"", ""Irrigator""]
  },
  ""Group3_TemperatureSensor_Center"": {
    ""category"": ""TemperatureSensor"",
    ""tags"": [""Group3"", ""Center"", ""TemperatureSensor""]
  },
  ""Group3_HumiditySensor_Upper_Right"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group3"", ""Upper"", ""Right"", ""HumiditySensor""]
  },
  ""Group3_Irrigator_Lower_Right"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group3"", ""Lower"", ""Right"", ""Irrigator""]
  },
  ""Group3_HumiditySensor_Lower_Left"": {
    ""category"": ""HumiditySensor"",
    ""tags"": [""Group3"", ""Lower"", ""Left"", ""HumiditySensor""]
  },
  ""Group3_Irrigator_Upper_Left"": {
    ""category"": ""Irrigator"",
    ""tags"": [""Group3"", ""Upper"", ""Left"", ""Irrigator""]
  }
}",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""wait until(any(#Group2).relativeHumidityMeasurement_humidity > 80) {\n  (#Group2).switch_off()\n}""}","{""cron"": """", ""period"": ""-1"", ""code"": ""if ((#Window).windowState ==""}",0.379,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(any(#Group2).temperatureMeasurement_temperature > 80.0)\nall(#Group2).switch_off()'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(any(#Group2).temperatureMeasurement_temperature > 80.0)\nall(#Group2).switch_off()'}]",0.3,0,4.478,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Group2).temperatureMeasurement_temperature > 80.0) {\n  all(#Group2).switch_off()\n}'}]",,0,4.159,[],0,0,2.845,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if (any(#Group2).relativeHumidityMeasurement_humidity > 80.0) {\n  all(#Group2).switch_off()\n}'}]",0.7,0,2.222
441,1,1,-,알람의 사이렌과 경광등을 모두 켜줘.,Turn on both the alarm siren and the strobe,"{
  ""sector1_alarm_left"": {
    ""category"": ""Alarm"",
    ""tags"": [""sector1"", ""left"", ""Alarm""]
  },
  ""sector1_alarm_right"": {
    ""category"": ""Siren"",
    ""tags"": [""sector1"", ""right"", ""Siren""]
  },
  ""sector1_alarm_center"": {
    ""category"": ""Alarm"",
    ""tags"": [""sector1"", ""center"", ""Alarm""]
  },
  ""sector2_alarm_entrance"": {
    ""category"": ""Siren"",
    ""tags"": [""sector2"", ""entrance"", ""Siren""]
  },
  ""sector2_alarm_exit"": {
    ""category"": ""Alarm"",
    ""tags"": [""sector2"", ""exit"", ""Alarm""]
  },
  ""sector2_alarm_top"": {
    ""category"": ""Siren"",
    ""tags"": [""sector2"", ""top"", ""Siren""]
  },
  ""sector3_alarm_left"": {
    ""category"": ""Siren"",
    ""tags"": [""sector3"", ""left"", ""Siren""]
  },
  ""sector3_alarm_right"": {
    ""category"": ""Alarm"",
    ""tags"": [""sector3"", ""right"", ""Alarm""]
  },
  ""sector3_alarm_center"": {
    ""category"": ""Siren"",
    ""tags"": [""sector3"", ""center"", ""Siren""]
  }
}
",,"{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#Alarm).alarm_off()\n
(#Siren).sirenMode_setSirenMode(\""off\"")""}","{""cron"": ""0 8 * * *"", ""period"": ""-1"", ""code"": ""if ((#Speaker).speaker_isOn == false) {       (#Speaker).speaker_turnOn()       (#TextToSpeech).textToSpeech_speak(""}",0.333,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_both()\n(#center).mediaPlayback_speak(""Both alarm siren and strobe have been turned on."")'}]",0,0,2.844,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Alarm).alarm_both()'}]",,0,2.942,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': ""if (any(#Alarm)) {\n  all(#Alarm).alarm_both()\n} else {\n  if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode('both')\n  }\n}""}]",0.2,0,2.056,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'all(#Alarm).alarm_both()'}]",0,0,1.77
442,9,1,-,가장 최근에 찍은 사진을 홍길동 이메일로 제목 '사진'과 내용 '사진입니다.'로 보내줘.,"Send the most recent photo to Honggildong by email with the subject ""Photo"" and the message ""This is a photo"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""latest_photo = (#Camera).camera_image\n(#EmailProvider).emailProvider_sendMailWithFile(\""honggd@test.com\"", \""Photo\"", \""This is a photo.\"", latest_photo)""}",,,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_take() -> lastImage\n(#EmailProvider).emailProvider_sendMailWithFile(toAddress: ""honggd@test.com"", title: ""Photo"", text: ""This is a photo"", file: lastImage)'}]",0.9,0,4.391,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_take() -> BINARY\n(#EmailProvider).emailProvider_sendMail(toAddress: ""honggd@test.com"", title: ""Photo"", text: ""This is a photo"")'}]",,0,4.969,"[{'name': 'SendLatestPhotoByEmail', 'cron': '', 'period': -1, 'code': 'image = (#Camera).camera_take()\nif (image != null) {\n  (#EmailProvider).emailProvider_sendMailWithFile(""Honggildong"", ""Photo"", ""This is a photo"", image)\n} else {\n  (#Speaker).mediaPlayback_speak(""보낼 수 있는 사진이 없습니다."")\n}'}]",0.5,0,3.109,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'photo = (#Camera).camera_image\n(#EmailProvider).emailProvider_sendMailWithFile(""Hong Gil-dong"", ""Photo"", ""This is a photo"", photo)'}]",0.8,0,2.617
443,9,1,-,가장 최근에 찍은 동영상을 첨부파일로 장보고 이메일로 제목 '동영상'과 내용 '동영상입니다.'로 보내줘,"Send the most recent video as an attachment to Jang Bogo by email with the subject ""Video"" and the message ""This is a video"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""latest_video = (#Camera).camera_video\n(#EmailProvider).emailProvider_sendMailWithFile(\""jangbogo@naver.com\"", \""Video\"", \""This is a video.\"", latest_video)""}",,,0,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMailWithFile(toAddress: ""jangbogo@naver.com"", title: ""Video"", text: ""This is a video"", file: (#Camera).camera_video)'}]",1,0,4.22,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#Camera).camera_take() -> BINARY\nimageData := (#Camera).camera_image'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(#Clock).clock_delay(10000)\n(#EmailProvider).emailProvider_sendMailWithFile(\n  toAddress: ""abcd1234@test.com"",\n  title: ""Video"",\n  text: ""This is a video."",\n  file: imageData\n)'}]",,0,8.761,"[{'name': 'SendLatestVideoByEmail', 'cron': '', 'period': -1, 'code': 'video = (#Camera).camera_video\nif (video != null) {\n  (#EmailProvider).emailProvider_sendMailWithFile(""Jang Bogo"", ""Video"", ""This is a video"", video)\n}'}]",0.8,0,1.882,"[{'name': 'SendRecentVideoEmail', 'cron': '', 'period': -1, 'code': 'if ((#Camera).switch_switch == on) {\n  video = (#Camera).camera_video\n  if (video != null) {\n    (#EmailProvider).emailProvider_sendMailWithFile(""me"", ""Video"", ""This is a video."", video)\n  } else {\n    (#Speaker).mediaPlayback_speak(""전송할 수 있는 최근 동영상이 없습니다."")\n  }\n} else {\n  (#Speaker).mediaPlayback_speak(""카메라가 꺼져 있어 동영상을 전송할 수 없습니다."")\n}'}]",0.5,0,5.561
444,9,1,-,김무개 메일로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.,"Send an email to Kim Mugae with the subject ""Alert"" and the message ""This is an emergency"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""Scenario1"", ""cron"": """", ""period"": -1, ""code"": ""(#EmailProvider).emailProvider_sendMail(\""kim@example.com\"", \""Alert\"", \""This is an emergency.\"")""}",,,0,,"[{'name': 'SendEmailToKimMugae', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(toAddress: ""kim@example.com"", title: ""Alert"", text: ""This is an emergency"")'}]",0.95,0,3.766,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""kim@example.com"", ""Notification"", ""This is an emergency"")'}]",,0,4.285,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""Kim Mugae"", ""Alert"", ""This is an emergency"")'}]",0.9,0,1.916,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""Kim"", ""Notification"", ""This is an emergency"")'}]",0.7,0,2.241
445,3,1,-,비가 오는데 창문이 열려있으면 창문을 닫아줘.,"If it is raining and the window is open, close the window.", ,,"{""name"": ""CloseWindowWhenRaining"",  ""cron"": """", ""period"": -1, ""code"": ""rain = (#WeatherProvider).weatherProvider_weather\nif (rain == \""rain\"") and ((#Window).windowControl_window == \""open\"") {\n  (#Window).windowControl_close()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#WeatherProvider).weatherProvider_weather == ""rain"" and (#Window).windowControl_window == ""open"") {\n  (#Window).windowControl_close()\n}'}]",0.9,0,3.728,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#WeatherProvider).weatherProvider_weather == ""rain"" and (#Window).windowControl_window == ""open""\n(#Window).windowControl_close()\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until(#WeatherProvider).weatherProvider_weather != ""rain"" and (#Window).windowControl_window == ""closed""\n(#Window).windowControl_open()'}]",,0,6.436,"[{'name': 'CloseWindowWhenRaining', 'cron': '', 'period': -1, 'code': 'if (((#WeatherProvider).weatherProvider_weather == ""rain"") and ((#Window).windowControl_window == ""open"")) {\n  (#Window).windowControl_close()\n}'}]",1,0,1.935,"[{'name': 'CloseWindowWhenRaining', 'cron': '', 'period': -1, 'code': 'if (((#WeatherProvider).weatherProvider_weather == ""rain"") and ((#Window).windowControl_window == ""open"")) {\n  (#Window).windowControl_close()\n}'}]",0.9,0,2.606
446,3,1,-,문이 열렸다 닫히면 알림을 울려줘.,Send an alert when the door opens and then closes., ,,"{""name"": ""DoorClosedAlert"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#DoorLock).doorControl_door == \""open\"")\nwait until((#DoorLock).doorControl_door == \""closed\"")\n(#Alarm).alarm_siren()""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""open""\nwait until(#DoorLock).doorControl_door == ""closed""\n(#Speaker).mediaPlayback_speak(""Door has opened and then closed"")'}]",0.7,0,3.849,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""open""\n(#Speaker).mediaPlayback_speak(""문 1 열림"")'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""closed""\n(#Speaker).mediaPlayback_speak(""도어 1 닫힘"")'}, {'name': 'Scenario3', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""open""\n(#Speaker).mediaPlayback_speak(""2번 문 열림"")'}, {'name': 'Scenario4', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""closed""\n(#Speaker).mediaPlayback_speak(""도어 2 닫힘"")'}]",,0,13.417,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'alertSent := false\ndoorOpenDetected := false\nif ((#DoorLock).doorControl_door == open) {\n  doorOpenDetected = true\n}\nif ((doorOpenDetected == true) and ((#DoorLock).doorControl_door == closed)) {\n  if (alertSent == false) {\n    (#Speaker).mediaPlayback_speak(""경고: 문이 열렸다가 닫혔습니다."")\n    alertSent = true\n  }\n}\nif ((#DoorLock).doorControl_door == closed and doorOpenDetected == false) {\n  alertSent = false\n}'}]",0.4,0,4.784,"[{'name': 'DoorOpenCloseNotification', 'cron': '', 'period': 100, 'code': 'notifiedOpen := false\nnotifiedClose := false\nif ((#DoorLock).doorControl_door == open) {\n  if (notifiedOpen == false) {\n    (#Speaker).mediaPlayback_speak(""이제 문이 열렸습니다."")\n    notifiedOpen = true\n    notifiedClose = false\n  }\n} else if ((#DoorLock).doorControl_door == closed) {\n  if (notifiedClose == false) {\n    (#Speaker).mediaPlayback_speak(""이제 문이 닫힙니다."")\n    notifiedClose = true\n    notifiedOpen = false\n  }\n} else {\n  notifiedOpen = false\n  notifiedClose = false\n}'}]",0.4,0,6.656
447,3,1,-,문이 닫혔다 열리면 사진을 5초 단위로 찍어줘.,Begin taking a photo every 5 seconds once the door opens., ,,"{""name"": ""CaptureAfterDoorClosedAndOpened"", ""cron"": """",  ""period"": 100,  ""code"": ""if ((#DoorLock).doorControl_door == \""closed\"") {\n  wait until((#DoorLock).doorControl_door == \""open\"")\n  loop {\n    (#Camera).camera_take()\n    (#Clock).clock_delay(5000)\n  }\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'doorOpened := false\nif ((#DoorLock).doorControl_door == ""open"") {\n  if (doorOpened == false) {\n    doorOpened = true\n    (#Camera).camera_take()\n  }\n} else {\n  doorOpened = false\n}'}, {'name': 'Scenario2', 'cron': '', 'period': 5000, 'code': 'wait until(doorOpened)\n(#Camera).camera_take()'}]",0.5,0,6.002,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'doorClosed := false\nif ((#DoorLock).doorControl_door == ""closed"" and doorClosed == false) {\n  doorClosed = true\n  (#Camera).camera_take()\n  wait until(#DoorLock).doorControl_door == ""open""\n  (#Camera).camera_take()\n  wait until(#DoorLock).doorControl_door == ""closed""\n  doorClosed = false\n}'}]",,0,6.502,"[{'name': 'TakePhotoOnDoorOpen', 'cron': '', 'period': 100, 'code': 'started := false\nif ((#DoorLock).doorControl_door == open) {\n  if (started == false) {\n    started = true\n  }\n  image = (#Camera).camera_take()\n} else {\n  started = false\n}'}]",0.3,0,2.183,"[{'name': 'DoorOpenCloseCamera', 'cron': '', 'period': 100, 'code': 'state := ""unknown""\ntimer := 0\nlastDoorState := ""unknown""\ndoorState = (#DoorLock).doorControl_door\nif ((doorState == ""closing"") or (doorState == ""open"") or (doorState == ""opening"") or (doorState == ""closed"")) {\n  if (doorState != lastDoorState) {\n    state = doorState\n    timer = 0\n    (#Camera).camera_take()\n  } else {\n    timer = timer + period\n    if (timer >= 5000) {\n      timer = 0\n      (#Camera).camera_take()\n    }\n  }\n  lastDoorState = doorState\n} else {\n  state = ""unknown""\n  lastDoorState = doorState\n  timer = 0\n}'}]",0.6,0,6.663
448,3,1,-,불이 30분이상 켜져있으면 알림을 울려줘.,Turn on the alarm if the light stays on for 30 minutes., ,,"{""name"": ""LightOnTooLongAlert"",  ""cron"": """",
  ""period"": -1,  ""code"": ""wait until((#Light).switch_switch == \""on\"")\n(#Clock).clock_delay(1800000)\nif ((#Light).switch_switch == \""on\"") {\n  (#Alarm).alarm_siren()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'lastSwitchOnTime := 0\nif ((#Light).switch_switch == ""on"") {\n  lastSwitchOnTime = (#Clock).clock_timestamp\n}\nif ((#Clock).clock_timestamp - lastSwitchOnTime >= 1800) {\n  (#Alarm).alarm_siren()\n}'}]",0.6,0,5.323,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'lastSwitchOnTime := 0\nif ((#Light).switch_switch == ""on"") {\n  if (lastSwitchOnTime == 0) {\n    lastSwitchOnTime = (#Clock).clock_timestamp\n  }\n} else {\n  lastSwitchOnTime = 0\n}\nif (lastSwitchOnTime != 0) {\n  wait until(#Clock).clock_timestamp - lastSwitchOnTime > 1800000\n  (#Speaker).mediaPlayback_speak(""알림: 표시등이 30분 이상 켜져 있습니다."")\n  lastSwitchOnTime = 0\n}'}]",,0,9.513,"[{'name': 'TurnOnAlarmIfLightOn30Min', 'cron': '', 'period': 1000, 'code': 'lightOnSince := 0\nif ((#Light).switch_switch == ""on"") {\n  if (lightOnSince == 0) {\n    lightOnSince = (#Clock).clock_timestamp\n  } else {\n    elapsed = (#Clock).clock_timestamp - lightOnSince\n    if (elapsed >= 1800000) {\n      (#Alarm).alarm_siren()\n    }\n  }\n} else {\n  lightOnSince = 0\n}'}]",0.7,0,3.065,"[{'name': 'LightOnNotification', 'cron': '', 'period': 10000, 'code': 'lightOnStartTime := 0\nnotificationPlayed := false\nif (any(#Light).switch_switch == ""on"") {\n  if (lightOnStartTime == 0) {\n    lightOnStartTime = (#Clock).clock_timestamp\n    notificationPlayed = false\n  }\n  elapsed := (#Clock).clock_timestamp - lightOnStartTime\n  if ((elapsed >= 1800000) and (notificationPlayed == false)) {\n    if (any(#Alarm)) {\n      all(#Alarm).alarm_siren()\n    } else if (any(#Siren)) {\n      all(#Siren).sirenMode_setSirenMode(\'siren\')\n    }\n    notificationPlayed = true\n  }\n} else {\n  lightOnStartTime = 0\n  notificationPlayed = false\n}'}]",0.8,0,4.811
449,3,1,-,창문이 닫혀있다가 열리면 알림을 울려줘.,"If the window is closed, then sound the alarm when it opens.", ,,"{""name"": ""WindowIsClosedThenOpens"",  ""cron"": """",  ""period"": -1, ""code"": ""if ((#Window).windowControl_window == \""closed\"") {\n  wait until((#Window).windowControl_window == \""open\"")\n  (#Alarm).alarm_siren()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Window).windowControl_window == ""closed"") {\n  (#Speaker).mediaPlayback_speak(""Window is closed"")\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until((#Window).windowControl_window == ""open"")\n(#Alarm).alarm_siren()'}]",0.4,0,5.417,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#Window).windowControl_window == ""closed"")\n(#Speaker).mediaPlayback_speak(""창이 닫혀 있습니다."")\nname = ""Scenario2""\ncron = """"\nperiod = -1\nwait until((#Window).windowControl_window == ""open"")\n(#Speaker).mediaPlayback_speak(""창이 열려 있습니다."")'}]",,0,7.545,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'windowClosed := false\nif ((#Window).windowControl_window == ""closed"") {\n  windowClosed = true\n} else {\n  windowClosed = false\n}\nif ((windowClosed == true) and ((#Window).windowControl_window == ""open"")) {\n  if (any(#Alarm)) {\n    all(#Alarm).alarm_siren()\n  } else if (any(#Siren)) {\n    all(#Siren).switch_on()\n    all(#Siren).sirenMode_setSirenMode(\'siren\')\n  }\n  windowClosed = false\n}'}]",0.6,0,3.31,"[{'name': 'WindowOpenCloseNotification', 'cron': '', 'period': 100, 'code': 'windowClosed := false\nif ((#Window).windowControl_window == ""closed"") {\n  if (windowClosed == false) {\n    windowClosed = true\n  }\n} else {\n  if ((#Window).windowControl_window == ""open"" and windowClosed == true) {\n    (#Speaker).mediaPlayback_speak(""창을 닫았다가 열기"")\n    windowClosed = false\n  } else if ((#Window).windowControl_window != ""open"") {\n    windowClosed = false\n  }\n}'}]",0.5,0,4.799
450,9,1,-,"주소록에서 나를 제외한 모든 사람에게 이메일로 내 생일을 알려주는 내용으로 메일을 보내줘. 제목은 ""생일 알림"", 내용은 ""제 생일은 ~입니다""로 보내줘.",Send an email to everyone in the contact list except myself to notify them of my birthday.,,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""BirthdayNotification"", ""cron"": """", ""period"": -1, ""code"": ""(#EmailProvider).emailProvider_sendMail(\""honggd@test.com\"", \""Birthday Reminder\"", \""My birthday is 1991-03-03\"")\n(#EmailProvider).emailProvider_sendMail(\""kim@example.com\"", \""Birthday Reminder\"", \""My birthday is 1991-03-03\"")\n(#EmailProvider).emailProvider_sendMail(\""jangbogo@naver.com\"", \""Birthday Reminder\"", \""My birthday is 1991-03-03\"")""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'my_email := ""abcd1234@test.com""\nfor person in #ContactSensor {\n  if (person.email != my_email) {\n    (#EmailProvider).emailProvider_sendMail(\n      toAddress: person.email,\n      title: ""Happy Birthday!"",\n      text: ""Dear "" + person.name + "",\\n\\nWishing you a wonderful birthday! May this special day bring you joy, happiness, and all your dreams come true.\\n\\nBest regards,\\nYour Name""\n    )\n  }\n}'}]",0.2,0,7.376,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'contacts = [\n  {\n    ""name"": ""홍길동"",\n    ""contact"": ""010-9999-8888"",\n    ""email"": ""honggd@test.com"",\n    ""birthday"": ""1988-07-15"",\n    ""alternate_contact"": ""010-8888-7777""\n  },\n  {\n    ""name"": ""김무개"",\n    ""contact"": ""010-7777-6666"",\n    ""email"": ""kim@example.com"",\n    ""birthday"": ""1990-11-25""\n  },\n  {\n    ""name"": ""장보고"",\n    ""contact"": ""010-2222-3333"",\n    ""email"": ""jangbogo@naver.com"",\n    ""birthday"": ""1985-05-10"",\n    ""alternate_contact"": ""010-4444-5555""\n  }\n]\nfor contact in contacts {\n  (#EmailProvider).emailProvider_sendMail(\n    toAddress: contact.email,\n    title: ""Birthday reminder"",\n    text: ""My birthday is on "" + contact.birthday + "".""\n  )\n}'}]",,0,15.584,"[{'name': 'BirthdayEmailNotification', 'cron': '', 'period': -1, 'code': 'text = ""It\'s my birthday today!""\ntitle = ""Birthday Notification""\ntoAddress = ""all_contacts_except_me@example.com""\n(#EmailProvider).emailProvider_sendMail(toAddress, title, text)'}]",0.3,0,1.773,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': '(#EmailProvider).emailProvider_sendMail(""everyone_except_me@example.com"", ""Birthday reminder"", ""My birthday is on ."")'}]",0.3,0,3.288
451,9,1,-,"매년 내 생일이 되면 아침 9시에 ""생일 축하합니다"" 노래를 불러 줘.","Every year on my birthday at 9 AM, say ""Happy Birthday"".",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""BirthdayGreeting"",
  ""cron"": ""0 9 3 3 *"",
  ""period"": 0,
  ""code"": ""(#Speaker).mediaPlayback_speak(\""생일 축하합니다\"")""
}",,,,,"[{'name': 'Scenario1', 'cron': '0 9 3 * *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""Happy Birthday"")'}, {'name': 'Scenario2', 'cron': '0 9 15 * *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""Happy Birthday"")'}, {'name': 'Scenario3', 'cron': '0 9 25 * *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""Happy Birthday"")'}, {'name': 'Scenario4', 'cron': '0 9 10 * *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""Happy Birthday"")'}]",0.3,0,8.596,"[{'name': 'Scenario1', 'cron': '0 9 3 3 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하해, 나!"")'}, {'name': 'Scenario2', 'cron': '0 9 15 7 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하해요, 홍길동!"")'}, {'name': 'Scenario3', 'cron': '0 9 25 11 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하해요, 김무개!"")'}, {'name': 'Scenario4', 'cron': '0 9 10 5 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하해요, 장보고!"")'}]",,0,16.105,"[{'name': 'BirthdayGreeting', 'cron': '0 9 16 6 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하"")'}]",0.7,0,2.333,"[{'name': 'BirthdaySong', 'cron': '0 9 16 6 *', 'period': -1, 'code': '(#Speaker).mediaPlayback_speak(""생일 축하"")'}]",0.6,0,3.07
452,9,1,-,"알림이 울리면, 나와 홍길동에게 제목은 알림 발생, 내용은 알림이 울렸습니다라고 작성해서 메일을 보내줘. ","When the alarm turns on, send an email to me and Hong Gil-dong with the subject ""Alert Triggered"" and the message ""The alarm has turned on.""",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""AlarmAlertEmail"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#Alarm).alarm_alarm == ""siren"")\n(#EmailProvider).emailProvider_sendMailWithFile(""abcd1234@test.com"", ""Alert Triggered"", ""The alarm has turned on."")\n(#EmailProvider).emailProvider_sendMailWithFile(""honggd@test.com"", ""Alert Triggered"", ""The alarm has turned on."")""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#Alarm).alarm_alarm == ""both"")\n(#EmailProvider).emailProvider_sendMail(""abcd1234@test.com"", ""Alert Triggered"", ""The alarm has turned on."")\n(#EmailProvider).emailProvider_sendMail(""honggd@test.com"", ""Alert Triggered"", ""The alarm has turned on."")'}]",0.7,0,5.43,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#Alarm).notificationEvent_occurred == true)\n(#EmailProvider).emailProvider_sendMail(""abcd1234@test.com"", ""Notification occurred"", ""Notification went off"")'}]",,0,5.314,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'alertTriggered := false\nif ((#Alarm).alarm_alarm != ""off"") {\n  if (alertTriggered == false) {\n    alertTriggered = true\n    (#EmailProvider).emailProvider_sendMail(""me@example.com"", ""Alert Triggered"", ""The alarm has turned on."")\n    (#EmailProvider).emailProvider_sendMail(""honggildong@example.com"", ""Alert Triggered"", ""The alarm has turned on."")\n  }\n} else {\n  alertTriggered = false\n}'}]",0.5,0,2.706,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(any(#Alarm).alarm_alarm == true)\n(#EmailProvider).emailProvider_sendMail(""user@example.com"", ""Notification occurred"", ""Notification went off"")'}]",0.5,0,4.174
453,9,1,-,"낙상 감지 센서에서 낙상이 감지된 상태이면, 내 주변사람들에게 제목은 ""낙상 감지"", 내용은 ""제가 넘어졌습니다. 도와주세요""로 메일을 보내줘.","If a fall is detected by the fall detection sensor, send an email to my contacts with the subject ""Fall Detected"" and the message ""I have fallen. Please help me.""",,"[
  {
    ""name"": ""me"",
    ""contact"": ""010-1234-5678"",
    ""email"": ""abcd1234@test.com"",
    ""birthday"": ""1991-03-03""
  },
  {
    ""name"": ""홍길동"",
    ""contact"": ""010-9999-8888"",
    ""email"": ""honggd@test.com"",
    ""birthday"": ""1988-07-15"",
    ""alternate_contact"": ""010-8888-7777""
  },
  {
    ""name"": ""김무개"",
    ""contact"": ""010-7777-6666"",
    ""email"": ""kim@example.com"",
    ""birthday"": ""1990-11-25""
  },
  {
    ""name"": ""장보고"",
    ""contact"": ""010-2222-3333"",
    ""email"": ""jangbogo@naver.com"",
    ""birthday"": ""1985-05-10"",
    ""alternate_contact"": ""010-4444-5555""
  }
]","{""name"": ""AlertEmail"", ""cron"": """", ""period"": -1, ""code"": ""wait until((#FallSensor).fallDetection_fall == ""detected"")
(#EmailProvider).emailProvider_sendMailWithFile(""honggd@test.com"", ""Fall Detected"", ""I have fallen. Please help me."")
(#EmailProvider).emailProvider_sendMailWithFile(""kim@example.com"", ""Fall Detected"", ""I have fallen. Please help me."")
(#EmailProvider).emailProvider_sendMailWithFile(""jangbogo@naver.com"", ""Fall Detected"", ""I have fallen. Please help me."")}""",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#FallDetector).fallDetection_fall == ""fall""\n(#EmailProvider).emailProvider_sendMail(\n  toAddress = ""abcd1234@test.com, honggd@test.com, kim@example.com, jangbogo@naver.com"",\n  title = ""Fall Detected"",\n  text = ""I have fallen. Please help me.""\n)'}]",0.6,0,5.293,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#FallDetector).fallDetection_fall == ""fall"")\n(#Speaker).mediaPlayback_speak(""넘어졌어요. 도와주세요."")\n(#EmailProvider).emailProvider_sendMail(\n  toAddress = ""abcd1234@test.com, honggd@test.com, kim@example.com, jangbogo@naver.com"",\n  title = ""Fall detected"",\n  text = ""I fell. Please help me.""\n)'}]",,0,8.186,"[{'name': 'FallDetectionEmailAlert', 'cron': '', 'period': 1000, 'code': 'triggered := false\nif ((#FallDetector).fallDetection_fall == ""fall"") {\n  if (triggered == false) {\n    (#EmailProvider).emailProvider_sendMail(""mycontacts@example.com"", ""Fall Detected"", ""I have fallen. Please help me."")\n    triggered = true\n  }\n} else {\n  triggered = false\n}'}]",0.4,0,2.555,"[{'name': 'FallDetectionAlert', 'cron': '', 'period': -1, 'code': 'wait until((#FallDetector).fallDetection_fall == fall)\n(#EmailProvider).emailProvider_sendMail(""people_close@example.com"", ""Fall Detection"", ""I fell. Please help me."")'}]",0.4,0,3.773
450,3,1,-,비어있다가 누군가 감지되면 알림을 울려줘.,"If the space was empty and someone shows up, sound the alarm.", ,,"{""name"": ""AlertOnPresenceAfterEmpty"", ""cron"": """", ""period"": -1, ""code"": ""if ((#PresenceSensor).presenceSensor_presence == \""not present\"") {\n  wait until ((#PresenceSensor).presenceSensor_presence == \""present\"") {\n    (#Alarm).alarm_siren()\n  }\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'presenceDetected := false\nif ((#PresenceSensor).presenceSensor_presence == ""not_present"") {\n  presenceDetected = false\n} else {\n  if (presenceDetected == false) {\n    (#Alarm).alarm_siren()\n    presenceDetected = true\n  }\n}'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until((#PresenceSensor).presenceSensor_presence == ""present"")\n(#Alarm).alarm_siren()'}]",0.5,0,6.407,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#SoundSensor).binarySensor_binaryState == ""empty""\nwait until(#PresenceSensor).presenceSensor_presence == ""present""\n(#Speaker).mediaPlayback_speak(""경고: 휴지통이 비어 있고 누군가 있습니다."")'}, {'name': 'Scenario2', 'cron': '', 'period': -1, 'code': 'wait until(#SoundSensor).binarySensor_binaryState == ""full""\nwait until(#PresenceSensor).presenceSensor_presence == ""not_present""\n(#Speaker).mediaPlayback_speak(""경고: 빈칸이 꽉 찼는데 아무도 없습니다."")'}]",,0,9.937,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'spaceEmpty := true\nif (all(#PresenceSensor).presenceSensor_presence == not_present) {\n  spaceEmpty = true\n}\nif ((spaceEmpty == true) and (any(#PresenceSensor).presenceSensor_presence == present)) {\n  (#Alarm).alarm_siren()\n  spaceEmpty = false\n}\nif (all(#PresenceSensor).presenceSensor_presence == not_present) {\n  spaceEmpty = true\n}'}]",0.6,0,2.76,"[{'name': 'Scenario1', 'cron': '', 'period': 1000, 'code': 'empty_prev := false\npresence_prev := false\npresence_now = false\nempty_now = false\nif (any(#PresenceSensor).presenceSensor_presence == #PresenceSensor.presenceSensor_presence.not_present) {\n  empty_now = true\n} else {\n  empty_now = false\n}\npresence_now = any(#PresenceSensor).presenceSensor_presence == #PresenceSensor.presenceSensor_presence.present\nif ((empty_now == true) and (presence_now == true) and (presence_prev == false)) {\n  all(#Light).switchLevel_alert()\n}\npresence_prev = presence_now\nempty_prev = empty_now'}]",0.5,0,4.46
455,4,1,-,조명이 꺼져 있고 사람이 감지되면 3초 후 조명을 켜 줘.,"If the light is off and someone is detected, turn on the light after 3 seconds.",,,"{""name"": ""LightOnIfPersonDetected"",
  ""cron"": """", ""period"": -1, ""code"": ""if ((#Light).switch_switch == \""off\"") and ((#PresenceSensor).presenceSensor_presence == \""present\"") {\n  (#clock).delay(3000)\n  (#Light).switch_on()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#MotionSensor).motionSensor_motion == ""active"") {\n  wait until(#MotionSensor).motionSensor_motion == ""inactive""\n  (#Light).switch_on()\n  (#Light).switchLevel_setLevel(100, 1000)\n}'}]",0.4,0,4.924,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'if ((#Light).switch_switch == ""off"") and ((#FallDetector).presenceSensor_presence == true) {\n  wait until(#Clock).clock_delay(3000)\n  (#Light).switch_on()\n}'}]",,0,5.997,"[{'name': 'TurnOnLightAfterMotion', 'cron': '', 'period': 100, 'code': 'triggered := false\nif (((#Light).switch_switch == ""off"") and ((#MotionSensor).motionSensor_motion == ""active"")) {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(3000)\n    (#Light).switch_on()\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.302,"[{'name': 'TurnOnLightsWhenPersonDetected', 'cron': '', 'period': 100, 'code': 'triggered := false\nif ((#Light).switch_switch == ""off"" and any(#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(3000)\n    (#Light).switch_on()\n  }\n} else {\n  triggered = false\n}'}]",0.7,0,3.678
456,4,1,-,문이 열려 있고 10초 이상 그대로면 알림을 울려 줘.,"If the door remains open for more than 10 seconds, sound the alarm.",,,"{""name"": ""DoorOpenTooLongAlert"",
  ""cron"": """", ""period"": -1,  ""code"": ""if ((#Door).doorControl_door == \""open\"") {\n  (#Clock).clock_delay(10000)\n  if ((#Door).doorControl_door == \""open\"") {\n    (#Alarm).alarm_siren()\n  }\n}""
}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'doorOpenTime := 0\nif ((#DoorLock).doorControl_door == ""open"") {\n  doorOpenTime = doorOpenTime + 100\n  wait until(doorOpenTime >= 10000)\n  (#Alarm).alarm_siren()\n  doorOpenTime = 0\n} else {\n  doorOpenTime = 0\n}'}]",0.7,0,5.56,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#DoorLock).doorControl_door == ""open"" and (#DoorLock).doorControl_door == ""unlocked""\nwait until(#Clock).clock_delay(10000)\n(#Speaker).mediaPlayback_speak(""도어가 10초 이상 잠금 해제된 상태입니다."")'}]",,0,6.432,"[{'name': 'DoorOpenAlarm', 'cron': '', 'period': 100, 'code': 'doorOpenDuration := 0\ntriggered := false\nif ((#DoorLock).doorControl_door == open) {\n  doorOpenDuration = doorOpenDuration + 100\n  if ((doorOpenDuration > 10000) and (triggered == false)) {\n    (#Alarm).alarm_siren()\n    triggered = true\n  }\n} else {\n  doorOpenDuration = 0\n  if (triggered == true) {\n    (#Alarm).alarm_off()\n    triggered = false\n  }\n}'}]",0.8,0,3.509,"[{'name': 'DoorOpenUnlockNotification', 'cron': '', 'period': 100, 'code': 'doorOpenDuration := 0\ndoorPreviouslyOpen := false\nif ((#DoorLock).doorControl_door == ""open"") {\n  if (doorPreviouslyOpen == false) {\n    doorPreviouslyOpen = true\n    doorOpenDuration = 0\n  } else {\n    doorOpenDuration = doorOpenDuration + 100\n  }\n  if (doorOpenDuration > 10000) {\n    (#Speaker).mediaPlayback_speak(""문이 열려 있고 잠겨 있지 않은 상태입니다."")\n    doorOpenDuration = 0\n  }\n} else {\n  doorPreviouslyOpen = false\n  doorOpenDuration = 0\n}'}]",0.6,0,5.311
457,4,1,-,습도가 30% 이하로 떨어진 뒤 5초가 지나면 가습기를 켜 줘.,"When the humidity drops below 30%, turn on the humidifier after 5 seconds.",,,"{""name"": ""HumidityLowThenHumidifier"",
  ""cron"": """", ""period"": -1, ""code"": ""wait until((#HumiditySensor).relativeHumidityMeasurement_humidity <=30)\n(#Clock).clock_delay(5000)\n(#Humidifier).switch_on()""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until(#HumiditySensor).relativeHumidityMeasurement_humidity < 30.0\nwait until(#Clock).clock_delay(5000)\n(#Humidifier).switch_on()'}]",0.9,0,4.063,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'wait until((#HumiditySensor).relativeHumidityMeasurement_humidity <= 30.0)\n(#Humidifier).switch_on()\n(#Clock).clock_delay(ms: 5000)\n(#Humidifier).switch_on()'}]",,0,5.393,"[{'name': 'HumidityBelow30DelayHumidifierOn', 'cron': '', 'period': 100, 'code': 'triggered := false\nwaited := false\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity < 30.0) {\n  if (triggered == false) {\n    triggered = true\n    waited = false\n  }\n  if (waited == false) {\n    (#Clock).clock_delay(5000)\n    waited = true\n  }\n  if (waited == true) {\n    (#Humidifier).switch_on()\n  }\n} else {\n  triggered = false\n  waited = false\n}'}]",0.9,0,3.519,"[{'name': 'Humidifier On Delay After Low Humidity', 'cron': '', 'period': 100, 'code': 'triggered := false\nwaited := false\nif ((#HumiditySensor).relativeHumidityMeasurement_humidity < 30.0) {\n  if (triggered == false) {\n    triggered = true\n    waited = false\n  }\n  if (waited == false) {\n    (#Clock).clock_delay(5000)\n    waited = true\n    all(#Humidifier).switch_on()\n  }\n} else {\n  triggered = false\n  waited = false\n}'}]",0.8,0,4.219
458,4,1,-,창문이 열린 후 5초 내에 조명이 켜져 있으면 조명을 켜 줘.,"If the window is opened and the light is on within 5 seconds, turn on the light.",,,"{""name"": ""WindowOpenThenLight"",
  ""cron"": """", ""period"": -1, ""code"": ""wait until((#Window).windowControl_window == \""open\"")\n(#Clock).clock_delay(5000)\nif ((#Light).switch_switch == \""on\"") {\n (#Light).switch_on()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': -1, 'code': 'windowOpened := false\nif ((#Window).windowControl_window == ""open"") {\n  windowOpened = true\n  wait until(windowOpened == false)\n  (#Light).switch_on()\n}'}]",0.5,0,4.2,"[{'name': 'Scenario1', 'cron': '', 'period': 10000, 'code': 'windowOpened := false\nif ((#Window).windowControl_window == ""open"") {\n  windowOpened = true\n}\nif (windowOpened) {\n  wait until(#Light).switch_switch == ""on""\n  (#Speaker).mediaPlayback_speak(""이미 불이 켜져 있습니다."")\n} else {\n  (#Speaker).mediaPlayback_speak(""창이 아직 열려 있지 않습니다."")\n}'}]",,0,8.622,"[{'name': 'Scenario1', 'cron': '', 'period': 100, 'code': 'timerStarted := false\nstartTime := 0\nif (((#Window).windowControl_window == ""open"") and ((#Light).switch_switch == ""on"")) {\n  if (timerStarted == false) {\n    startTime = (#Clock).clock_timestamp\n    timerStarted = true\n  } else {\n    elapsed = (#Clock).clock_timestamp - startTime\n    if (elapsed <= 5000) {\n      (#Light).switch_on()\n    } else {\n      timerStarted = false\n    }\n  }\n} else {\n  timerStarted = false\n}'}]",0.6,0,3.42,"[{'name': 'LightOnAfterWindowOpen', 'cron': '', 'period': 100, 'code': 'windowOpenedTime := -1\nlightTurnedOn := false\nif (((#Window).windowControl_window == ""open"") and (windowOpenedTime == -1)) {\n  windowOpenedTime = (#Clock).clock_timestamp\n  lightTurnedOn = false\n}\nif ((windowOpenedTime != -1) and (lightTurnedOn == false)) {\n  elapsed = (#Clock).clock_timestamp - windowOpenedTime\n  if (elapsed <= 5000) {\n    if ((#Light).switch_switch == ""off"") {\n      (#Light).switch_on()\n      lightTurnedOn = true\n    }\n  } else {\n    windowOpenedTime = -1\n  }\n}\nif ((#Window).windowControl_window != ""open"") {\n  windowOpenedTime = -1\n  lightTurnedOn = false\n}'}]",0.7,0,5.305
459,4,1,-,"5초마다 움직임을 감지하고, 감지되면 2초 대기 후 알람을 울려 줘.","Every 5 seconds, check for motion, and if detected, wait 2 seconds and then sound the alarm.",,,"{""name"": ""MotionDetectedAlarm"", ""cron"": """", ""period"": 5000, ""code"": ""if ((#MotionSensor).motionSensor_motion == \""active\"") {\n  (#clock).delay(2000)\n  (#Alarm).alarm_siren()\n}""}",,,,,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'if ((#MotionSensor).motionSensor_motion == ""active"") {\n  wait until(#Clock).clock_delay(2000)\n  (#Alarm).alarm_siren()\n}'}]",0.95,0,3.807,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'motionDetected := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  motionDetected = true\n  wait until(#Clock).clock_delay(2000)\n  (#Alarm).alarm_siren()\n  motionDetected = false\n}'}]",,0,5.442,"[{'name': 'Scenario1', 'cron': '', 'period': 5000, 'code': 'triggered := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(2000)\n    (#Alarm).alarm_siren()\n  }\n} else {\n  triggered = false\n}'}]",0.9,0,2.126,"[{'name': 'MotionAlarm', 'cron': '', 'period': 5000, 'code': 'triggered := false\nif ((#MotionSensor).motionSensor_motion == ""active"") {\n  if (triggered == false) {\n    triggered = true\n    (#Clock).clock_delay(2000)\n    all(#Alarm).alarm_siren()\n  }\n} else {\n  triggered = false\n}'}]",0.9,0,3.074


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ANY ASSIGN COMMA DAY DECLARE DELAY DIVIDE DOT DOUBLE ELSE EQ GE GT HASH HOUR IDENTIFIER IF INTEGER LBRACE LE LPAREN LT MILLISECOND MINUS MINUTE NE NOT OR PLUS RBRACE RPAREN SECOND STRING_LITERAL TIMES WAIT_UNTILscenario : statement_liststatement_list : statement\n                      | statement statement_liststatement : action\n                 | all_action\n                 | assignment\n                 | if_statement\n                 | wait_statement\n                 | compound_statementcompound_statement : LBRACE statement_list RBRACEassignment : IDENTIFIER ASSIGN expression\n                  | IDENTIFIER DECLARE expressionexpression : IDENTIFIER\n                  | INTEGER\n                  | DOUBLE\n                  | STRING_LITERAL\n                  | tag_expression DOT IDENTIFIER\n                  | tag_expression DOT IDENTIFIER LPAREN input RPAREN\n                  | tag_expression DOT IDENTIFIER LPAREN RPAREN\n                  | ANY LPAREN tag_list RPAREN DOT IDENTIFIERexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionaction : LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN\n              | LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPARENtag_expression : LPAREN tag_list RPARENtag_list : HASH IDENTIFIER\n                | HASH IDENTIFIER tag_listinput : expression\n             | input COMMA expressionif_statement : IF LPAREN condition_list RPAREN compound_statement else_clauseelse_clause : ELSE statement\n                   | emptystatement : DELAY LPAREN expression RPARENcondition_list : condition\n                      | LPAREN condition_list RPAREN\n                      | condition_list AND condition_list\n                      | condition_list OR condition_list\n                      | NOT conditioncondition : expression GE expression\n                 | expression LE expression\n                 | expression EQ expression\n                 | expression NE expression\n                 | expression GT expression\n                 | expression LT expressionwait_statement : WAIT_UNTIL LPAREN condition_list RPAREN\n                      | WAIT_UNTIL LPAREN period_time RPARENperiod_time : INTEGER time_unittime_unit : MILLISECOND\n                 | SECOND\n                 | MINUTE\n                 | HOUR\n                 | DAYempty :all_action : ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN\n                  | ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPAREN'
    
_lr_action_items = {'DELAY':([0,3,4,5,6,7,8,9,16,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,103,104,106,109,112,113,115,116,117,120,],[10,10,-4,-5,-6,-7,-8,-9,10,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,10,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'LPAREN':([0,3,4,5,6,7,8,9,10,13,14,15,16,18,21,22,24,25,29,30,31,32,34,37,38,40,43,48,50,51,52,53,54,62,63,65,66,67,68,69,70,71,72,80,81,82,83,84,86,89,98,100,101,102,103,104,106,109,111,112,113,114,115,116,117,120,],[11,11,-4,-5,-6,-7,-8,-9,18,23,24,25,11,27,27,27,40,40,-13,-14,-15,-16,56,-11,-12,40,27,-10,-35,27,27,27,27,40,40,27,27,27,27,27,27,-47,-48,-21,-22,-23,-24,98,100,-55,27,27,111,-32,11,-34,-19,-25,27,-33,-18,27,-20,-26,-56,-57,]),'ALL':([0,3,4,5,6,7,8,9,16,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,103,104,106,109,112,113,115,116,117,120,],[13,13,-4,-5,-6,-7,-8,-9,13,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,13,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,16,18,20,21,22,24,25,29,30,31,32,37,38,40,43,48,50,51,52,53,54,55,57,62,63,65,66,67,68,69,70,71,72,80,81,82,83,84,87,89,98,100,102,103,104,106,108,109,111,112,113,114,115,116,117,120,],[12,12,-4,-5,-6,-7,-8,-9,12,29,36,29,29,29,29,-13,-14,-15,-16,-11,-12,29,29,-10,-35,29,29,29,29,84,86,29,29,29,29,29,29,29,29,-47,-48,-21,-22,-23,-24,-17,101,-55,29,29,-32,12,-34,-19,115,-25,29,-33,-18,29,-20,-26,-56,-57,]),'IF':([0,3,4,5,6,7,8,9,16,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,103,104,106,109,112,113,115,116,117,120,],[14,14,-4,-5,-6,-7,-8,-9,14,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,14,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'WAIT_UNTIL':([0,3,4,5,6,7,8,9,16,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,103,104,106,109,112,113,115,116,117,120,],[15,15,-4,-5,-6,-7,-8,-9,15,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,15,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'LBRACE':([0,3,4,5,6,7,8,9,16,29,30,31,32,37,38,48,50,61,71,72,80,81,82,83,84,89,102,103,104,106,109,112,113,115,116,117,120,],[16,16,-4,-5,-6,-7,-8,-9,16,-13,-14,-15,-16,-11,-12,-10,-35,16,-47,-48,-21,-22,-23,-24,-17,-55,-32,16,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'$end':([1,2,3,4,5,6,7,8,9,17,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,104,106,109,112,113,115,116,117,120,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-3,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'RBRACE':([3,4,5,6,7,8,9,17,26,29,30,31,32,37,38,48,50,71,72,80,81,82,83,84,89,102,104,106,109,112,113,115,116,117,120,],[-2,-4,-5,-6,-7,-8,-9,-3,48,-13,-14,-15,-16,-11,-12,-10,-35,-47,-48,-21,-22,-23,-24,-17,-55,-32,-34,-19,-25,-33,-18,-20,-26,-56,-57,]),'HASH':([11,23,27,36,40,56,],[20,20,20,20,20,20,]),'ASSIGN':([12,],[21,]),'DECLARE':([12,],[22,]),'INTEGER':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[30,30,30,30,47,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DOUBLE':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING_LITERAL':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ANY':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RPAREN':([19,28,29,30,31,32,36,39,41,42,45,46,49,58,60,64,73,74,75,76,77,78,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,98,100,105,106,107,110,111,113,115,118,119,],[35,50,-13,-14,-15,-16,-28,59,61,-36,71,72,79,-29,88,-40,-49,-50,-51,-52,-53,-54,-21,-22,-23,-24,-17,99,-37,-38,-39,-41,-42,-43,-44,-45,-46,106,109,113,-19,-30,116,117,-18,-20,120,-31,]),'NOT':([24,25,40,62,63,],[43,43,43,43,43,]),'PLUS':([28,29,30,31,32,37,38,44,47,80,81,82,83,84,92,93,94,95,96,97,106,107,113,115,119,],[51,-13,-14,-15,-16,51,51,51,-14,51,51,51,51,-17,51,51,51,51,51,51,-19,51,-18,-20,51,]),'MINUS':([28,29,30,31,32,37,38,44,47,80,81,82,83,84,92,93,94,95,96,97,106,107,113,115,119,],[52,-13,-14,-15,-16,52,52,52,-14,52,52,52,52,-17,52,52,52,52,52,52,-19,52,-18,-20,52,]),'TIMES':([28,29,30,31,32,37,38,44,47,80,81,82,83,84,92,93,94,95,96,97,106,107,113,115,119,],[53,-13,-14,-15,-16,53,53,53,-14,53,53,53,53,-17,53,53,53,53,53,53,-19,53,-18,-20,53,]),'DIVIDE':([28,29,30,31,32,37,38,44,47,80,81,82,83,84,92,93,94,95,96,97,106,107,113,115,119,],[54,-13,-14,-15,-16,54,54,54,-14,54,54,54,54,-17,54,54,54,54,54,54,-19,54,-18,-20,54,]),'GE':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,65,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'LE':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,66,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'EQ':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,67,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'NE':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,68,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'GT':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,69,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'LT':([29,30,31,32,44,47,80,81,82,83,84,106,113,115,],[-13,-14,-15,-16,70,-14,-21,-22,-23,-24,-17,-19,-18,-20,]),'AND':([29,30,31,32,41,42,45,60,64,80,81,82,83,84,88,90,91,92,93,94,95,96,97,106,113,115,],[-13,-14,-15,-16,62,-36,62,62,-40,-21,-22,-23,-24,-17,-37,62,62,-41,-42,-43,-44,-45,-46,-19,-18,-20,]),'OR':([29,30,31,32,41,42,45,60,64,80,81,82,83,84,88,90,91,92,93,94,95,96,97,106,113,115,],[-13,-14,-15,-16,63,-36,63,63,-40,-21,-22,-23,-24,-17,-37,63,63,-41,-42,-43,-44,-45,-46,-19,-18,-20,]),'COMMA':([29,30,31,32,80,81,82,83,84,105,106,107,110,113,115,118,119,],[-13,-14,-15,-16,-21,-22,-23,-24,-17,114,-19,-30,114,-18,-20,114,-31,]),'DOT':([33,35,59,79,99,],[55,57,87,-27,108,]),'MILLISECOND':([47,],[74,]),'SECOND':([47,],[75,]),'MINUTE':([47,],[76,]),'HOUR':([47,],[77,]),'DAY':([47,],[78,]),'ELSE':([48,89,],[-10,103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scenario':([0,],[1,]),'statement_list':([0,3,16,],[2,17,26,]),'statement':([0,3,16,103,],[3,3,3,112,]),'action':([0,3,16,103,],[4,4,4,4,]),'all_action':([0,3,16,103,],[5,5,5,5,]),'assignment':([0,3,16,103,],[6,6,6,6,]),'if_statement':([0,3,16,103,],[7,7,7,7,]),'wait_statement':([0,3,16,103,],[8,8,8,8,]),'compound_statement':([0,3,16,61,103,],[9,9,9,89,9,]),'tag_list':([11,23,27,36,40,56,],[19,39,49,58,49,85,]),'expression':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[28,37,38,44,44,44,44,80,81,82,83,44,44,92,93,94,95,96,97,107,107,107,119,]),'tag_expression':([18,21,22,24,25,40,43,51,52,53,54,62,63,65,66,67,68,69,70,98,100,111,114,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'condition_list':([24,25,40,62,63,],[41,45,60,90,91,]),'condition':([24,25,40,43,62,63,],[42,42,42,64,42,42,]),'period_time':([25,],[46,]),'time_unit':([47,],[73,]),'else_clause':([89,],[102,]),'empty':([89,],[104,]),'input':([98,100,111,],[105,110,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scenario","S'",1,None,None,None),
  ('scenario -> statement_list','scenario',1,'p_scenario','soplang_parser_full.py',85),
  ('statement_list -> statement','statement_list',1,'p_statement_list','soplang_parser_full.py',89),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','soplang_parser_full.py',90),
  ('statement -> action','statement',1,'p_statement','soplang_parser_full.py',94),
  ('statement -> all_action','statement',1,'p_statement','soplang_parser_full.py',95),
  ('statement -> assignment','statement',1,'p_statement','soplang_parser_full.py',96),
  ('statement -> if_statement','statement',1,'p_statement','soplang_parser_full.py',97),
  ('statement -> wait_statement','statement',1,'p_statement','soplang_parser_full.py',98),
  ('statement -> compound_statement','statement',1,'p_statement','soplang_parser_full.py',99),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','soplang_parser_full.py',103),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','soplang_parser_full.py',107),
  ('assignment -> IDENTIFIER DECLARE expression','assignment',3,'p_assignment','soplang_parser_full.py',108),
  ('expression -> IDENTIFIER','expression',1,'p_expression','soplang_parser_full.py',113),
  ('expression -> INTEGER','expression',1,'p_expression','soplang_parser_full.py',114),
  ('expression -> DOUBLE','expression',1,'p_expression','soplang_parser_full.py',115),
  ('expression -> STRING_LITERAL','expression',1,'p_expression','soplang_parser_full.py',116),
  ('expression -> tag_expression DOT IDENTIFIER','expression',3,'p_expression','soplang_parser_full.py',117),
  ('expression -> tag_expression DOT IDENTIFIER LPAREN input RPAREN','expression',6,'p_expression','soplang_parser_full.py',118),
  ('expression -> tag_expression DOT IDENTIFIER LPAREN RPAREN','expression',5,'p_expression','soplang_parser_full.py',119),
  ('expression -> ANY LPAREN tag_list RPAREN DOT IDENTIFIER','expression',6,'p_expression','soplang_parser_full.py',120),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','soplang_parser_full.py',131),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','soplang_parser_full.py',132),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary','soplang_parser_full.py',133),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','soplang_parser_full.py',134),
  ('action -> LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN','action',7,'p_action','soplang_parser_full.py',144),
  ('action -> LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPAREN','action',8,'p_action','soplang_parser_full.py',145),
  ('tag_expression -> LPAREN tag_list RPAREN','tag_expression',3,'p_tag_expression','soplang_parser_full.py',162),
  ('tag_list -> HASH IDENTIFIER','tag_list',2,'p_tag_list','soplang_parser_full.py',166),
  ('tag_list -> HASH IDENTIFIER tag_list','tag_list',3,'p_tag_list','soplang_parser_full.py',167),
  ('input -> expression','input',1,'p_input','soplang_parser_full.py',174),
  ('input -> input COMMA expression','input',3,'p_input','soplang_parser_full.py',175),
  ('if_statement -> IF LPAREN condition_list RPAREN compound_statement else_clause','if_statement',6,'p_if_statement','soplang_parser_full.py',182),
  ('else_clause -> ELSE statement','else_clause',2,'p_else_clause','soplang_parser_full.py',186),
  ('else_clause -> empty','else_clause',1,'p_else_clause','soplang_parser_full.py',187),
  ('statement -> DELAY LPAREN expression RPAREN','statement',4,'p_delay_statement','soplang_parser_full.py',191),
  ('condition_list -> condition','condition_list',1,'p_condition_list','soplang_parser_full.py',196),
  ('condition_list -> LPAREN condition_list RPAREN','condition_list',3,'p_condition_list','soplang_parser_full.py',197),
  ('condition_list -> condition_list AND condition_list','condition_list',3,'p_condition_list','soplang_parser_full.py',198),
  ('condition_list -> condition_list OR condition_list','condition_list',3,'p_condition_list','soplang_parser_full.py',199),
  ('condition_list -> NOT condition','condition_list',2,'p_condition_list','soplang_parser_full.py',200),
  ('condition -> expression GE expression','condition',3,'p_condition','soplang_parser_full.py',211),
  ('condition -> expression LE expression','condition',3,'p_condition','soplang_parser_full.py',212),
  ('condition -> expression EQ expression','condition',3,'p_condition','soplang_parser_full.py',213),
  ('condition -> expression NE expression','condition',3,'p_condition','soplang_parser_full.py',214),
  ('condition -> expression GT expression','condition',3,'p_condition','soplang_parser_full.py',215),
  ('condition -> expression LT expression','condition',3,'p_condition','soplang_parser_full.py',216),
  ('wait_statement -> WAIT_UNTIL LPAREN condition_list RPAREN','wait_statement',4,'p_wait_statement','soplang_parser_full.py',220),
  ('wait_statement -> WAIT_UNTIL LPAREN period_time RPAREN','wait_statement',4,'p_wait_statement','soplang_parser_full.py',221),
  ('period_time -> INTEGER time_unit','period_time',2,'p_period_time','soplang_parser_full.py',228),
  ('time_unit -> MILLISECOND','time_unit',1,'p_time_unit','soplang_parser_full.py',232),
  ('time_unit -> SECOND','time_unit',1,'p_time_unit','soplang_parser_full.py',233),
  ('time_unit -> MINUTE','time_unit',1,'p_time_unit','soplang_parser_full.py',234),
  ('time_unit -> HOUR','time_unit',1,'p_time_unit','soplang_parser_full.py',235),
  ('time_unit -> DAY','time_unit',1,'p_time_unit','soplang_parser_full.py',236),
  ('empty -> <empty>','empty',0,'p_empty','soplang_parser_full.py',240),
  ('all_action -> ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN','all_action',8,'p_all_action','soplang_parser_full.py',247),
  ('all_action -> ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPAREN','all_action',9,'p_all_action','soplang_parser_full.py',248),
]

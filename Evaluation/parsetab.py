
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGELTLEleftPLUSMINUSleftTIMESDIVIDEALL AND ANY ASSIGN COMMA DAY DECLARE DELAY DIVIDE DOT DOUBLE ELSE EQ GE GT HASH HOUR IDENTIFIER IF INTEGER LBRACE LE LPAREN LT MILLISECOND MINUS MINUTE NE NOT OR PERCENT PLUS RBRACE RPAREN SECOND STRING_LITERAL TAG TIMES WAIT_UNTILscenario : statement_liststatement_list : statement\n                      | statement statement_liststatement : action\n                 | all_action\n                 | assignment\n                 | if_statement\n                 | wait_statement\n                 | compound_statementtag_list : TAG\n                | tag_list TAGtag_expression : LPAREN tag_list RPARENexpression : tag_expression DOT IDENTIFIERexpression : tag_expression DOT IDENTIFIER LPAREN input RPAREN\n                  | tag_expression DOT IDENTIFIER LPAREN RPARENaction : LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN\n              | LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPARENall_action : ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN\n                  | ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPARENexpression : expression AND expression\n                  | expression OR expressionexpression : ALL LPAREN tag_list RPAREN DOT IDENTIFIERexpression : expression PERCENTassignment : IDENTIFIER ASSIGN expression\n                  | IDENTIFIER DECLARE expressionexpression : IDENTIFIER\n                  | INTEGER\n                  | DOUBLE\n                  | STRING_LITERALexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressioninput : expression\n             | input COMMA expressioncompound_statement : LBRACE statement_list RBRACEif_statement : IF LPAREN condition_list RPAREN compound_statement else_clauseelse_clause : ELSE statement\n                   | emptystatement : DELAY LPAREN expression RPARENcondition_list : condition\n                      | LPAREN condition_list RPAREN\n                      | condition_list AND condition_list\n                      | condition_list OR condition_list\n                      | NOT conditioncondition : expression GE expression\n                 | expression LE expression\n                 | expression EQ expression\n                 | expression NE expression\n                 | expression GT expression\n                 | expression LT expressionwait_statement : WAIT_UNTIL LPAREN condition_list RPAREN\n                      | WAIT_UNTIL LPAREN period_time RPARENperiod_time : INTEGER time_unittime_unit : MILLISECOND\n                 | SECOND\n                 | MINUTE\n                 | HOUR\n                 | DAYempty :'
    
_lr_action_items = {'DELAY':([0,3,4,5,6,7,8,9,16,30,32,33,34,37,38,48,50,53,73,74,82,83,84,85,86,87,88,93,106,107,108,110,113,116,117,119,120,121,124,],[10,10,-4,-5,-6,-7,-8,-9,10,-26,-27,-28,-29,-24,-25,-36,-40,-23,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,10,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'LPAREN':([0,3,4,5,6,7,8,9,10,13,14,15,16,18,21,22,24,25,30,31,32,33,34,37,38,40,43,48,50,51,52,53,54,55,56,57,64,65,67,68,69,70,71,72,73,74,82,83,84,85,86,87,88,90,93,102,104,105,106,107,108,110,113,115,116,117,118,119,120,121,124,],[11,11,-4,-5,-6,-7,-8,-9,18,23,24,25,11,27,27,27,40,40,-26,59,-27,-28,-29,-24,-25,40,27,-36,-40,27,27,-23,27,27,27,27,40,40,27,27,27,27,27,27,-52,-53,-20,-21,-30,-31,-32,-33,102,104,-60,27,27,115,-37,11,-39,-15,-16,27,-38,-14,27,-22,-17,-18,-19,]),'ALL':([0,3,4,5,6,7,8,9,16,18,21,22,24,25,30,32,33,34,37,38,40,43,48,50,51,52,53,54,55,56,57,64,65,67,68,69,70,71,72,73,74,82,83,84,85,86,87,88,93,102,104,106,107,108,110,113,115,116,117,118,119,120,121,124,],[13,13,-4,-5,-6,-7,-8,-9,13,31,31,31,31,31,-26,-27,-28,-29,-24,-25,31,31,-36,-40,31,31,-23,31,31,31,31,31,31,31,31,31,31,31,31,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,31,31,-37,13,-39,-15,-16,31,-38,-14,31,-22,-17,-18,-19,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,16,18,21,22,24,25,30,32,33,34,37,38,40,43,48,50,51,52,53,54,55,56,57,58,60,64,65,67,68,69,70,71,72,73,74,82,83,84,85,86,87,88,91,93,102,104,106,107,108,110,112,113,115,116,117,118,119,120,121,124,],[12,12,-4,-5,-6,-7,-8,-9,12,30,30,30,30,30,-26,-27,-28,-29,-24,-25,30,30,-36,-40,30,30,-23,30,30,30,30,88,90,30,30,30,30,30,30,30,30,-52,-53,-20,-21,-30,-31,-32,-33,-13,105,-60,30,30,-37,12,-39,-15,119,-16,30,-38,-14,30,-22,-17,-18,-19,]),'IF':([0,3,4,5,6,7,8,9,16,30,32,33,34,37,38,48,50,53,73,74,82,83,84,85,86,87,88,93,106,107,108,110,113,116,117,119,120,121,124,],[14,14,-4,-5,-6,-7,-8,-9,14,-26,-27,-28,-29,-24,-25,-36,-40,-23,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,14,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'WAIT_UNTIL':([0,3,4,5,6,7,8,9,16,30,32,33,34,37,38,48,50,53,73,74,82,83,84,85,86,87,88,93,106,107,108,110,113,116,117,119,120,121,124,],[15,15,-4,-5,-6,-7,-8,-9,15,-26,-27,-28,-29,-24,-25,-36,-40,-23,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,15,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'LBRACE':([0,3,4,5,6,7,8,9,16,30,32,33,34,37,38,48,50,53,63,73,74,82,83,84,85,86,87,88,93,106,107,108,110,113,116,117,119,120,121,124,],[16,16,-4,-5,-6,-7,-8,-9,16,-26,-27,-28,-29,-24,-25,-36,-40,-23,16,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,16,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'$end':([1,2,3,4,5,6,7,8,9,17,30,32,33,34,37,38,48,50,53,73,74,82,83,84,85,86,87,88,93,106,108,110,113,116,117,119,120,121,124,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-3,-26,-27,-28,-29,-24,-25,-36,-40,-23,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'RBRACE':([3,4,5,6,7,8,9,17,26,30,32,33,34,37,38,48,50,53,73,74,82,83,84,85,86,87,88,93,106,108,110,113,116,117,119,120,121,124,],[-2,-4,-5,-6,-7,-8,-9,-3,48,-26,-27,-28,-29,-24,-25,-36,-40,-23,-52,-53,-20,-21,-30,-31,-32,-33,-13,-60,-37,-39,-15,-16,-38,-14,-22,-17,-18,-19,]),'TAG':([11,19,20,23,27,36,39,40,49,59,89,],[20,36,-10,20,20,-11,36,20,36,20,36,]),'ASSIGN':([12,],[21,]),'DECLARE':([12,],[22,]),'INTEGER':([18,21,22,24,25,40,43,51,52,54,55,56,57,64,65,67,68,69,70,71,72,102,104,115,118,],[32,32,32,32,47,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'DOUBLE':([18,21,22,24,25,40,43,51,52,54,55,56,57,64,65,67,68,69,70,71,72,102,104,115,118,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'STRING_LITERAL':([18,21,22,24,25,40,43,51,52,54,55,56,57,64,65,67,68,69,70,71,72,102,104,115,118,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RPAREN':([19,20,28,30,32,33,34,36,39,41,42,45,46,49,53,62,66,75,76,77,78,79,80,82,83,84,85,86,87,88,89,92,94,95,96,97,98,99,100,101,102,104,109,110,111,114,115,117,119,122,123,],[35,-10,50,-26,-27,-28,-29,-11,61,63,-41,73,74,81,-23,92,-45,-54,-55,-56,-57,-58,-59,-20,-21,-30,-31,-32,-33,-13,103,-42,-43,-44,-46,-47,-48,-49,-50,-51,110,113,117,-15,-34,120,121,-14,-22,124,-35,]),'NOT':([24,25,40,64,65,],[43,43,43,43,43,]),'AND':([28,30,32,33,34,37,38,41,42,44,45,47,53,62,66,82,83,84,85,86,87,88,92,94,95,96,97,98,99,100,101,110,111,117,119,123,],[51,-26,-27,-28,-29,51,51,64,-41,51,64,-27,-23,64,-45,-20,51,-30,-31,-32,-33,-13,-42,-43,64,-46,-47,-48,-49,-50,-51,-15,51,-14,-22,51,]),'OR':([28,30,32,33,34,37,38,41,42,44,45,47,53,62,66,82,83,84,85,86,87,88,92,94,95,96,97,98,99,100,101,110,111,117,119,123,],[52,-26,-27,-28,-29,52,52,65,-41,52,65,-27,-23,65,-45,-20,-21,-30,-31,-32,-33,-13,-42,-43,-44,-46,-47,-48,-49,-50,-51,-15,52,-14,-22,52,]),'PERCENT':([28,30,32,33,34,37,38,44,47,53,82,83,84,85,86,87,88,96,97,98,99,100,101,110,111,117,119,123,],[53,-26,-27,-28,-29,53,53,53,-27,-23,-20,-21,-30,-31,-32,-33,-13,53,53,53,53,53,53,-15,53,-14,-22,53,]),'PLUS':([28,30,32,33,34,37,38,44,47,53,82,83,84,85,86,87,88,96,97,98,99,100,101,110,111,117,119,123,],[54,-26,-27,-28,-29,54,54,54,-27,-23,54,54,-30,-31,-32,-33,-13,54,54,54,54,54,54,-15,54,-14,-22,54,]),'MINUS':([28,30,32,33,34,37,38,44,47,53,82,83,84,85,86,87,88,96,97,98,99,100,101,110,111,117,119,123,],[55,-26,-27,-28,-29,55,55,55,-27,-23,55,55,-30,-31,-32,-33,-13,55,55,55,55,55,55,-15,55,-14,-22,55,]),'TIMES':([28,30,32,33,34,37,38,44,47,53,82,83,84,85,86,87,88,96,97,98,99,100,101,110,111,117,119,123,],[56,-26,-27,-28,-29,56,56,56,-27,-23,56,56,56,56,-32,-33,-13,56,56,56,56,56,56,-15,56,-14,-22,56,]),'DIVIDE':([28,30,32,33,34,37,38,44,47,53,82,83,84,85,86,87,88,96,97,98,99,100,101,110,111,117,119,123,],[57,-26,-27,-28,-29,57,57,57,-27,-23,57,57,57,57,-32,-33,-13,57,57,57,57,57,57,-15,57,-14,-22,57,]),'DOT':([29,35,61,81,103,],[58,60,91,-12,112,]),'GE':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,67,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'LE':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,68,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'EQ':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,69,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'NE':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,70,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'GT':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,71,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'LT':([30,32,33,34,44,47,53,82,83,84,85,86,87,88,110,117,119,],[-26,-27,-28,-29,72,-27,-23,-20,-21,-30,-31,-32,-33,-13,-15,-14,-22,]),'COMMA':([30,32,33,34,53,82,83,84,85,86,87,88,109,110,111,114,117,119,122,123,],[-26,-27,-28,-29,-23,-20,-21,-30,-31,-32,-33,-13,118,-15,-34,118,-14,-22,118,-35,]),'MILLISECOND':([47,],[76,]),'SECOND':([47,],[77,]),'MINUTE':([47,],[78,]),'HOUR':([47,],[79,]),'DAY':([47,],[80,]),'ELSE':([48,93,],[-36,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'scenario':([0,],[1,]),'statement_list':([0,3,16,],[2,17,26,]),'statement':([0,3,16,107,],[3,3,3,116,]),'action':([0,3,16,107,],[4,4,4,4,]),'all_action':([0,3,16,107,],[5,5,5,5,]),'assignment':([0,3,16,107,],[6,6,6,6,]),'if_statement':([0,3,16,107,],[7,7,7,7,]),'wait_statement':([0,3,16,107,],[8,8,8,8,]),'compound_statement':([0,3,16,63,107,],[9,9,9,93,9,]),'tag_list':([11,23,27,40,59,],[19,39,49,49,89,]),'expression':([18,21,22,24,25,40,43,51,52,54,55,56,57,64,65,67,68,69,70,71,72,102,104,115,118,],[28,37,38,44,44,44,44,82,83,84,85,86,87,44,44,96,97,98,99,100,101,111,111,111,123,]),'tag_expression':([18,21,22,24,25,40,43,51,52,54,55,56,57,64,65,67,68,69,70,71,72,102,104,115,118,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'condition_list':([24,25,40,64,65,],[41,45,62,94,95,]),'condition':([24,25,40,43,64,65,],[42,42,42,66,42,42,]),'period_time':([25,],[46,]),'time_unit':([47,],[75,]),'else_clause':([93,],[106,]),'empty':([93,],[108,]),'input':([102,104,115,],[109,114,122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> scenario","S'",1,None,None,None),
  ('scenario -> statement_list','scenario',1,'p_scenario','soplang_parser_full.py',97),
  ('statement_list -> statement','statement_list',1,'p_statement_list','soplang_parser_full.py',101),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','soplang_parser_full.py',102),
  ('statement -> action','statement',1,'p_statement','soplang_parser_full.py',106),
  ('statement -> all_action','statement',1,'p_statement','soplang_parser_full.py',107),
  ('statement -> assignment','statement',1,'p_statement','soplang_parser_full.py',108),
  ('statement -> if_statement','statement',1,'p_statement','soplang_parser_full.py',109),
  ('statement -> wait_statement','statement',1,'p_statement','soplang_parser_full.py',110),
  ('statement -> compound_statement','statement',1,'p_statement','soplang_parser_full.py',111),
  ('tag_list -> TAG','tag_list',1,'p_tag_list','soplang_parser_full.py',115),
  ('tag_list -> tag_list TAG','tag_list',2,'p_tag_list','soplang_parser_full.py',116),
  ('tag_expression -> LPAREN tag_list RPAREN','tag_expression',3,'p_tag_expression','soplang_parser_full.py',123),
  ('expression -> tag_expression DOT IDENTIFIER','expression',3,'p_attr_access','soplang_parser_full.py',127),
  ('expression -> tag_expression DOT IDENTIFIER LPAREN input RPAREN','expression',6,'p_method_call','soplang_parser_full.py',131),
  ('expression -> tag_expression DOT IDENTIFIER LPAREN RPAREN','expression',5,'p_method_call','soplang_parser_full.py',132),
  ('action -> LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN','action',7,'p_action','soplang_parser_full.py',141),
  ('action -> LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPAREN','action',8,'p_action','soplang_parser_full.py',142),
  ('all_action -> ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN RPAREN','all_action',8,'p_all_action','soplang_parser_full.py',151),
  ('all_action -> ALL LPAREN tag_list RPAREN DOT IDENTIFIER LPAREN input RPAREN','all_action',9,'p_all_action','soplang_parser_full.py',152),
  ('expression -> expression AND expression','expression',3,'p_expression_boolean','soplang_parser_full.py',160),
  ('expression -> expression OR expression','expression',3,'p_expression_boolean','soplang_parser_full.py',161),
  ('expression -> ALL LPAREN tag_list RPAREN DOT IDENTIFIER','expression',6,'p_expression_all_attr_access','soplang_parser_full.py',164),
  ('expression -> expression PERCENT','expression',2,'p_expression_percent','soplang_parser_full.py',172),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','soplang_parser_full.py',176),
  ('assignment -> IDENTIFIER DECLARE expression','assignment',3,'p_assignment','soplang_parser_full.py',177),
  ('expression -> IDENTIFIER','expression',1,'p_expression_literals','soplang_parser_full.py',182),
  ('expression -> INTEGER','expression',1,'p_expression_literals','soplang_parser_full.py',183),
  ('expression -> DOUBLE','expression',1,'p_expression_literals','soplang_parser_full.py',184),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_literals','soplang_parser_full.py',185),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','soplang_parser_full.py',189),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','soplang_parser_full.py',190),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary','soplang_parser_full.py',191),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','soplang_parser_full.py',192),
  ('input -> expression','input',1,'p_input','soplang_parser_full.py',198),
  ('input -> input COMMA expression','input',3,'p_input','soplang_parser_full.py',199),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','soplang_parser_full.py',203),
  ('if_statement -> IF LPAREN condition_list RPAREN compound_statement else_clause','if_statement',6,'p_if_statement','soplang_parser_full.py',207),
  ('else_clause -> ELSE statement','else_clause',2,'p_else_clause','soplang_parser_full.py',211),
  ('else_clause -> empty','else_clause',1,'p_else_clause','soplang_parser_full.py',212),
  ('statement -> DELAY LPAREN expression RPAREN','statement',4,'p_delay_statement','soplang_parser_full.py',216),
  ('condition_list -> condition','condition_list',1,'p_condition_list','soplang_parser_full.py',220),
  ('condition_list -> LPAREN condition_list RPAREN','condition_list',3,'p_condition_list','soplang_parser_full.py',221),
  ('condition_list -> condition_list AND condition_list','condition_list',3,'p_condition_list','soplang_parser_full.py',222),
  ('condition_list -> condition_list OR condition_list','condition_list',3,'p_condition_list','soplang_parser_full.py',223),
  ('condition_list -> NOT condition','condition_list',2,'p_condition_list','soplang_parser_full.py',224),
  ('condition -> expression GE expression','condition',3,'p_condition','soplang_parser_full.py',236),
  ('condition -> expression LE expression','condition',3,'p_condition','soplang_parser_full.py',237),
  ('condition -> expression EQ expression','condition',3,'p_condition','soplang_parser_full.py',238),
  ('condition -> expression NE expression','condition',3,'p_condition','soplang_parser_full.py',239),
  ('condition -> expression GT expression','condition',3,'p_condition','soplang_parser_full.py',240),
  ('condition -> expression LT expression','condition',3,'p_condition','soplang_parser_full.py',241),
  ('wait_statement -> WAIT_UNTIL LPAREN condition_list RPAREN','wait_statement',4,'p_wait_statement','soplang_parser_full.py',245),
  ('wait_statement -> WAIT_UNTIL LPAREN period_time RPAREN','wait_statement',4,'p_wait_statement','soplang_parser_full.py',246),
  ('period_time -> INTEGER time_unit','period_time',2,'p_period_time','soplang_parser_full.py',253),
  ('time_unit -> MILLISECOND','time_unit',1,'p_time_unit','soplang_parser_full.py',257),
  ('time_unit -> SECOND','time_unit',1,'p_time_unit','soplang_parser_full.py',258),
  ('time_unit -> MINUTE','time_unit',1,'p_time_unit','soplang_parser_full.py',259),
  ('time_unit -> HOUR','time_unit',1,'p_time_unit','soplang_parser_full.py',260),
  ('time_unit -> DAY','time_unit',1,'p_time_unit','soplang_parser_full.py',261),
  ('empty -> <empty>','empty',0,'p_empty','soplang_parser_full.py',265),
]

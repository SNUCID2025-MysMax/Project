- command: Every morning at 7 am, if the irrigation is off and the windows are closed, turn on the irrigation and open the windows. Then, when the irrigation turns on, close the blinds.
  devices:
  - Blind
  - Valve
  - Shade
  - WeatherProvider
  - Relay
  - Alarm
  - Clock
  - Curtain
  - DoorLock
  - GasValve
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if (((#Clock).clock_hour == 7) and ((#Clock).clock_minute == 0)) {
        if (((#WeatherProvider).switch_switch == 'off') and ((#Window).windowControl_window == 'closed')) {
          (#WeatherProvider).switch_on()
          (#Window).windowControl_open()
        }
      }
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).switch_switch == 'on')
      (#Blind).blind_close()
  model_info:
    elapsed_time: 7.154
    bge_elapsed_time: 0.155
    llm_elapsed_time: 6.999
- command: Check in real time and turn on the irrigation every 5 seconds if the soil moisture sensor reads 20 percent or less, and turn off the irrigation if it reads 60 percent or more.
  devices:
  - LightSensor
  - Irrigator
  - HumiditySensor
  - TemperatureSensor
  - Dehumidifier
  - SoilMoistureSensor
  - WeatherProvider
  - Clock
  - LeakSensor
  - Fan
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 5000
    code: |-
      if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0) {
        (#Irrigator).switch_on()
      } else if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity >= 60.0) {
        (#Irrigator).switch_off()
      }
  model_info:
    elapsed_time: 5.804
    bge_elapsed_time: 0.279
    llm_elapsed_time: 5.525
- command: Check in real-time to turn on a fan if the temperature is above 28 degrees, or a dehumidifier if the humidity is above 80%.
  devices:
  - Irrigator
  - HumiditySensor
  - TemperatureSensor
  - Dehumidifier
  - SoilMoistureSensor
  - WeatherProvider
  - Clock
  - Fan
  - Humidifier
  - AirQualityDetector
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 28.0) {
        (#Fan).switch_on()
      } else if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {
        (#Dehumidifier).switch_on()
      }
  model_info:
    elapsed_time: 5.064
    bge_elapsed_time: 0.139
    llm_elapsed_time: 4.925
- command: Check in real-time to close the blinds whenever the lights are on and open them when they're off.
  devices:
  - Blind
  - Valve
  - Light
  - Shade
  - Relay
  - Switch
  - Clock
  - Curtain
  - DoorLock
  - Siren
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#Light).switch_switch == 'on') {
        (#Blind).blind_close()
      } else {
        (#Blind).blind_open()
      }
  model_info:
    elapsed_time: 3.814
    bge_elapsed_time: 0.138
    llm_elapsed_time: 3.676
- command: On weekends, every 5 seconds, turn the pump on if it's off, off if it's on, and set the fan speed to 10.
  devices:
  - Irrigator
  - Dehumidifier
  - WeatherProvider
  - Clock
  - AirPurifier
  - GasValve
  - Fan
  - Humidifier
  - AirConditioner
  - Pump
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 7.203
    bge_elapsed_time: 0.167
    llm_elapsed_time: 7.036
- command: Check in real-time to turn on lights and increase fan speed by 10 whenever motion is detected.
  devices:
  - LightSensor
  - MotionSensor
  - TemperatureSensor
  - Light
  - SmokeDetector
  - Clock
  - AirPurifier
  - DoorLock
  - Fan
  - Humidifier
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#MotionSensor).motionSensor_motion == 'active') {
        (#Light).switch_on()
        (#Fan).fanControl_setPercent((#Fan).fanControl_percent + 10)
      }
  model_info:
    elapsed_time: 4.305
    bge_elapsed_time: 0.144
    llm_elapsed_time: 4.161
- command: Check in real-time to close the blinds if the window is open, or open the curtains if the window is closed. It also checks in real time and immediately sounds the alarm's siren if it's not already sounding.
  devices:
  - Blind
  - Valve
  - ContactSensor
  - Shade
  - SmokeDetector
  - Clock
  - Alarm
  - Siren
  - DoorLock
  - Curtain
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#Window).windowControl_window == 'open') {
        (#Blind).blind_close()
      } else {
        (#Curtain).curtain_open()
      }
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarm != 'siren') {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 5.531
    bge_elapsed_time: 0.152
    llm_elapsed_time: 5.378
- command: Every Friday at 6pm, if the lights are on, turn them down to 30, and if the TV is off, turn it on. If the fan is off, turn it on.
  devices:
  - LightSensor
  - Television
  - Light
  - Clock
  - AirPurifier
  - Curtain
  - Camera
  - Fan
  - Humidifier
  - AirConditioner
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 8.418
    bge_elapsed_time: 0.166
    llm_elapsed_time: 8.252
- command: Open, close, and repeat the blinds every 5 seconds from the time the window is closed.
  devices:
  - Blind
  - Valve
  - ContactSensor
  - Shade
  - Clock
  - Alarm
  - Curtain
  - DoorLock
  - Camera
  - GasValve
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 5000
    code: |-
      if ((#Window).windowControl_window == 'closed') {
        (#Blind).blind_open()
        wait until((#Blind).blind_blind == 'open')
        (#Blind).blind_close()
        wait until((#Blind).blind_blind == 'closed')
      }
  model_info:
    elapsed_time: 5.059
    bge_elapsed_time: 0.139
    llm_elapsed_time: 4.92
- command: Every morning at 8am, if the speaker is off, turn it on and say 'This is the weather today'. Then, if the lights are off, turn them on and open the blinds.
  devices:
  - Blind
  - Speaker
  - Light
  - Shade
  - WeatherProvider
  - Relay
  - Clock
  - Siren
  - Curtain
  - Window
  generated_code:
  - name: "Scenario1"
    cron: "0 8 * * *"
    period: 1000
    code: |-
      if ((#Clock).clock_hour == 8) {
        if ((#Speaker).switch_switch == 'off') {
          (#Speaker).switch_on()
          (#Speaker).mediaPlayback_speak("This is the weather today")
        }
        if ((#Light).switch_switch == 'off') {
          (#Light).switch_on()
          (#Blind).blind_open()
        }
      }
  model_info:
    elapsed_time: 6.538
    bge_elapsed_time: 0.171
    llm_elapsed_time: 6.366

- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Button
  - Recorder
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 5.341
    bge_elapsed_time: 1.323
    llm_elapsed_time: 4.017
- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Button
  - Recorder
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.571
    bge_elapsed_time: 0.158
    llm_elapsed_time: 2.413
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 2.653
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.514
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 2.651
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.512
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_both()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 3.484
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.343
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_both()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 3.485
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.345
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - WeatherProvider
  generated_code: []
  model_info:
    elapsed_time: 50.005
    bge_elapsed_time: 0.141
    llm_elapsed_time: 49.863
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - WeatherProvider
  generated_code: []
  model_info:
    elapsed_time: 50.44
    bge_elapsed_time: 0.142
    llm_elapsed_time: 50.298
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#PresenceSensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.99
    bge_elapsed_time: 0.146
    llm_elapsed_time: 2.845
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#PresenceSensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.983
    bge_elapsed_time: 0.148
    llm_elapsed_time: 2.835
- command: 에어컨의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is powered on.
  devices:
  - Siren
  - Button
  - Window
  - Switch
  - Alarm
  - Fan
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.329
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.184
- command: 에어컨의 모드가 냉방 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is in cooling mode.
  devices:
  - Siren
  - SoundSensor
  - Window
  - Pump
  - Humidifier
  - Alarm
  - TemperatureSensor
  - Clock
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_airConditionerMode == "cool") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.656
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.511
- command: 에어컨의 목표 온도가 30도면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner's target temperature is 30 degrees.
  devices:
  - Siren
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - AirQualityDetector
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.674
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.53
- command: 에어컨이 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes supported by the air conditioner
  devices:
  - RobotCleaner
  - Humidifier
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  - WeatherProvider
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      wait until(#AirConditioner).airConditionerMode_supportedAcModes != ""
      (#Speaker).mediaPlayback_speak(#AirConditioner).airConditionerMode_supportedAcModes
  - name: "Scenario2"
    cron: ""
    period: 100
    code: |-
      wait until(#AirConditioner).airConditionerMode_supportedAcModes != ""
      (#Speaker).mediaPlayback_speak(#AirConditioner).airConditionerMode_supportedAcModes
  - name: "Scenario3"
    cron: ""
    period: 100
    code: |-
      wait until(#AirConditioner).airConditionerMode_supportedAcModes != ""
      (#Speaker).mediaPlayback_speak(#AirConditioner).airConditionerMode_supportedAcModes
  model_info:
    elapsed_time: 9.27
    bge_elapsed_time: 0.143
    llm_elapsed_time: 9.128
- command: 에어컨을 꺼줘.
  command_translated: Turn off the air conditioner.
  devices:
  - Curtain
  - DoorLock
  - Blind
  - Humidifier
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - WeatherProvider
  - AirConditioner
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 49.924
    bge_elapsed_time: 0.137
    llm_elapsed_time: 49.787
- command: 에어컨을 켜줘.
  command_translated: Turn on the air conditioner.
  devices:
  - Button
  - Humidifier
  - Camera
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - DoorLock
  - AirQualityDetector
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_off()
  model_info:
    elapsed_time: 4.905
    bge_elapsed_time: 0.138
    llm_elapsed_time: 4.767
- command: 에어컨의 전원을 토글해줘.
  command_translated: Toggle the power of the air conditioner.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      (#AirConditioner).switch_toggle()
  - name: "Scenario2"
    cron: ""
    period: 100
    code: |-
      (#AirConditioner).switch_toggle()
  model_info:
    elapsed_time: 4.146
    bge_elapsed_time: 0.14
    llm_elapsed_time: 4.006
- command: 에어컨을 자동 모드로 설정해줘.
  command_translated: Set the air conditioner to auto mode.
  devices:
  - RobotCleaner
  - Window
  - Shade
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setAirConditionerMode('auto')
  model_info:
    elapsed_time: 3.271
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.131
- command: 에어컨의 목표 온도를 18도로 설정해줘.
  command_translated: Set the target temperature for the air conditioner to 18 degrees.
  devices:
  - Dehumidifier
  - Blind
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - AirQualityDetector
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setTemperature(18.0)
  model_info:
    elapsed_time: 3.253
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.113
- command: 공기청정기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is powered on.
  devices:
  - Siren
  - RobotCleaner
  - Switch
  - Alarm
  - AirPurifier
  - Clock
  - Relay
  - AirQualityDetector
  - Pump
  - AirConditioner
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.54
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.395
- command: 공기청정기가 수면 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is in sleep mode.
  devices:
  - Siren
  - RobotCleaner
  - SoundSensor
  - Window
  - Humidifier
  - Alarm
  - AirPurifier
  - Clock
  - AirQualityDetector
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).airPurifierFanMode_airPurifierFanMode == "sleep") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.98
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.836
- command: 공기청정기가 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes the air purifier supports
  devices:
  - RobotCleaner
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Speaker
  - AirQualityDetector
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The air purifier supports " + (#AirPurifier).airPurifierFanMode_supportedAirPurifierFanModes)
  model_info:
    elapsed_time: 4.195
    bge_elapsed_time: 0.142
    llm_elapsed_time: 4.054
- command: 공기청정기를 꺼줘.
  command_translated: Turn off the air purifier.
  devices:
  - RobotCleaner
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - AirQualityDetector
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_off()
  model_info:
    elapsed_time: 2.897
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.76
- command: 공기청정기를 켜줘.
  command_translated: Turn on the air purifier.
  devices:
  - RobotCleaner
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - AirQualityDetector
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_off()
  model_info:
    elapsed_time: 5.177
    bge_elapsed_time: 0.137
    llm_elapsed_time: 5.04
- command: 공기청정기의 전원을 토글해줘.
  command_translated: Toggle the air purifier's power.
  devices:
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - AirQualityDetector
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_toggle()
  model_info:
    elapsed_time: 2.951
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.812
- command: 공기청정기의 모드를 자동으로 설정해줘.
  command_translated: Set the air purifier's mode to automatic.
  devices:
  - RobotCleaner
  - Shade
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - AirQualityDetector
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')
  model_info:
    elapsed_time: 3.505
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.365
- command: 공기질 측정기의 측정 온도가 20도이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren If the temperature measured by the air quality meter is 20 degrees.
  devices:
  - Siren
  - AirConditioner
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - LightSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).temperatureMeasurement_temperature == 20.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.466
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.321
- command: 이산화탄소 농도가 800ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the carbon dioxide concentration is above 800 ppm.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Alarm
  - Charger
  - FallDetector
  - Clock
  - Relay
  - AirQualityDetector
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 800.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.655
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.509
- command: 공기질 측정기의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relative humidity on the air quality meter is above 70 percent.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Humidifier
  - HumiditySensor
  - Alarm
  - Clock
  - AirQualityDetector
  - SoilMoistureSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).relativeHumidityMeasurement_humidity > 70.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.514
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.368
- command: 실내 황사 농도가 150마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor yellow dust concentration is 150 micrograms or more.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - LightSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).dustSensor_fineDustLevel >= 150)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.612
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.467
- command: 실내 미세먼지 농도가 35마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if indoor particulate matter concentration is 35 micrograms or higher.
  devices:
  - Siren
  - AirConditioner
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - LightSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_dustLevel >= 35) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.606
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.46
- command: 실내 초미세먼지 농도가 15마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor fine particulate matter concentration is 15 micrograms or more.
  devices:
  - Siren
  - AirConditioner
  - LeakSensor
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).dustSensor_fineDustLevel >= 15)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.618
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.473
- command: 총 휘발성 유기 화합물 농도가 0.5ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the total volatile organic compound concentration is greater than 0.5 ppm.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Alarm
  - HumiditySensor
  - TemperatureSensor
  - Clock
  - Relay
  - Irrigator
  - AirQualityDetector
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#AirQualityDetector).tvocMeasurement_tvocLevel > 0.5)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.487
    bge_elapsed_time: 0.149
    llm_elapsed_time: 3.338
- command: 알람이 경광등 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm is in strobe mode.
  devices:
  - Siren
  - SmokeDetector
  - SoundSensor
  - Curtain
  - Window
  - Shade
  - Blind
  - Alarm
  - Light
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarm == "strobe") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.384
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.24
- command: 알람의 볼륨이 높음이면 알람의 사이렌을 울려줘.
  command_translated: If the volume of the alarm is high, sound the alarm's siren.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Blind
  - Alarm
  - Valve
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarmVolume == "high") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.243
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.096
- command: 알람 배터리 상태가 20퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm battery is below 20 percent.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Window
  - Switch
  - Alarm
  - HumiditySensor
  - Clock
  - Relay
  - Charger
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Alarm).battery_battery < 20.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.087
    bge_elapsed_time: 0.146
    llm_elapsed_time: 2.941
- command: 알람의 사이렌과 경광등을 모두 켜줘.
  command_translated: Turn on both the alarm's siren and strobe.
  devices:
  - Siren
  - Curtain
  - Window
  - Blind
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Clock
  - Relay
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_both()
  model_info:
    elapsed_time: 2.693
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.552
- command: 알람을 꺼줘.
  command_translated: Turn off the alarm.
  devices:
  - Siren
  - Curtain
  - Switch
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - DoorLock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 2.644
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.507
- command: 알람의 볼륨을 낮음으로 설정해줘.
  command_translated: Set the volume of the alarm to low.
  devices:
  - Siren
  - SoundSensor
  - Recorder
  - Blind
  - Alarm
  - Light
  - Buttonx4
  - AirPurifier
  - Fan
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_setAlarmVolume('low')
  model_info:
    elapsed_time: 2.945
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.804
- command: 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren.
  devices:
  - Siren
  - LeakSensor
  - Curtain
  - Button
  - Window
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.673
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.533
- command: 알람의 경광등을 켜줘.
  command_translated: Turn on the alarm's light.
  devices:
  - Siren
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - DoorLock
  - LightSensor
  - WeatherProvider
  generated_code: []
  model_info:
    elapsed_time: 50.152
    bge_elapsed_time: 0.14
    llm_elapsed_time: 50.012
- command: 블라인드가 50 퍼센트 이상 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are more than 50 percent open.
  devices:
  - Siren
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blind_blind == "open") {
        if ((#Blind).blindLevel_blindLevel > 50) {
          (#Alarm).alarm_siren()
        }
      }
  model_info:
    elapsed_time: 4.198
    bge_elapsed_time: 0.147
    llm_elapsed_time: 4.052
- command: 블라인드가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are open.
  devices:
  - Siren
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blind_blind == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.292
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.148
- command: 블라인드를 70 퍼센트로 설정해줘.
  command_translated: Set the blinds to 70 percent.
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - HumiditySensor
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blindLevel_setBlindLevel(70)
  model_info:
    elapsed_time: 3.077
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.936
- command: 블라인드를 닫아줘.
  command_translated: Close the blinds.
  devices:
  - Curtain
  - Button
  - Window
  - Shade
  - Blind
  - Valve
  - Alarm
  - Clock
  - Relay
  - DoorLock
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_close()
  model_info:
    elapsed_time: 2.624
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.486
- command: 블라인드를 열어줘.
  command_translated: Open the blinds.
  devices:
  - Curtain
  - Button
  - Window
  - Shade
  - Blind
  - Valve
  - Alarm
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code: []
  model_info:
    elapsed_time: 50.24
    bge_elapsed_time: 0.138
    llm_elapsed_time: 50.102
- command: 블라인드 움직임을 멈춰줘.
  command_translated: Stop blind movement.
  devices:
  - Siren
  - Curtain
  - MotionSensor
  - Button
  - Shade
  - Blind
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_pause()
  model_info:
    elapsed_time: 2.773
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.632
- command: 버튼이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the button is pressed.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Button
  - Timer
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Button).button_button == "pushed")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.271
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.129
- command: 버튼의 개수가 4개 이상이면 알람의 사이렌을 울려줘.
  command_translated: If there are more than four buttons, sound the alarm's siren.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Alarm
  - Buttonx4
  - Clock
  - Relay
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons > 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.542
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.397
- command: 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the button's supported states via the speaker.
  devices:
  - Siren
  - SoundSensor
  - Button
  - Switch
  - Recorder
  - Alarm
  - Buttonx4
  - Fan
  - Clock
  - Speaker
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Button).button_button != 'unknown')
      (#Speaker).mediaPlayback_speak("The button's supported states are: " + (#Button).button_supportedButtonValues)
  model_info:
    elapsed_time: 4.17
    bge_elapsed_time: 0.141
    llm_elapsed_time: 4.03
- command: 버튼1이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 1 is pressed.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Timer
  - Alarm
  - Buttonx4
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Button).button_button == "pushed")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.234
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.091
- command: 버튼2가 눌린 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 2 is pressed.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Alarm
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code: []
  model_info:
    elapsed_time: 49.636
    bge_elapsed_time: 0.145
    llm_elapsed_time: 49.492
- command: 버튼3이 두 번 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: if button 3 is pressed twice, sound the alarm's siren.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Alarm
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Buttonx4).buttonx4_button3 == "pushed_2x")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.588
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.443
- command: 버튼4가 위로 스와이프되었으면 알람의 사이렌을 울려줘.
  command_translated: if button 4 is swiped up, sound the alarm's siren.
  devices:
  - Siren
  - SoundSensor
  - Button
  - Switch
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_button4 == "swipe_up") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.672
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.526
- command: 버튼 개수가 4개면 알람의 사이렌을 울려줘.
  command_translated: If the number of buttons is 4, sound the alarm's siren.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Curtain
  - Button
  - Window
  - Alarm
  - Buttonx4
  - Light
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons == 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.705
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.562
- command: 4개짜리 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the button x4 via the speaker.
  devices:
  - SoundSensor
  - Button
  - Recorder
  - Switch
  - Alarm
  - Buttonx4
  - Fan
  - Clock
  - Speaker
  - DoorLock
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Buttonx4).buttonx4_button1 == "pushed")
      (#Speaker).mediaPlayback_speak("The states supported by the button x4 are: " + (#Buttonx4).buttonx4_supportedButtonValues)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until((#Buttonx4).buttonx4_button2 == "pushed")
      (#Speaker).mediaPlayback_speak("The states supported by the button x4 are: " + (#Buttonx4).buttonx4_supportedButtonValues)
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      wait until((#Buttonx4).buttonx4_button3 == "pushed")
      (#Speaker).mediaPlayback_speak("The states supported by the button x4 are: " + (#Buttonx4).buttonx4_supportedButtonValues)
  - name: "Scenario4"
    cron: ""
    period: -1
    code: |-
      wait until((#Buttonx4).buttonx4_button4 == "pushed")
      (#Speaker).mediaPlayback_speak("The states supported by the button x4 are: " + (#Buttonx4).buttonx4_supportedButtonValues)
  model_info:
    elapsed_time: 13.936
    bge_elapsed_time: 0.144
    llm_elapsed_time: 13.792
- command: 5와 3을 더해줘.
  command_translated: Add 5 and 3.
  devices:
  - Calculator
  - Curtain
  - Button
  - Camera
  - Buttonx4
  - Fan
  - EmailProvider
  - Clock
  - DoorLock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 5 + 3
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      result := 5 - 3
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      result := 5 * 3
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario4"
    cron: ""
    period: -1
    code: |-
      result := 5 / 3
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario5"
    cron: ""
    period: -1
    code: |-
      result := 5 % 3
      (#Camera).camera_takeTimelapse("The result is " + result)
  model_info:
    elapsed_time: 10.341
    bge_elapsed_time: 0.137
    llm_elapsed_time: 10.204
- command: 10을 2로 나눠줘.
  command_translated: Divide 10 by 2.
  devices:
  - Calculator
  - Button
  - Camera
  - Buttonx4
  - Clock
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 10 / 2
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      result := 10 / 2
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      result := 10 / 2
      (#Camera).camera_takeTimelapse("The result is " + result)
  model_info:
    elapsed_time: 6.538
    bge_elapsed_time: 0.137
    llm_elapsed_time: 6.401
- command: 10을 3으로 나눈 나머지를 구해.
  command_translated: Find the remainder of 10 divided by 3.
  devices:
  - Calculator
  - RobotCleaner
  - Curtain
  - Button
  - Window
  - Blind
  - Camera
  - Buttonx4
  - Clock
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_div(10, 3)
      (#Camera).camera_takeTimelapse("The remainder of 10 divided by 3 is " + result)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_mod(10, 3)
      (#Camera).camera_takeTimelapse("The remainder of 10 divided by 3 is " + result)
  model_info:
    elapsed_time: 6.379
    bge_elapsed_time: 0.14
    llm_elapsed_time: 6.24
- command: 7과 8을 곱해줘.
  command_translated: Multiply 7 and 8.
  devices:
  - Calculator
  - Button
  - Camera
  - Buttonx4
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 7 * 8
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      result := 7 * 8
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      result := 7 * 8
      (#Camera).camera_takeTimelapse("The result is " + result)
  model_info:
    elapsed_time: 6.403
    bge_elapsed_time: 0.139
    llm_elapsed_time: 6.265
- command: 15에서 4를 빼줘.
  command_translated: Subtract 4 from 15.
  devices:
  - Calculator
  - Curtain
  - Button
  - Blind
  - Camera
  - Buttonx4
  - Fan
  - Clock
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 15 - 4
      (#Camera).camera_takeTimelapse("The result is " + result)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse("Subtract 4 from 15.")
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse("The result is 11.")
  model_info:
    elapsed_time: 6.227
    bge_elapsed_time: 0.137
    llm_elapsed_time: 6.09
- command: 카메라의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the camera is powered on.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Switch
  - Recorder
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Camera).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.287
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.144
- command: 가장 최근에 찍은 사진을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.
  command_translated: Send an email with the most recent photo as an attachment to 'test@example.com' with the subject line "Photo" and the content "This is a photo".
  devices:
  - Calculator
  - DoorLock
  - Button
  - Recorder
  - ContactSensor
  - Camera
  - EmailProvider
  - Clock
  - MenuProvider
  - Charger
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_take()
      (#EmailProvider).emailProvider_sendMailWithFile("test@example.clock_isHoliday", "Photo", "This is a photo.", (#Camera).camera_image)
  model_info:
    elapsed_time: 3.884
    bge_elapsed_time: 0.155
    llm_elapsed_time: 3.73
- command: 가장 최근에 찍은 동영상을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '동영상'과 내용 '동영상입니다.'로 보내줘
  command_translated: Send an email with the most recent video as an attachment to 'test@example.com' with the subject line "Video" and the content "This is a video.
  devices:
  - SmokeDetector
  - Feeder
  - Button
  - Recorder
  - Camera
  - EmailProvider
  - MenuProvider
  - Clock
  - DoorLock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#EmailProvider).emailProvider_sendMailWithFile(toAddress: "test@example.clock_isHoliday", title: "Video", text: "This is a video.", file: (#Camera).camera_video)
  model_info:
    elapsed_time: 4.072
    bge_elapsed_time: 0.156
    llm_elapsed_time: 3.916
- command: 카메라를 꺼줘.
  command_translated: Turn off the camera.
  devices:
  - Siren
  - Curtain
  - Speaker
  - Recorder
  - Blind
  - Camera
  - Light
  - Clock
  - Relay
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_off()
  model_info:
    elapsed_time: 2.765
    bge_elapsed_time: 0.136
    llm_elapsed_time: 2.629
- command: 카메라를 켜줘.
  command_translated: Turn on the camera.
  devices:
  - Siren
  - Button
  - Recorder
  - Camera
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - LightSensor
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_off()
  model_info:
    elapsed_time: 4.752
    bge_elapsed_time: 0.136
    llm_elapsed_time: 4.616
- command: 카메라의 전원을 토글해줘.
  command_translated: Toggle the camera's power.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Camera
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_toggle()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_toggle()
  model_info:
    elapsed_time: 3.781
    bge_elapsed_time: 0.138
    llm_elapsed_time: 3.642
- command: 카메라로 사진을 찍어줘.
  command_translated: Take a photo with the camera.
  devices:
  - Calculator
  - Button
  - Dehumidifier
  - Recorder
  - Camera
  - Buttonx4
  - Light
  - Fan
  - Clock
  - LightSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_take()
  model_info:
    elapsed_time: 2.798
    bge_elapsed_time: 0.136
    llm_elapsed_time: 2.662
- command: 카메라로 10초 동안 속도 2로 타임랩스 영상을 촬영해줘.
  command_translated: Take a time-lapse video with the camera at speed 2 for 10 seconds.
  devices:
  - Button
  - Recorder
  - Camera
  - Fan
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse(duration=10, speed=2)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse(duration=10, speed=2)
  model_info:
    elapsed_time: 4.126
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.982
- command: 충전기의 전압이 230볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger's voltage is above 230 volts.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Switch
  - SmartPlug
  - Alarm
  - Clock
  - Relay
  - Irrigator
  - Charger
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Charger).voltageMeasurement_voltage > 230.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.444
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.299
- command: 충전기의 상태가 충전 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the charger's status is charging.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - Recorder
  - Switch
  - Alarm
  - Valve
  - Clock
  - Relay
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Charger).chargingState_chargingState == "charging")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.234
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.091
- command: 충전기의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger is drawing more than 10 amps.
  devices:
  - Siren
  - SoundSensor
  - Switch
  - SmartPlug
  - Alarm
  - Fan
  - Clock
  - Relay
  - Irrigator
  - Charger
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Charger).currentMeasurement_current > 10.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.369
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.223
- command: 충전기가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Annonce the status supported by the charger via the speaker.
  devices:
  - SoundSensor
  - Switch
  - Recorder
  - SmartPlug
  - Alarm
  - Fan
  - Clock
  - Speaker
  - Irrigator
  - Charger
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The charger supports charging, discharging, stopped, fully charged, and error states.")
  model_info:
    elapsed_time: 3.475
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.335
- command: 오늘 날짜가 2025년 5월 12일이면 알람의 사이렌을 울려줘.
  command_translated: If today's date is May 12, 2025, sound the alarm's siren.
  devices:
  - Siren
  - SmokeDetector
  - Curtain
  - Relay
  - Window
  - Alarm
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: "2025-05-12 00:00:00"
    period: -1
    code: |-
      wait until((#Clock).clock_date == 20250512)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 4.281
    bge_elapsed_time: 0.145
    llm_elapsed_time: 4.136
- command: 현재 시간이 2025년 5월 12일 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3:15 PM on May 12, 2025, sound the alarm's siren.
  devices:
  - Siren
  - Curtain
  - Relay
  - Window
  - Timer
  - Alarm
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: "2025-05-12 15:15:00"
    period: -1
    code: |-
      wait until((#Clock).clock_datetime == 20250512151500)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 4.585
    bge_elapsed_time: 0.147
    llm_elapsed_time: 4.439
- command: 오늘이 20일이면 알람의 사이렌을 울려줘
  command_translated: If today is the 20th, sound the alarm siren
  devices:
  - Siren
  - Window
  - Alarm
  - Camera
  - WeatherProvider
  - Clock
  - DoorLock
  - LightSensor
  - Relay
  - TemperatureSensor
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 3.89
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.749
- command: 현재 시간이 오후 3시이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3pm, sound the alarm's siren.
  devices:
  - Siren
  - Curtain
  - Window
  - Recorder
  - Alarm
  - WeatherProvider
  - Clock
  - DoorLock
  - Relay
  - TemperatureSensor
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 4.786
    bge_elapsed_time: 0.143
    llm_elapsed_time: 4.643
- command: 오늘이 공휴일이면 알람의 사이렌을 울려줘.
  command_translated: If today is a holiday, sound the alarm's siren.
  devices:
  - Siren
  - Curtain
  - Window
  - Recorder
  - Alarm
  - Camera
  - Clock
  - Relay
  - DoorLock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_isHoliday) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.103
    bge_elapsed_time: 0.142
    llm_elapsed_time: 2.96
- command: 지금이 30분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 30 minutes from now, sound the alarm's siren.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Recorder
  - Alarm
  - Camera
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 4.318
    bge_elapsed_time: 0.141
    llm_elapsed_time: 4.178
- command: 지금이 5월이면 알람의 사이렌을 울려줘.
  command_translated: If it's May, sound the alarm siren.
  devices:
  - Siren
  - Curtain
  - Window
  - Recorder
  - Alarm
  - Camera
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 3.596
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.455
- command: 지금이 40초이면 알람의 사이렌을 울려줘.
  command_translated: If it's 40 seconds now, sound the alarm's siren.
  devices:
  - Siren
  - SmokeDetector
  - SoundSensor
  - Recorder
  - Alarm
  - Camera
  - Buttonx4
  - Clock
  - DoorLock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      wait until((#Clock).clock_second == 40)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.292
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.151
- command: 지금이 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 3:15pm, blare the siren on the alarm.
  devices:
  - Siren
  - Window
  - Recorder
  - Alarm
  - Camera
  - WeatherProvider
  - Clock
  - DoorLock
  - Relay
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: "0 15 * * *"
    period: 0
    code: |-
      if (((#Clock).clock_hour == 15) and ((#Clock).clock_minute == 15)) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 4.095
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.952
- command: 현재 Unix timestamp가 1747031637.23이면 알람의 사이렌을 울려줘.
  command_translated: If the current Unix timestamp is 1747031637.23, sound the alarm siren.
  devices:
  - Siren
  - SoundSensor
  - Window
  - Recorder
  - Timer
  - Alarm
  - Clock
  - DoorLock
  - LightSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_timestamp == 1747031637.23) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.604
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.457
- command: 오늘이 금요일이면 알람의 사이렌을 울려줘.
  command_translated: If today is Friday, sound the alarm siren.
  devices:
  - Siren
  - SoundSensor
  - Relay
  - Window
  - Recorder
  - Alarm
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_weekday == "friday") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.23
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.088
- command: 올해가 2025년이면 알람의 사이렌을 울려줘.
  command_translated: If the year is 2025, sound the alarm siren.
  devices:
  - Siren
  - Window
  - Switch
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - DoorLock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_year == 2025) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.416
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.276
- command: 1시간 20분 30초 뒤에 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren in 1 hour, 20 minutes, 30 seconds
  devices:
  - Siren
  - Curtain
  - Window
  - Timer
  - Alarm
  - Camera
  - WeatherProvider
  - Clock
  - DoorLock
  - Relay
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 4.54
    bge_elapsed_time: 0.144
    llm_elapsed_time: 4.396
- command: 접촉 센서가 접촉되어 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the contact sensor is in contact.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#ContactSensor).contactSensor_contact == "open")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.018
    bge_elapsed_time: 0.146
    llm_elapsed_time: 2.872
- command: 커튼이 열림 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the curtain is open.
  devices:
  - Siren
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.43
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.286
- command: 커튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the curtain via the speaker.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Window
  - Blind
  - ContactSensor
  - Alarm
  - Fan
  - Clock
  - Speaker
  - DoorLock
  generated_code: []
  model_info:
    elapsed_time: 50.239
    bge_elapsed_time: 0.141
    llm_elapsed_time: 50.098
- command: 커튼을 닫아줘.
  command_translated: Close the curtain.
  devices:
  - Curtain
  - Window
  - Blind
  - ContactSensor
  - Humidifier
  - Camera
  - AirPurifier
  - Clock
  - DoorLock
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_close()
  model_info:
    elapsed_time: 2.741
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.603
- command: 커튼을 열어줘.
  command_translated: Open the curtain.
  devices:
  - Curtain
  - Button
  - Window
  - Blind
  - ContactSensor
  - Camera
  - Fan
  - AirPurifier
  - Clock
  - DoorLock
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_open()
  model_info:
    elapsed_time: 2.752
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.615
- command: 커튼의 움직임을 멈춰줘.
  command_translated: Stop the curtain from moving.
  devices:
  - Curtain
  - Button
  - Blind
  - ContactSensor
  - Alarm
  - AirPurifier
  - Fan
  - Clock
  - DoorLock
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_pause()
  model_info:
    elapsed_time: 2.865
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.724
- command: 제습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is powered on.
  devices:
  - Siren
  - Switch
  - Humidifier
  - Alarm
  - Dishwasher
  - Clock
  - Relay
  - Charger
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.503
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.358
- command: 제습기의 모드가 제습 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is in dehumidifying mode.
  devices:
  - Siren
  - RobotCleaner
  - Recorder
  - Humidifier
  - Alarm
  - HumiditySensor
  - Dishwasher
  - Clock
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).dehumidifierMode_dehumidifierMode == "dehumidifying") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 4.082
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.938
- command: 제습기를 꺼줘.
  command_translated: Turn off the dehumidifier.
  devices:
  - Blind
  - Humidifier
  - HumiditySensor
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - AirQualityDetector
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_off()
  model_info:
    elapsed_time: 2.865
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.728
- command: 제습기를 켜줘.
  command_translated: Turn on the dehumidifier.
  devices:
  - Humidifier
  - HumiditySensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - AirQualityDetector
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_off()
  model_info:
    elapsed_time: 5.158
    bge_elapsed_time: 0.137
    llm_elapsed_time: 5.021
- command: 제습기의 전원을 토글해줘.
  command_translated: Toggle the dehumidifier's power.
  devices:
  - Humidifier
  - SmartPlug
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Charger
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_toggle()
  model_info:
    elapsed_time: 2.911
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.772
- command: 제습기를 냉각 모드로 설정해줘.
  command_translated: Set the dehumidifier to cooling mode.
  devices:
  - Pump
  - Humidifier
  - TemperatureSensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).dehumidifierMode_setDehumidifierMode('cooling')
  model_info:
    elapsed_time: 3.477
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.337
- command: 식기세척기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the dishwasher is powered on.
  devices:
  - Siren
  - Switch
  - Alarm
  - SmartPlug
  - Dishwasher
  - Clock
  - Relay
  - DoorLock
  - Charger
  - Refrigerator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.371
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.225
- command: 식기세척기의 모드가 에코 모드면 알람의 사이렌을 울려줘.
  command_translated: If the dishwasher is in Eco mode, the alarm will sound a siren.
  devices:
  - Siren
  - RobotCleaner
  - SoundSensor
  - Humidifier
  - Alarm
  - Dishwasher
  - AirPurifier
  - Clock
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).dishwasherMode_dishwasherMode == "eco") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.754
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.607
- command: 식기세척기를 꺼줘.
  command_translated: Turn off the dishwasher.
  devices:
  - RobotCleaner
  - Feeder
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_off()
  model_info:
    elapsed_time: 2.863
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.724
- command: 식기세척기를 켜줘.
  command_translated: Turn on the dishwasher.
  devices:
  - Feeder
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_on()
  model_info:
    elapsed_time: 2.8
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.661
- command: 식기세척기의 전원을 토글해줘.
  command_translated: Toggle the dishwasher's power.
  devices:
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Charger
  - Refrigerator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_toggle()
  model_info:
    elapsed_time: 2.91
    bge_elapsed_time: 0.142
    llm_elapsed_time: 2.768
- command: 식기세척기를 자동 모드로 설정해줘.
  command_translated: Set the dishwasher to automatic mode.
  devices:
  - Feeder
  - RobotCleaner
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Clock
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario4"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario5"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario6"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario7"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario8"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario9"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_setDishwasherMode('auto')
  - name: "Scenario10"
    cron: ""
    period: -1
    code: |-
      (# Dishwasher).dishwasherMode_dishwasherMode
  model_info:
    elapsed_time: 15.262
    bge_elapsed_time: 0.141
    llm_elapsed_time: 15.121
- command: 도어락이 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the door lock is open.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Window
  - Blind
  - ContactSensor
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#DoorLock).doorControl_door == "open")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.149
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.006
- command: 도어락을 닫아줘.
  command_translated: Close the door lock.
  devices:
  - Curtain
  - Button
  - Window
  - Blind
  - ContactSensor
  - Valve
  - Camera
  - Clock
  - DoorLock
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_close()
  model_info:
    elapsed_time: 2.664
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.526
- command: 도어락을 열어줘.
  command_translated: Open the door lock.
  devices:
  - Curtain
  - Button
  - Window
  - Blind
  - ContactSensor
  - Camera
  - Fan
  - Clock
  - DoorLock
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_open()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse("Door lock opened.")
  model_info:
    elapsed_time: 3.947
    bge_elapsed_time: 0.138
    llm_elapsed_time: 3.809
- command: 이메일을 'test@example.com' 주소로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.
  command_translated: Send an email to 'test@example.com' with the subject line "Alert" and the content "This is an emergency".
  devices:
  - SmokeDetector
  - SoundSensor
  - DoorLock
  - Window
  - Recorder
  - Alarm
  - FallDetector
  - EmailProvider
  - Clock
  - Irrigator
  - TemperatureSensor
  generated_code:
  - name: "SendEmailScenario"
    cron: ""
    period: -1
    code: |-
      (#EmailProvider).emailProvider_sendMail("test@example.clock_isHoliday", "Alert", "This is an emergency.")
  model_info:
    elapsed_time: 3.234
    bge_elapsed_time: 0.15
    llm_elapsed_time: 3.084
- command: 선풍기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan is powered on.
  devices:
  - Siren
  - Switch
  - Humidifier
  - Alarm
  - Fan
  - AirPurifier
  - Clock
  - Relay
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.411
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.267
- command: 선풍기의 속도가 2000RPM 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan speed is above 2000 RPM.
  devices:
  - Siren
  - SoundSensor
  - Window
  - Humidifier
  - Alarm
  - Fan
  - AirPurifier
  - Clock
  - Relay
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).fanControl_fanSpeed > 2000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.516
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.372
- command: 선풍기의 속도를 1500RPM으로 설정해줘.
  command_translated: Set the speed of the fan to 1500 RPM.
  devices:
  - Humidifier
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setFanSpeed(1500
  model_info:
    elapsed_time: 2.82
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.679
- command: 선풍기의 속도를 80퍼센트로 설정해줘.
  command_translated: Set the speed of the fan to 80 percent.
  devices:
  - Blind
  - Humidifier
  - HumiditySensor
  - TemperatureSensor
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setPercent(80)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setFanSpeed(80)
  model_info:
    elapsed_time: 4.119
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.978
- command: 선풍기를 꺼줘.
  command_translated: Turn off the fan.
  devices:
  - Curtain
  - Blind
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_off()
  model_info:
    elapsed_time: 2.767
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.631
- command: 선풍기를 켜줘.
  command_translated: Turn on the fan.
  devices:
  - Curtain
  - Humidifier
  - TemperatureSensor
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_toggle()
  model_info:
    elapsed_time: 3.662
    bge_elapsed_time: 0.136
    llm_elapsed_time: 3.526
- command: 선풍기의 전원을 토글해줘.
  command_translated: Toggle the fan's power.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_toggle()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_toggle()
  model_info:
    elapsed_time: 3.781
    bge_elapsed_time: 0.139
    llm_elapsed_time: 3.642
- command: 사료 공급기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the feeder is powered on.
  devices:
  - Siren
  - Feeder
  - Switch
  - Alarm
  - SmartPlug
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Refrigerator
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.362
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.217
- command: 사료 공급기의 상태가 급식 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the feeder's status is feeding.
  devices:
  - Siren
  - LeakSensor
  - Feeder
  - Recorder
  - Alarm
  - Dishwasher
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).feederOperatingState_feederOperatingState == "feeding") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.608
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.464
- command: 사료 공급기를 꺼줘.
  command_translated: Turn off the feeder.
  devices:
  - Feeder
  - Humidifier
  - Dishwasher
  - GasValve
  - Relay
  - Clock
  - Irrigator
  - Charger
  - Pump
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  model_info:
    elapsed_time: 4.801
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.664
- command: 사료 공급기를 켜줘.
  command_translated: Turn on the feeder.
  devices:
  - Feeder
  - Button
  - Humidifier
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  model_info:
    elapsed_time: 4.862
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.724
- command: 사료 공급기의 전원을 토글해줘.
  command_translated: Toggle the power of the feeder.
  devices:
  - Feeder
  - Button
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_toggle()
  model_info:
    elapsed_time: 2.808
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.668
- command: 사료 공급기의 사료 공급량을 100그램으로 설정해줘.
  command_translated: Set the feeder's feed amount to 100 grams.
  devices:
  - Feeder
  - Humidifier
  - GasMeter
  - Light
  - Dishwasher
  - Fan
  - GasValve
  - Clock
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).feederPortion_setFeedPortion(100, 'grams')
  model_info:
    elapsed_time: 3.422
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.281
- command: 사료 공급기의 사료 공급을 시작해줘.
  command_translated: Start feeding the feeder.
  devices:
  - Feeder
  - Button
  - Humidifier
  - Dishwasher
  - MenuProvider
  - Clock
  - Irrigator
  - Charger
  - Pump
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_off()
  model_info:
    elapsed_time: 4.901
    bge_elapsed_time: 0.14
    llm_elapsed_time: 4.761
- command: 가스 미터의 가스 사용량이 500kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter shows gas usage of 500 kWh or more.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - TemperatureSensor
  - Clock
  - Irrigator
  - AirQualityDetector
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasMeter).gasMeter_gasMeter >= 500.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.455
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.308
- command: 가스 미터의 가스 발열량이 1000kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter reads more than 1000 kcal of gas.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - GasValve
  - Clock
  - Irrigator
  - AirQualityDetector
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasMeter).gasMeter_gasMeter > 1000.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.643
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.495
- command: 가스 미터의 누적 가스 사용 시간이 10000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the siren of the alarm if the gas meter has a cumulative gas usage time of 10000 seconds or more.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - TemperatureSensor
  - Clock
  - AirQualityDetector
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#GasMeter).gasMeter_gasMeterTime >= 10000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.616
    bge_elapsed_time: 0.148
    llm_elapsed_time: 3.468
- command: 가스 미터의 가스 사용량이 20세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas meter reads more than 20 cubic meters of gas.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - GasMeter
  - Alarm
  - TemperatureSensor
  - Clock
  - Irrigator
  - AirQualityDetector
  - LightSensor
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasMeter).gasMeter_gasMeterVolume > 20.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.465
    bge_elapsed_time: 0.148
    llm_elapsed_time: 3.317
- command: 가스 밸브가 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is open.
  devices:
  - Siren
  - LeakSensor
  - Window
  - GasMeter
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasValve).valve_valve == "open")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.294
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.15
- command: 가스 밸브를 닫아줘.
  command_translated: Close the gas valve.
  devices:
  - Curtain
  - DoorLock
  - GasMeter
  - Valve
  - Alarm
  - Humidifier
  - Clock
  - Irrigator
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 2.701
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.56
- command: 가스 밸브를 열어줘.
  command_translated: Open the gas valve.
  devices:
  - DoorLock
  - Button
  - GasMeter
  - Valve
  - Alarm
  - Humidifier
  - Fan
  - Clock
  - Irrigator
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_open()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 3.898
    bge_elapsed_time: 0.139
    llm_elapsed_time: 3.759
- command: 가스 밸브의 가스 사용량이 1000kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve's gas usage is over 1000 kWh.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - Valve
  - TemperatureSensor
  - Clock
  - Irrigator
  - GasValve
  generated_code: []
  model_info:
    elapsed_time: 48.65
    bge_elapsed_time: 0.147
    llm_elapsed_time: 48.503
- command: 가스 밸브의 가스 발열량이 500kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a gas calorific value of 500 kcal or more.
  devices:
  - Siren
  - SoundSensor
  - GasMeter
  - Alarm
  - Valve
  - TemperatureSensor
  - Charger
  - Clock
  - Irrigator
  - AirQualityDetector
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterCalorific >= 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.785
    bge_elapsed_time: 0.149
    llm_elapsed_time: 3.637
- command: 가스 밸브의 누적 가스 사용 시간이 5000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a cumulative gas usage time of 5000 seconds or more.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - Valve
  - Clock
  - AirQualityDetector
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#GasValve).gasMeter_gasMeterTime >= 5000)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.408
    bge_elapsed_time: 0.149
    llm_elapsed_time: 3.259
- command: 가스 밸브의 가스 사용량이 34세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is using more than 34 cubic meters of gas.
  devices:
  - Siren
  - SmokeDetector
  - SoundSensor
  - GasMeter
  - Alarm
  - Valve
  - TemperatureSensor
  - Clock
  - Irrigator
  - AirQualityDetector
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasValve).gasMeter_gasMeterVolume > 34.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.507
    bge_elapsed_time: 0.149
    llm_elapsed_time: 3.358
- command: 가습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier is powered on.
  devices:
  - Siren
  - Humidifier
  - Alarm
  - HumiditySensor
  - Dishwasher
  - Clock
  - Relay
  - Irrigator
  - Charger
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.395
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.251
- command: 가습기의 모드가 자동이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier's mode is Auto.
  devices:
  - Siren
  - RobotCleaner
  - Window
  - Shade
  - Humidifier
  - Alarm
  - Dishwasher
  - Clock
  - WeatherProvider
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).airConditionerMode_airConditionerMode == "auto") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.818
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.674
- command: 가습기를 꺼줘.
  command_translated: Turn off the humidifier.
  devices:
  - Blind
  - Humidifier
  - HumiditySensor
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - WeatherProvider
  - SoilMoistureSensor
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_off()
  model_info:
    elapsed_time: 2.731
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.594
- command: 가습기를 켜줘.
  command_translated: Turn on the humidifier.
  devices:
  - Humidifier
  - HumiditySensor
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - AirQualityDetector
  - SoilMoistureSensor
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 4.776
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.64
- command: 가습기의 전원을 토글해줘.
  command_translated: Toggle the humidifier's power.
  devices:
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Charger
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_toggle()
  model_info:
    elapsed_time: 2.903
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.764
- command: 가습기를 강 모드로 설정해줘.
  command_translated: Set the humidifier to strong mode.
  devices:
  - Pump
  - Humidifier
  - HumiditySensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - SoilMoistureSensor
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).humidifierMode_setHumidifierMode('high')
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Pump).fanControl_setFanSpeed("Humidifier set to strong mode.")
  model_info:
    elapsed_time: 4.615
    bge_elapsed_time: 0.139
    llm_elapsed_time: 4.476
- command: 습도 센서의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity sensor reads a relative humidity of 70 percent or higher.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Humidifier
  - HumiditySensor
  - Alarm
  - ContactSensor
  - Clock
  - AirQualityDetector
  - SoilMoistureSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity >= 70.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.49
    bge_elapsed_time: 0.149
    llm_elapsed_time: 3.341
- command: 관개 장치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator is powered on.
  devices:
  - LeakSensor
  - Siren
  - DoorLock
  - Switch
  - Recorder
  - Alarm
  - Clock
  - Relay
  - Irrigator
  - Charger
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.36
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.215
- command: 관개 장치의 급수량이 3리터이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator has 3 liters of water.
  devices:
  - LeakSensor
  - Siren
  - Feeder
  - SoundSensor
  - Alarm
  - Clock
  - Relay
  - Irrigator
  - Charger
  - WeatherProvider
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Irrigator).irrigatorPortion_waterPortion >= 3.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.702
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.557
- command: 관개 장치의 상태가 급수 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator's status is watering.
  devices:
  - Siren
  - LeakSensor
  - Recorder
  - Alarm
  - Valve
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Pump
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).irrigatorOperatingState_irrigatorOperatingState == "watering") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.853
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.708
- command: 관개 장치를 꺼줘.
  command_translated: Turn off the irrigator.
  devices:
  - Curtain
  - Blind
  - Humidifier
  - Alarm
  - Fan
  - GasValve
  - Relay
  - Clock
  - Irrigator
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 4.943
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.805
- command: 관개 장치를 켜줘.
  command_translated: Turn on the irrigator.
  devices:
  - Feeder
  - Humidifier
  - Alarm
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Relay
  - Irrigator
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_off()
  model_info:
    elapsed_time: 4.958
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.821
- command: 관개 장치의 전원을 토글해줘.
  command_translated: Toggle the power of the irrigator.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Alarm
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_toggle()
  model_info:
    elapsed_time: 2.817
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.677
- command: 관개 장치의 급수량을 5리터로 설정해줘.
  command_translated: Set the water supply of the irrigator to 5 liters.
  devices:
  - LeakSensor
  - Feeder
  - Dehumidifier
  - Humidifier
  - Alarm
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - WeatherProvider
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).irrigatorPortion_setWaterPortion(5, "liters")
  model_info:
    elapsed_time: 3.456
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.315
- command: 관개 장치의 급수를 시작해줘.
  command_translated: Start watering the irrigator.
  devices:
  - LeakSensor
  - Feeder
  - Humidifier
  - Alarm
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - WeatherProvider
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 50.942
    bge_elapsed_time: 0.139
    llm_elapsed_time: 50.803
- command: 누수가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a leak is detected.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - Alarm
  - Valve
  - FallDetector
  - Clock
  - Relay
  - Irrigator
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#LeakSensor).leakSensor_leakage == "detected")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.373
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.231
- command: 조명이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light is on.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Window
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - DoorLock
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).lightLevel_light > 0.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.378
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.236
- command: 조명의 색조가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a hue of 30, sound the alarm's siren.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_color == "30|0") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.465
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.322
- command: 조명의 채도가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a saturation of 30, sound the alarm's siren.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_saturation == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.514
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.372
- command: 조명 밝기가 100이면 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren if the light brightness is 100
  devices:
  - Siren
  - SoundSensor
  - Window
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - DoorLock
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#LightSensor).lightLevel_light == 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.473
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.332
- command: 조명을 빨간색으로 설정해줘.
  command_translated: Set the light to red.
  devices:
  - Siren
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Buttonx4
  - Light
  - Fan
  - Clock
  - Relay
  - LightSensor
  generated_code: []
  model_info:
    elapsed_time: 50.839
    bge_elapsed_time: 0.14
    llm_elapsed_time: 50.699
- command: 조명의 색조를 70으로 설정해줘.
  command_translated: Set the hue of the light to 70.
  devices:
  - Siren
  - Blind
  - Alarm
  - Buttonx4
  - Light
  - Fan
  - Clock
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setHue(70.0)
  model_info:
    elapsed_time: 2.921
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.78
- command: 조명의 채도를 90으로 설정해줘.
  command_translated: Set the saturation of the light to 90.
  devices:
  - Shade
  - Blind
  - Humidifier
  - HumiditySensor
  - Alarm
  - Light
  - Camera
  - Fan
  - Clock
  - LightSensor
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setSaturation(90)
  model_info:
    elapsed_time: 2.96
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.821
- command: 5의 속도로 조명의 밝기를 80으로 설정해줘.
  command_translated: Set the brightness of the light to 80 with a speed of 5.
  devices:
  - Blind
  - Humidifier
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      (#Light).blindLevel_setBlindLevel(80, 5)
  model_info:
    elapsed_time: 3.278
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.137
- command: 조명의 경고 모드를 켜줘.
  command_translated: Turn on alert mode for lights.
  devices:
  - Siren
  - SmokeDetector
  - RobotCleaner
  - Blind
  - Alarm
  - Light
  - Clock
  - Relay
  - DoorLock
  - LightSensor
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 50.648
    bge_elapsed_time: 0.14
    llm_elapsed_time: 50.508
- command: 조명을 꺼줘.
  command_translated: Turn off the lights.
  devices:
  - Siren
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - WeatherProvider
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 51.333
    bge_elapsed_time: 0.137
    llm_elapsed_time: 51.196
- command: 조명을 켜줘.
  command_translated: Turn on the lights.
  devices:
  - Siren
  - Curtain
  - Blind
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Clock
  - Relay
  - DoorLock
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_off()
  model_info:
    elapsed_time: 4.654
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.517
- command: 조명의 전원을 토글해줘.
  command_translated: Toggle the power of the light.
  devices:
  - Humidifier
  - SmartPlug
  - Camera
  - Light
  - Buttonx4
  - Dishwasher
  - Fan
  - Clock
  - Relay
  - LightSensor
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 51.667
    bge_elapsed_time: 0.139
    llm_elapsed_time: 51.528
- command: 조도 센서의 밝기 값이 500룩스 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light sensor's brightness value is above 500 lux.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - MotionSensor
  - SoilMoistureSensor
  - Alarm
  - HumiditySensor
  - Light
  - Clock
  - LightSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#LightSensor).lightLevel_light > 500.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.362
    bge_elapsed_time: 0.15
    llm_elapsed_time: 3.213
- command: 오늘 학생식당 점심 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's 학생식당 lunch menu via the speaker.
  devices:
  - Calculator
  - Recorder
  - Alarm
  - Camera
  - Dishwasher
  - Fan
  - EmailProvider
  - Clock
  - Speaker
  - MenuProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_menu("today lunch 학생식당")
  model_info:
    elapsed_time: 3.425
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.283
- command: 오늘의 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's menu via the speaker.
  devices:
  - Calculator
  - DoorLock
  - Button
  - Recorder
  - Alarm
  - Camera
  - Buttonx4
  - Fan
  - Clock
  - Speaker
  - MenuProvider
  generated_code: []
  model_info:
    elapsed_time: 52.018
    bge_elapsed_time: 0.14
    llm_elapsed_time: 51.878
- command: 오늘의 식당을 스피커로 출력해줘.
  command_translated: Announce today's restaurant via the speaker.
  devices:
  - Calculator
  - SoundSensor
  - DoorLock
  - Recorder
  - Alarm
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Speaker
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayMenu()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayPlace()
  model_info:
    elapsed_time: 4.546
    bge_elapsed_time: 0.142
    llm_elapsed_time: 4.404
- command: 모션 센서가 활성 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the motion sensor is active.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - Window
  - ContactSensor
  - Alarm
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#MotionSensor).motionSensor_motion == "active")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.031
    bge_elapsed_time: 0.145
    llm_elapsed_time: 2.885
- command: 움직임이 감지되고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if motion is detected.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#MotionSensor).motionSensor_motion == "active")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.024
    bge_elapsed_time: 0.144
    llm_elapsed_time: 2.881
- command: 존재 감지 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a presence sensor is detected.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(any(#PresenceSensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.014
    bge_elapsed_time: 0.146
    llm_elapsed_time: 2.868
- command: 펌프의 현재 동작 모드가 최대이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the pump's current operating mode is maximum.
  devices:
  - Siren
  - RobotCleaner
  - SoundSensor
  - Window
  - Valve
  - Alarm
  - Clock
  - Charger
  - Pump
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_currentOperationMode == "maximum") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.526
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.38
- command: 펌프의 설정 동작 모드가 기본이면 알람의 사이렌을 울려줘.
  command_translated: If the pump's set operation mode is default, sound the alarm's siren.
  devices:
  - Siren
  - RobotCleaner
  - Button
  - Window
  - Valve
  - Alarm
  - Fan
  - Clock
  - WeatherProvider
  - Pump
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_currentOperationMode == "normal") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.698
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.553
- command: 펌프의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the pump is powered on.
  devices:
  - Siren
  - Switch
  - Valve
  - Alarm
  - SmartPlug
  - Fan
  - Clock
  - Relay
  - Charger
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.325
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.18
- command: 펌프가 지원하는 모드를 스피커로 출력해줘.
  command_translated: Announce the modes supported by the pump via the speaker.
  devices:
  - RobotCleaner
  - Button
  - Humidifier
  - Fan
  - AirPurifier
  - GasValve
  - Speaker
  - Clock
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The pump supports normal, minimum, and maximum operation modes.")
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The pump supports normal, minimum, and maximum operation modes.")
  model_info:
    elapsed_time: 5.123
    bge_elapsed_time: 0.143
    llm_elapsed_time: 4.981
- command: 펌프가 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the pump is open.
  devices:
  - Siren
  - LeakSensor
  - Curtain
  - Window
  - Valve
  - Alarm
  - Fan
  - Clock
  - DoorLock
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.306
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.163
- command: 펌프의 동작 모드를 최대로 설정해줘.
  command_translated: Set the pump's operation mode to maximum.
  devices:
  - RobotCleaner
  - Button
  - Humidifier
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pumpOperationMode_setOperationMode('maximum')
  model_info:
    elapsed_time: 3.185
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.044
- command: 펌프를 꺼줘.
  command_translated: Turn off the pump.
  devices:
  - AirConditioner
  - RobotCleaner
  - Dehumidifier
  - Humidifier
  - AirPurifier
  - Fan
  - Clock
  - Irrigator
  - Pump
  - WeatherProvider
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_off()
  model_info:
    elapsed_time: 2.837
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.699
- command: 펌프를 켜줘.
  command_translated: Turn on the pump.
  devices:
  - Button
  - Humidifier
  - Valve
  - AirPurifier
  - Fan
  - GasValve
  - Clock
  - Irrigator
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_on()
  model_info:
    elapsed_time: 2.798
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.66
- command: 펌프의 전원을 토글해줘.
  command_translated: Toggle the power of the pump.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Buttonx4
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_toggle()
  model_info:
    elapsed_time: 2.824
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.684
- command: 펌프를 닫아줘.
  command_translated: Close the pump.
  devices:
  - Curtain
  - Dehumidifier
  - Blind
  - Humidifier
  - Valve
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pump_close()
  model_info:
    elapsed_time: 2.828
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.69
- command: 펌프를 열어줘.
  command_translated: Open the pump.
  devices:
  - Button
  - Dehumidifier
  - Humidifier
  - Valve
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Pump
  - AirConditioner
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_off()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_toggle()
  model_info:
    elapsed_time: 4.898
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.76
- command: 냉장고의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the refrigerator is powered on.
  devices:
  - Siren
  - Window
  - Switch
  - Alarm
  - Camera
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.384
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.239
- command: 냉장고의 성에 제거 기능이 켜저 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's defrost function is on.
  devices:
  - Siren
  - SmokeDetector
  - SoundSensor
  - Window
  - Alarm
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Refrigerator).refrigeration_defrost == "on")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.381
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.235
- command: 냉장고의 급속 냉각 기능이 꺼져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's rapid cooling function is turned off.
  devices:
  - Siren
  - SmokeDetector
  - Window
  - Switch
  - Alarm
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Refrigerator).refrigeration_rapidCooling == "off")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.493
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.346
- command: 냉장고의 급속 냉동 기능이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the refrigerator's rapid freezing function is on.
  devices:
  - Siren
  - SoundSensor
  - Window
  - Alarm
  - Dishwasher
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - AirConditioner
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_rapidFreezing == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.6
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.454
- command: 냉장고를 꺼줘.
  command_translated: Turn off the refrigerator.
  devices:
  - Humidifier
  - Camera
  - TemperatureSensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - DoorLock
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_on()
  model_info:
    elapsed_time: 5.045
    bge_elapsed_time: 0.138
    llm_elapsed_time: 4.908
- command: 냉장고의 전원을 토글해줘.
  command_translated: Toggle the refrigerator's power.
  devices:
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_toggle()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_toggle()
  model_info:
    elapsed_time: 4.065
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.926
- command: 냉장고의 성에 제거 기능을 켜줘.
  command_translated: Turn on the refrigerator's defrost function.
  devices:
  - Curtain
  - Humidifier
  - Alarm
  - TemperatureSensor
  - Dishwasher
  - AirPurifier
  - Clock
  - DoorLock
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setDefrost('on')
  model_info:
    elapsed_time: 3.082
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.941
- command: 냉장고의 급속 냉각 기능을 켜줘.
  command_translated: Turn on the refrigerator's rapid cooling function.
  devices:
  - Feeder
  - Humidifier
  - TemperatureSensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setRapidCooling('on')
  model_info:
    elapsed_time: 3.238
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.097
- command: 냉장고의 급속 냉동 기능을 꺼줘.
  command_translated: Turn off the refrigerator's rapid freezing function.
  devices:
  - Feeder
  - Humidifier
  - TemperatureSensor
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Refrigerator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setRapidFreezing('off')
  model_info:
    elapsed_time: 3.23
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.089
- command: 로봇 청소기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the robot vacuum is powered on.
  devices:
  - Siren
  - RobotCleaner
  - SoundSensor
  - Switch
  - Alarm
  - SmartPlug
  - AirPurifier
  - Clock
  - Relay
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#RobotCleaner).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.409
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.265
- command: 로봇 청소기가 자동 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the robot vacuum is in automatic mode.
  devices:
  - Siren
  - RobotCleaner
  - SoundSensor
  - Feeder
  - Window
  - Recorder
  - Alarm
  - Dishwasher
  - AirPurifier
  - Clock
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#RobotCleaner).robotCleanerCleaningMode_robotCleanerCleaningMode == "auto")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.694
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.551
- command: 로봇 청소기를 꺼줘.
  command_translated: Turn off the robot vacuum.
  devices:
  - AirConditioner
  - RobotCleaner
  - Feeder
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Clock
  - Relay
  - Irrigator
  - WeatherProvider
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 50.854
    bge_elapsed_time: 0.136
    llm_elapsed_time: 50.717
- command: 로봇 청소기를 켜줘.
  command_translated: Turn on the robot vacuum.
  devices:
  - Feeder
  - RobotCleaner
  - Button
  - Humidifier
  - Light
  - Dishwasher
  - AirPurifier
  - Clock
  - Irrigator
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Button).switch_on()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Button).colorControl_setHue()
  - name: "Scenario4"
    cron: ""
    period: -1
    code: |-
      (#Button).switchLevel_alert()
  model_info:
    elapsed_time: 6.018
    bge_elapsed_time: 0.137
    llm_elapsed_time: 5.881
- command: 로봇 청소기의 전원을 토글해줘.
  command_translated: Toggle the robot vacuum's power.
  devices:
  - RobotCleaner
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_toggle()
  model_info:
    elapsed_time: 2.87
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.73
- command: 로봇 청소기의 청소 모드를 수동으로 설정해줘.
  command_translated: Set the robot vacuum's cleaning mode to manual.
  devices:
  - RobotCleaner
  - Feeder
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Clock
  - Pump
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).robotCleanerCleaningMode_setRobotCleanerCleaningMode('manual')
  model_info:
    elapsed_time: 3.257
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.116
- command: 쉐이드가 40퍼센트 이상 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is more than 40% open.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - HumiditySensor
  - Clock
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel > 40) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.492
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.347
- command: 쉐이드가 완전히 열려 있는 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is fully open.
  devices:
  - Siren
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - Valve
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel == 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.536
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.391
- command: 쉐이드가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the shade via the speaker.
  devices:
  - Siren
  - SoundSensor
  - Shade
  - Switch
  - Recorder
  - Alarm
  - Fan
  - Clock
  - Speaker
  - WeatherProvider
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The supported shade commands are: " + (#Shade).windowShade_supportedWindowShadeCommands)
  model_info:
    elapsed_time: 3.718
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.576
- command: 쉐이드를 50퍼 센트로 설정해줘.
  command_translated: Set the shade to 50 percent.
  devices:
  - Calculator
  - Button
  - Shade
  - Blind
  - HumiditySensor
  - Light
  - Buttonx4
  - Fan
  - Clock
  - LightSensor
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(50)
  model_info:
    elapsed_time: 3.241
    bge_elapsed_time: 0.141
    llm_elapsed_time: 3.1
- command: 쉐이드를 닫아줘.
  command_translated: Close the shade.
  devices:
  - Curtain
  - Button
  - Shade
  - Blind
  - Valve
  - Buttonx4
  - Light
  - Clock
  - Relay
  - DoorLock
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShade_close()
  model_info:
    elapsed_time: 2.893
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.756
- command: 쉐이드를 열어줘.
  command_translated: Open the shade.
  devices:
  - Curtain
  - Button
  - Shade
  - Blind
  - Buttonx4
  - Light
  - Fan
  - MenuProvider
  - Clock
  - DoorLock
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShade_open()
  model_info:
    elapsed_time: 2.941
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.804
- command: 쉐이드 움직임을 일시 중지해줘.
  command_translated: Pause the shade movement.
  devices:
  - Curtain
  - MotionSensor
  - Button
  - Shade
  - Blind
  - Camera
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      if ((#Shade).windowShade_windowShade == "opening" or (#Shade).windowShade_windowShade == "closing") {
        (#Shade).windowShade_pause()
      }
  model_info:
    elapsed_time: 4.555
    bge_elapsed_time: 0.141
    llm_elapsed_time: 4.414
- command: 사이렌이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the siren is on.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - Curtain
  - Window
  - Switch
  - Alarm
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 5.064
    bge_elapsed_time: 0.143
    llm_elapsed_time: 4.922
- command: 사이렌 모드가 사이렌이면 알람의 사이렌을 울려줘.
  command_translated: If the siren mode is Siren, sound the alarm's siren.
  devices:
  - Siren
  - SoundSensor
  - RobotCleaner
  - MotionSensor
  - Window
  - Recorder
  - Alarm
  - Clock
  - Relay
  - Pump
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarm == "siren") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.282
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.139
- command: 사이렌을 꺼줘.
  command_translated: Turn off the siren.
  devices:
  - Siren
  - Curtain
  - Button
  - Blind
  - Alarm
  - Camera
  - Buttonx4
  - AirPurifier
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 3.722
    bge_elapsed_time: 0.136
    llm_elapsed_time: 3.586
- command: 사이렌을 켜줘.
  command_translated: Turn on the siren.
  devices:
  - Siren
  - Curtain
  - Button
  - Blind
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_on()
  model_info:
    elapsed_time: 4.949
    bge_elapsed_time: 0.136
    llm_elapsed_time: 4.813
- command: 사이렌 전원을 토글해줘.
  command_translated: Toggle the siren power.
  devices:
  - Siren
  - Button
  - Switch
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_toggle()
  model_info:
    elapsed_time: 2.795
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.657
- command: 사이렌 모드를 경광등으로 설정해줘.
  command_translated: Set the siren mode to strobe.
  devices:
  - Siren
  - Curtain
  - Shade
  - Blind
  - Alarm
  - Light
  - Clock
  - Relay
  - LightSensor
  - AirConditioner
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 2.788
    bge_elapsed_time: 0.142
    llm_elapsed_time: 2.647
- command: 스마트 플러그의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is powered on.
  devices:
  - Siren
  - Television
  - Switch
  - Alarm
  - SmartPlug
  - Light
  - Clock
  - Relay
  - DoorLock
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SmartPlug).switch_switch == "on")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.423
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.277
- command: 스마트 플러그의 전압이 220볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is over 220 volts.
  devices:
  - Siren
  - Television
  - Switch
  - Alarm
  - SmartPlug
  - Light
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#SmartPlug).voltageMeasurement_voltage > 220.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.719
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.573
- command: 스마트 플러그의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is drawing more than 10 amps.
  devices:
  - Siren
  - Switch
  - Alarm
  - SmartPlug
  - Light
  - Fan
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SmartPlug).currentMeasurement_current > 10.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.572
    bge_elapsed_time: 0.147
    llm_elapsed_time: 3.425
- command: 스마트 플러그의 소비 전력이 1000와트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if a smart plug draws more than 1000 watts.
  devices:
  - Siren
  - Television
  - Switch
  - Alarm
  - SmartPlug
  - Light
  - Clock
  - Relay
  - Irrigator
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#SmartPlug).powerMeter_powerConsumption > 1000)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.742
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.595
- command: 스마트 플러그를 꺼줘.
  command_translated: Turn off the smart plug.
  devices:
  - Button
  - Television
  - Switch
  - SmartPlug
  - Light
  - AirPurifier
  - Clock
  - Relay
  - DoorLock
  - Refrigerator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_off()
  model_info:
    elapsed_time: 2.847
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.708
- command: 스마트 플러그를 켜줘.
  command_translated: Turn on the smart plug.
  devices:
  - Button
  - Television
  - Switch
  - SmartPlug
  - Light
  - Fan
  - Clock
  - Relay
  - Irrigator
  - Refrigerator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_channelDown("Smart plug turned on.")
  model_info:
    elapsed_time: 4.205
    bge_elapsed_time: 0.139
    llm_elapsed_time: 4.066
- command: 스마트 플러그의 전원을 토글해줘.
  command_translated: Toggle the power of the smart plug.
  devices:
  - Button
  - Switch
  - SmartPlug
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Refrigerator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 0
    code: |-
      (#SmartPlug).switch_toggle()
  model_info:
    elapsed_time: 2.816
    bge_elapsed_time: 0.141
    llm_elapsed_time: 2.675
- command: 연기 감지기에서 연기가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if smoke is detected by the smoke detector.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - Relay
  - AirQualityDetector
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SmokeDetector).smokeDetector_smoke == "detected")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.272
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.127
- command: 토양 습도 센서의 토양 습도 측정값이 30퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the soil moisture sensor's soil moisture reading is 30 percent or less.
  devices:
  - Siren
  - LeakSensor
  - LightSensor
  - SoundSensor
  - HumiditySensor
  - Alarm
  - Clock
  - AirQualityDetector
  - SoilMoistureSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.768
    bge_elapsed_time: 0.152
    llm_elapsed_time: 3.616
- command: 소리 센서에서 소리가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if sound is detected by the sound sensor.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoundSensor).soundSensor_sound == "detected(sound detected)")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.134
    bge_elapsed_time: 0.145
    llm_elapsed_time: 2.989
- command: 소리 감지 레벨이 70dB 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the sound detection level is above 70 dB.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - Recorder
  - Alarm
  - HumiditySensor
  - FallDetector
  - Clock
  - AirQualityDetector
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoundSensor).soundPressureLevel_soundPressureLevel > 70.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.425
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.279
- command: 스피커의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is powered on.
  devices:
  - Siren
  - SoundSensor
  - Switch
  - Recorder
  - Alarm
  - Camera
  - Light
  - Clock
  - Speaker
  - Charger
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.357
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.212
- command: 스피커가 재생 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is playing.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Button
  - Recorder
  - Alarm
  - Camera
  - Clock
  - Speaker
  - DoorLock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).mediaPlayback_playbackStatus == "playing") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.409
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.266
- command: 스피커가 지원하는 명령어를 스피커로 출력해줘.
  command_translated: Announce commands that the speaker supports via the speaker.
  devices:
  - Calculator
  - SoundSensor
  - Button
  - Television
  - Alarm
  - Camera
  - Buttonx4
  - Fan
  - Clock
  - Speaker
  - DoorLock
  generated_code: []
  model_info:
    elapsed_time: 52.02
    bge_elapsed_time: 0.143
    llm_elapsed_time: 51.878
- command: 스피커를 꺼줘.
  command_translated: Turn off the speaker.
  devices:
  - Siren
  - Curtain
  - Television
  - Recorder
  - Alarm
  - Camera
  - AirPurifier
  - Fan
  - Clock
  - Speaker
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 2.747
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.609
- command: 스피커를 켜줘.
  command_translated: Turn on the speaker.
  devices:
  - Siren
  - SoundSensor
  - Button
  - Recorder
  - Alarm
  - Camera
  - Buttonx4
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_toggle()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 4.726
    bge_elapsed_time: 0.138
    llm_elapsed_time: 4.588
- command: 스피커의 전원을 토글해줘.
  command_translated: Toggle the power of the speaker.
  devices:
  - Button
  - Humidifier
  - SmartPlug
  - Light
  - Dishwasher
  - Buttonx4
  - Fan
  - Clock
  - Speaker
  - Irrigator
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 52.385
    bge_elapsed_time: 0.14
    llm_elapsed_time: 52.245
- command: 스피커의 재생을 빨리 감기 해줘.
  command_translated: Fast-forward the playback of the speaker.
  devices:
  - SoundSensor
  - Button
  - Recorder
  - Humidifier
  - Camera
  - Buttonx4
  - AirPurifier
  - Fan
  - Clock
  - Speaker
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 51.288
    bge_elapsed_time: 0.142
    llm_elapsed_time: 51.146
- command: 스피커의 재생을 일시 정지해줘.
  command_translated: Pause playback on the speaker.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Recorder
  - Alarm
  - Camera
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_pause()
  model_info:
    elapsed_time: 2.691
    bge_elapsed_time: 0.142
    llm_elapsed_time: 2.55
- command: 스피커의 재생을 되감아줘.
  command_translated: Rewind the speaker's playback.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Recorder
  - Blind
  - Alarm
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  - Relay
  generated_code: []
  model_info:
    elapsed_time: 50.212
    bge_elapsed_time: 0.141
    llm_elapsed_time: 50.072
- command: 스피커의 재생을 멈춰줘.
  command_translated: Stop the speaker from playing.
  devices:
  - Siren
  - SoundSensor
  - Curtain
  - Recorder
  - Alarm
  - Camera
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_stop()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_pause()
  - name: "Scenario4"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_setPlaybackStatus('stopped')
  model_info:
    elapsed_time: 5.959
    bge_elapsed_time: 0.141
    llm_elapsed_time: 5.818
- command: 스피커에서 music.mp3를 재생해줘.
  command_translated: Play 'music.mp3' on the speaker.
  devices:
  - SoundSensor
  - Button
  - Recorder
  - Alarm
  - Camera
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_play(source: "music.audioRecord_recordStatus")
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(text: "Play music.audioRecord_recordStatus on the speaker.")
  model_info:
    elapsed_time: 4.433
    bge_elapsed_time: 0.14
    llm_elapsed_time: 4.293
- command: 스피커에서 '지금은 테스트 중입니다.'를 말해줘.
  command_translated: Speak "This is a test" through the speaker.
  devices:
  - SmokeDetector
  - SoundSensor
  - Recorder
  - Switch
  - Alarm
  - Clock
  - Speaker
  - DoorLock
  - Charger
  - Relay
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("This is a test")
  model_info:
    elapsed_time: 2.806
    bge_elapsed_time: 0.144
    llm_elapsed_time: 2.663
- command: 녹음기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the recorder is powered on.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Speaker
  - Recorder
  - Switch
  - Alarm
  - Camera
  - Clock
  - Relay
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Recorder).switch_switch == "on")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.135
    bge_elapsed_time: 0.144
    llm_elapsed_time: 2.99
- command: 녹음기가 녹음 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the recorder is recording.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Button
  - Recorder
  - Alarm
  - Camera
  - Clock
  - Speaker
  - Charger
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Recorder).audioRecord_recordStatus == "recording")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.341
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.199
- command: 녹음기를 꺼줘.
  command_translated: Turn off the recorder.
  devices:
  - Siren
  - Button
  - Speaker
  - Recorder
  - Camera
  - AirPurifier
  - Fan
  - Clock
  - Relay
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_off()
  model_info:
    elapsed_time: 2.768
    bge_elapsed_time: 0.136
    llm_elapsed_time: 2.632
- command: 녹음기를 켜줘.
  command_translated: Turn on the recorder.
  devices:
  - Button
  - Recorder
  - Camera
  - Buttonx4
  - Fan
  - AirPurifier
  - Clock
  - Speaker
  - Irrigator
  - Relay
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_off()
  model_info:
    elapsed_time: 3.744
    bge_elapsed_time: 0.137
    llm_elapsed_time: 3.607
- command: 녹음기의 전원을 토글해줘.
  command_translated: Toggle the recorder's power.
  devices:
  - Recorder
  - Humidifier
  - SmartPlug
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Speaker
  - Irrigator
  - Charger
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_toggle()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_toggle()
  model_info:
    elapsed_time: 3.679
    bge_elapsed_time: 0.14
    llm_elapsed_time: 3.539
- command: 녹음기로 10초 동안 녹음해서 test.wav로 저장해줘.
  command_translated: Record 10 seconds with a recorder and save it as test.wav.
  devices:
  - SoundSensor
  - Button
  - Recorder
  - Charger
  - Camera
  - Fan
  - Clock
  - Speaker
  - AirQualityDetector
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).audioRecord_record("test.mediaPlayback_playbackStatus", 10000)
  model_info:
    elapsed_time: 3.137
    bge_elapsed_time: 0.143
    llm_elapsed_time: 2.993
- command: 스위치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the switch is powered on.
  devices:
  - Siren
  - Button
  - Switch
  - Alarm
  - SmartPlug
  - Light
  - Clock
  - Relay
  - DoorLock
  - Charger
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Switch).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.432
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.287
- command: 스위치를 꺼줘.
  command_translated: Switch off.
  devices:
  - Button
  - Speaker
  - Switch
  - Blind
  - SmartPlug
  - Buttonx4
  - Light
  - Fan
  - Clock
  - Relay
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_off()
  model_info:
    elapsed_time: 2.798
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.662
- command: 스위치를 켜줘.
  command_translated: Switch on.
  devices:
  - Irrigator
  - Button
  - Switch
  - Buttonx4
  - Light
  - Fan
  - Clock
  - Relay
  - DoorLock
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_on()
  model_info:
    elapsed_time: 2.787
    bge_elapsed_time: 0.136
    llm_elapsed_time: 2.651
- command: 스위치의 전원을 토글해줘.
  command_translated: Toggle the power of the switch.
  devices:
  - Button
  - Switch
  - Humidifier
  - SmartPlug
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - Irrigator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_toggle()
  model_info:
    elapsed_time: 2.795
    bge_elapsed_time: 0.14
    llm_elapsed_time: 2.655
- command: TV의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is powered on.
  devices:
  - Siren
  - LeakSensor
  - Button
  - Television
  - Switch
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Television).switch_switch == "on")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.439
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.296
- command: 현재 TV 채널 이름이 '9시 뉴스'이면 알람의 사이렌을 울려줘.
  command_translated: If the current TV channel is named "9 o'clock news" sound the alarm's siren.
  devices:
  - LeakSensor
  - Siren
  - Curtain
  - Television
  - Window
  - Recorder
  - Alarm
  - Clock
  - DoorLock
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).tvChannel_tvChannelName == "9 o'clock news") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.539
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.393
- command: TV의 볼륨이 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the volume on the TV is above 50.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Television
  - Blind
  - Alarm
  - Light
  - Clock
  - Relay
  - Irrigator
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#Television).audioVolume_volume > 50)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.46
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.317
- command: TV가 음소거 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is muted.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - RobotCleaner
  - Television
  - Speaker
  - Recorder
  - Alarm
  - Clock
  - Relay
  - DoorLock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).audioMute_muteStatus == "muted") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.608
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.465
- command: TV를 꺼줘.
  command_translated: Turn off the TV.
  devices:
  - Curtain
  - Television
  - Speaker
  - Switch
  - Blind
  - Camera
  - Light
  - AirPurifier
  - Clock
  - Relay
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_off()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 3.822
    bge_elapsed_time: 0.136
    llm_elapsed_time: 3.686
- command: TV를 켜줘.
  command_translated: Turn on the TV.
  devices:
  - Button
  - Television
  - Speaker
  - Camera
  - Light
  - Dishwasher
  - AirPurifier
  - Fan
  - Clock
  - Relay
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("TV turned on.")
  model_info:
    elapsed_time: 4.172
    bge_elapsed_time: 0.137
    llm_elapsed_time: 4.035
- command: TV의 전원을 토글해줘.
  command_translated: Toggle the power of the TV.
  devices:
  - Button
  - Television
  - Humidifier
  - SmartPlug
  - Camera
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_toggle()
  model_info:
    elapsed_time: 2.908
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.77
- command: TV 채널을 하나 내려줘.
  command_translated: Turn down a TV channel.
  devices:
  - Calculator
  - Curtain
  - DoorLock
  - Button
  - Television
  - Blind
  - Camera
  - Fan
  - Clock
  - Relay
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_channelDown()
  model_info:
    elapsed_time: 2.839
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.702
- command: TV 채널을 하나 올려줘.
  command_translated: Upload a TV channel.
  devices:
  - Calculator
  - Feeder
  - Curtain
  - Button
  - Television
  - Blind
  - Camera
  - Fan
  - MenuProvider
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(123)
      (#Television).tvChannel_setTvChannelName("Channel 123")
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(456)
      (#Television).tvChannel_setTvChannelName("Channel 456")
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(789)
      (#Television).tvChannel_setTvChannelName("Channel 789")
  model_info:
    elapsed_time: 8.332
    bge_elapsed_time: 0.137
    llm_elapsed_time: 8.195
- command: TV 채널을 7번으로 설정해줘.
  command_translated: Set the TV channel to 7.
  devices:
  - Calculator
  - Button
  - Television
  - Blind
  - Camera
  - Buttonx4
  - Light
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  generated_code: []
  model_info:
    elapsed_time: 52.41
    bge_elapsed_time: 0.139
    llm_elapsed_time: 52.271
- command: TV 채널을 '9시 뉴스'로 설정해줘.
  command_translated: Set the TV channel to "9 o'clock news".
  devices:
  - Curtain
  - Television
  - Blind
  - Camera
  - Dishwasher
  - Fan
  - Clock
  - Irrigator
  - AirConditioner
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(9)
      (#Television).tvChannel_setTvChannelName( "9 o'clock news")
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(9)
      (#Television).tvChannel_setTvChannelName("9 o'clock news")
  model_info:
    elapsed_time: 5.739
    bge_elapsed_time: 0.142
    llm_elapsed_time: 5.597
- command: TV의 볼륨을 30으로 설정해줘.
  command_translated: Set the volume on the TV to 30.
  devices:
  - Television
  - Blind
  - Alarm
  - Camera
  - Light
  - Fan
  - AirPurifier
  - Clock
  - Irrigator
  - LightSensor
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_setVolume(30)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_on()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_channelDown("The volume on the TV has been set to 30.")
  model_info:
    elapsed_time: 5.78
    bge_elapsed_time: 0.14
    llm_elapsed_time: 5.64
- command: TV의 볼륨을 낮춰줘.
  command_translated: Turn down the volume on the TV.
  devices:
  - Curtain
  - Television
  - Blind
  - Alarm
  - Camera
  - Light
  - AirPurifier
  - Fan
  - Clock
  - Speaker
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeDown()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeDown()
  model_info:
    elapsed_time: 4.096
    bge_elapsed_time: 0.138
    llm_elapsed_time: 3.958
- command: TV의 볼륨을 높여줘.
  command_translated: Turn up the volume on the TV.
  devices:
  - Button
  - Television
  - Blind
  - Alarm
  - Camera
  - Light
  - Fan
  - Clock
  - Speaker
  - Irrigator
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeUp()
  model_info:
    elapsed_time: 3.007
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.868
- command: TV를 음소거해줘.
  command_translated: Mute the TV.
  devices:
  - Television
  - Alarm
  - Camera
  - Light
  - Dishwasher
  - AirPurifier
  - Clock
  - Speaker
  - AirQualityDetector
  - LightSensor
  - Relay
  generated_code: []
  model_info:
    elapsed_time: 51.61
    bge_elapsed_time: 0.137
    llm_elapsed_time: 51.472
- command: TV의 음소거 상태를 해제해줘.
  command_translated: Unmute the TV.
  devices:
  - RobotCleaner
  - Television
  - Speaker
  - Recorder
  - Alarm
  - Dishwasher
  - AirPurifier
  - Clock
  - Relay
  - AirQualityDetector
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_unmute()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute('unmuted')
  model_info:
    elapsed_time: 4.394
    bge_elapsed_time: 0.141
    llm_elapsed_time: 4.253
- command: TV의 음소거 상태를 음소거로 설정해줘.
  command_translated: Set the TV's mute state to Mute.
  devices:
  - RobotCleaner
  - Television
  - Recorder
  - Humidifier
  - Dishwasher
  - AirPurifier
  - Clock
  - Speaker
  - Irrigator
  - Relay
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute('muted')
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_mute()
  - name: "Scenario3"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_unmute()
  model_info:
    elapsed_time: 5.516
    bge_elapsed_time: 0.141
    llm_elapsed_time: 5.375
- command: 현재 실내 온도가 25도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current room temperature is above 25 degrees.
  devices:
  - Siren
  - SoundSensor
  - Alarm
  - HumiditySensor
  - TemperatureSensor
  - Camera
  - Clock
  - DoorLock
  - AirQualityDetector
  - WeatherProvider
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.488
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.345
- command: 밸브가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the valve is open.
  devices:
  - Siren
  - LeakSensor
  - Window
  - ContactSensor
  - Valve
  - Alarm
  - Clock
  - Relay
  - DoorLock
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasValve).valve_valve == "open")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.278
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.135
- command: 밸브를 닫아줘.
  command_translated: Close the valve.
  devices:
  - LeakSensor
  - Curtain
  - Dehumidifier
  - Blind
  - Valve
  - Alarm
  - Fan
  - Clock
  - Irrigator
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 3.891
    bge_elapsed_time: 0.136
    llm_elapsed_time: 3.755
- command: 밸브를 열어줘.
  command_translated: Open the valve.
  devices:
  - LeakSensor
  - Curtain
  - Button
  - Blind
  - Valve
  - Fan
  - Clock
  - Irrigator
  - Charger
  - Pump
  - GasValve
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_open()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 3.873
    bge_elapsed_time: 0.137
    llm_elapsed_time: 3.735
- command: 바깥 습도가 80퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity outside is above 80 percent.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Humidifier
  - Alarm
  - HumiditySensor
  - Clock
  - AirQualityDetector
  - SoilMoistureSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).weatherProvider_temperatureWeather > 80.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.407
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.261
- command: 바깥의 미세먼지 농도가 100 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the particulate matter concentration outside is above 100.
  devices:
  - Siren
  - LeakSensor
  - SmokeDetector
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).weatherProvider_pm25Weather > 100.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.564
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.419
- command: 바깥의 초미세먼지 농도가 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the outside fine particulate matter concentration is above 50.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Alarm
  - HumiditySensor
  - AirPurifier
  - Clock
  - AirQualityDetector
  - LightSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).weatherProvider_pm25Weather > 50.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.535
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.391
- command: 기압이 1020hPa 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the barometric pressure is above 1020 hPa.
  devices:
  - Siren
  - AirConditioner
  - LeakSensor
  - SoundSensor
  - Window
  - Alarm
  - Valve
  - Clock
  - Relay
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until ((#WeatherProvider).weatherProvider_pressureWeather > 1020.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.479
    bge_elapsed_time: 0.144
    llm_elapsed_time: 3.336
- command: 현재 바깥의 기온이 30도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if it's currently above 30 degrees outside.
  devices:
  - Siren
  - AirConditioner
  - SoundSensor
  - Window
  - Alarm
  - HumiditySensor
  - Camera
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).weatherProvider_temperatureWeather > 30.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.391
    bge_elapsed_time: 0.146
    llm_elapsed_time: 3.245
- command: 현재 날씨가 비가 오고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current weather is rainy.
  devices:
  - LeakSensor
  - Siren
  - SoundSensor
  - Window
  - Recorder
  - Alarm
  - Clock
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#WeatherProvider).weatherProvider_weather == "rain")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.173
    bge_elapsed_time: 0.143
    llm_elapsed_time: 3.029
- command: 위도 37.5665, 경도 126.9780의 현재 날씨 정보를 스피커로 출력해줘.
  command_translated: Announce the current weather information for latitude 37.5665 and longitude 126.9780 via the speaker.
  devices:
  - SoundSensor
  - ContactSensor
  - HumiditySensor
  - Clock
  - Speaker
  - DoorLock
  - AirQualityDetector
  - LightSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#WeatherProvider.weatherProvider_getWeatherInfo(37.5665, 126.9780))
  model_info:
    elapsed_time: 3.761
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.615
- command: 창문이 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a window is open.
  devices:
  - Siren
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Alarm
  - Camera
  - Clock
  - DoorLock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Window).windowControl_window == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.319
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.177
- command: 창문을 닫아줘.
  command_translated: Close the window.
  devices:
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Camera
  - WeatherProvider
  - Clock
  - DoorLock
  - AirConditioner
  - Dehumidifier
  generated_code: []
  model_info:
    elapsed_time: 49.884
    bge_elapsed_time: 0.136
    llm_elapsed_time: 49.747
- command: 창문을 열어줘.
  command_translated: Open a window.
  devices:
  - Curtain
  - Window
  - Shade
  - Blind
  - ContactSensor
  - Camera
  - WeatherProvider
  - Fan
  - Clock
  - DoorLock
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Window).windowControl_open()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse("Window opened.")
  model_info:
    elapsed_time: 3.809
    bge_elapsed_time: 0.137
    llm_elapsed_time: 3.672
- command: 낙상 감지 센서에서 낙상이 감지된 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a fall is detected by the fall detection sensor.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#FallDetector).fallDetection_fall == "fall")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.049
    bge_elapsed_time: 0.149
    llm_elapsed_time: 2.9
- command: 점유 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if an occupancy sensor is detected.
  devices:
  - LeakSensor
  - Siren
  - SmokeDetector
  - SoundSensor
  - MotionSensor
  - ContactSensor
  - Alarm
  - FallDetector
  - PresenceSensor
  - Clock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(any(#PresenceSensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.049
    bge_elapsed_time: 0.145
    llm_elapsed_time: 2.903
- command: 릴레이의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relay is powered on.
  devices:
  - Siren
  - SmokeDetector
  - Switch
  - Alarm
  - Camera
  - Light
  - SmartPlug
  - Clock
  - Relay
  - DoorLock
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Relay).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.322
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.178
- command: 릴레이를 꺼줘.
  command_translated: Turn off the relay.
  devices:
  - Siren
  - Curtain
  - Button
  - Blind
  - Alarm
  - Camera
  - Light
  - Clock
  - Relay
  - LightSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_off()
  model_info:
    elapsed_time: 2.778
    bge_elapsed_time: 0.138
    llm_elapsed_time: 2.641
- command: 릴레이를 켜줘.
  command_translated: Turn on the relay.
  devices:
  - Siren
  - Button
  - Blind
  - Alarm
  - Camera
  - Light
  - Buttonx4
  - Fan
  - Clock
  - Relay
  - LightSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_on()
  model_info:
    elapsed_time: 2.803
    bge_elapsed_time: 0.137
    llm_elapsed_time: 2.666
- command: 릴레이의 전원을 토글해줘.
  command_translated: Toggle the power of the relay.
  devices:
  - Button
  - SmartPlug
  - Camera
  - Light
  - Buttonx4
  - Alarm
  - Fan
  - Clock
  - Relay
  - Irrigator
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_toggle()
  model_info:
    elapsed_time: 2.895
    bge_elapsed_time: 0.139
    llm_elapsed_time: 2.755
- command: 테스트 타이머라는 이름의 60초 길이의 타이머를 추가해줘.
  command_translated: Add a 60-second timer named Test Timer.
  devices:
  - DoorLock
  - Timer
  - Alarm
  - Camera
  - HumiditySensor
  - GasMeter
  - Clock
  - Irrigator
  - Charger
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 60.0)
  model_info:
    elapsed_time: 3.066
    bge_elapsed_time: 0.143
    llm_elapsed_time: 2.923
- command: 테스트 타이머라는 이름의 타이머가 존재하면 알람의 사이렌을 울려줘.
  command_translated: If a timer named Test Timer exists, sound the alarm siren.
  devices:
  - Siren
  - LeakSensor
  - SoundSensor
  - Timer
  - Alarm
  - PresenceSensor
  - Clock
  - Relay
  - DoorLock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if (#Timer).timer_isExist("Test Timer") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.043
    bge_elapsed_time: 0.145
    llm_elapsed_time: 2.898
- command: 테스트 타이머라는 이름의 타이머가 하면 알람의 사이렌을 울려줘.
  command_translated: if a timer named Test Timer goes off, sound an alarm siren.
  devices:
  - Siren
  - SmokeDetector
  - SoundSensor
  - Timer
  - Alarm
  - Camera
  - Clock
  - Relay
  - DoorLock
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(timer_isExist("Test Timer") and timer_isSet("Test Timer"))
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.204
    bge_elapsed_time: 0.145
    llm_elapsed_time: 3.06
- command: 테스트 타이머라는 이름의 타이머를 리셋해줘.
  command_translated: Reset a timer named Test Timer.
  devices:
  - Button
  - Speaker
  - Recorder
  - Timer
  - Alarm
  - Camera
  - Fan
  - Clock
  - DoorLock
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      timer_reset("Test Timer")
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until(timer_isExist("Test Timer") == false)
      (#Speaker).mediaPlayback_speak("Timer Test Timer has been reset.")
  model_info:
    elapsed_time: 4.61
    bge_elapsed_time: 0.14
    llm_elapsed_time: 4.47
- command: 테스트 타이머라는 이름의 타이머를 120초로 설정해줘.
  command_translated: Set a timer named Test Timer to 120 seconds.
  devices:
  - SoundSensor
  - Dehumidifier
  - Timer
  - Humidifier
  - Camera
  - Alarm
  - Fan
  - Clock
  - Irrigator
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 120)
  model_info:
    elapsed_time: 3.149
    bge_elapsed_time: 0.142
    llm_elapsed_time: 3.007
- command: 테스트 타이머라는 이름의 타이머를 시작해줘.
  command_translated: Start a timer named Test Timer.
  devices:
  - DoorLock
  - Button
  - Recorder
  - Timer
  - Alarm
  - Camera
  - Fan
  - Clock
  - Irrigator
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name="Test Timer", timeout=0)
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until(#Timer).timer_isExist(name="Test Timer")
      wait until(#Timer).timer_isSet(name="Test Timer")
      wait until(#Timer).timer_start(name="Test Timer")
  model_info:
    elapsed_time: 5.321
    bge_elapsed_time: 0.141
    llm_elapsed_time: 5.179

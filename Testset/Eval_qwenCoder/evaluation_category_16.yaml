- command: 내 생일이 되면 "생일 축하합니다" 노래를 불러 줘.
  command_translated: Sing "Happy Birthday" on my birthday.
  devices:
  - Clock
  - Speaker
  - Humidifier
  - Irrigator
  - Recorder
  - Timer
  - Fan
  generated_code:
  - name: "Scenario1"
    cron: "0 8 12 6 *\"  # Runs on June 12th at 8:00 AM"
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("Happy Birthday!")
  model_info:
    elapsed_time: 3.833
    bge_elapsed_time: 0.082
    llm_elapsed_time: 3.734
    validation_elapsed_time: 0.017
- command: 날 우울하게 만드는 뉴스를 감지하면 위로의 말을 해 줘.
  command_translated: If you detects news that makes me depressed, say something uplifting.
  devices:
  - MotionSensor
  - Dehumidifier
  - FallDetector
  - Speaker
  - Clock
  - Buttonx4
  - SmokeDetector
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).mediaPlayback_supportedPlaybackCommands contains "depress") {
        (#Speaker).mediaPlayback_speak("Hello! Remember, there's always hope. Stay positive!")
      }
  model_info:
    elapsed_time: 3.859
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.749
    validation_elapsed_time: 0.025
- command: 고양이가 기분이 좋을 때마다 박수를 쳐 줘.
  command_translated: Clap whenever your cat is in a good mood.
  devices:
  - Shade
  - ContactSensor
  - LightSensor
  - Clock
  - Speaker
  - Window
  - Camera
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if ((#Speaker).mediaPlayback_playbackStatus == "good_mood") {
        (#Speaker).mediaPlayback_speak("Meow~")
      }
  model_info:
    elapsed_time: 3.506
    bge_elapsed_time: 0.083
    llm_elapsed_time: 3.398
    validation_elapsed_time: 0.025
- command: 지금 내 기분에 맞춰 조명을 감성적으로 조절해 줘.
  command_translated: Emotionally adjust the light to match my mood right now.
  devices:
  - Shade
  - Alarm
  - LightSensor
  - Blind
  - Clock
  - Speaker
  - Light
  - Siren
  - Curtain
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      current_mood := "happy"  # Placeholder for actual mood detection logic
      if (current_mood == "happy") {
        (#Light).colorControl_setColor("WHITE")
      } else if (current_mood == "sad") {
        (#Light).colorControl_setColor("BLUE")
      } else if (current_mood == "angry") {
        (#Light).colorControl_setColor("RED")
      } else if (current_mood == "relaxed") {
        (#Light).colorControl_setColor("GREEN")
      } else {
        (#Speaker).mediaPlayback_speak("Sorry, I couldn't detect your mood.")
      }
  model_info:
    elapsed_time: 8.177
    bge_elapsed_time: 0.084
    llm_elapsed_time: 8.073
    validation_elapsed_time: 0.02
- command: 집이 외로워 보이면 음악을 틀어 줘.
  command_translated: If the house seems lonely, play some music.
  devices:
  - OccupancySensor
  - Blind
  - Dehumidifier
  - Speaker
  - FallDetector
  - Clock
  - Window
  - PresenceSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#PresenceSensor).presenceSensor_presence == "not_present") {
        (#Speaker).mediaPlayback_play("path/to/music/file.mediaPlayback_playbackStatus")
      }
  model_info:
    elapsed_time: 3.509
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.404
    validation_elapsed_time: 0.021
- command: 밖이 위험해 보이면 자동으로 경찰에 전화해 줘.
  command_translated: Automatically call the police if it looks dangerous outside.
  devices:
  - LeakSensor
  - Blind
  - FallDetector
  - Clock
  - Speaker
  - DoorLock
  - WeatherProvider
  - TemperatureSensor
  - Siren
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).mediaPlayback_playbackStatus != null) {
        if (any(#Speaker).mediaPlayback_playbackStatus contains "dangerous sign") {
          (#Speaker).mediaPlayback_speak("police number")
        }
      }
  model_info:
    elapsed_time: 4.147
    bge_elapsed_time: 0.084
    llm_elapsed_time: 4.02
    validation_elapsed_time: 0.043
- command: 스마트폰 배터리가 20% 이하가 되면 커튼을 닫아 줘.
  command_translated: Close the curtains when your smartphone's battery drops below 20%.
  devices:
  - Shade
  - Curtain
  - Blind
  - Clock
  - Speaker
  - Window
  - Pump
  - TemperatureSensor
  - Charger
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#Speaker).chargingState_chargingState <= 20.0)
      (#Curtain).curtain_close()
  model_info:
    elapsed_time: 3.449
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.336
    validation_elapsed_time: 0.029
- command: 오늘 중요한 발표가 있으면 행운을 빌어 줘.
  command_translated: If there is a big announcement today, wish me luck.
  devices:
  - Relay
  - Clock
  - Speaker
  - Window
  - Valve
  - MenuProvider
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#MenuProvider).menuProvider_todayPlace() == "공지사항") {
        (#Speaker).mediaPlayback_speak("안녕하세요! 오늘은 공지사항이 있으시군요. 행운을 빕니다!")
      }
  model_info:
    elapsed_time: 4.274
    bge_elapsed_time: 0.084
    llm_elapsed_time: 4.174
    validation_elapsed_time: 0.016
- command: 로봇청소기에게 커피 한 잔 타 달라고 부탁해 줘.
  command_translated: Ask your robot vacuum cleaner to make you a cup of coffee.
  devices:
  - Clock
  - Speaker
  - Valve
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Dishwasher
  - Refrigerator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("Sorry, I can't assist with making coffee. Please make it yourself.")
  model_info:
    elapsed_time: 3.28
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.18
    validation_elapsed_time: 0.017
- command: 기분 좋게 춤춰 줘.
  command_translated: Do a happy dance.
  devices:
  - Relay
  - Clock
  - Speaker
  - Buttonx4
  - Humidifier
  - WeatherProvider
  - Camera
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("Do a happy dance.")
  model_info:
    elapsed_time: 2.822
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.725
    validation_elapsed_time: 0.016

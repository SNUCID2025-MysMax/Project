- command: 창문이 열리면 알람의 사이렌을 울려 줘.
  command_translated: Sound the alarm's siren when the window opens.
  devices:
  - Pump
  - Speaker
  - DoorLock
  - Siren
  - Blind
  - Window
  - Alarm
  - Shade
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Window).windowControl_window == "open")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.207
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.1
    validation_elapsed_time: 0.02
- command: 토양 수분이 20% 이상이었다가 이하가 되면 관개 장치를 작동시켜 줘.
  command_translated: Turn on irrigation when soil moisture is above and below 20%.
  devices:
  - Humidifier
  - TemperatureSensor
  - WeatherProvider
  - Pump
  - Clock
  - Speaker
  - Irrigator
  - Dehumidifier
  - SoilMoistureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 60000
    code: |-
      if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 20.0) {
        (#Irrigator).switch_on()
      } else if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0) {
        (#Irrigator).switch_on()
      }
  model_info:
    elapsed_time: 5.835
    bge_elapsed_time: 0.114
    llm_elapsed_time: 5.704
    validation_elapsed_time: 0.018
- command: 움직임이 감지되면 최대 3번까지 조명을 켜 줘.
  command_translated: Turn on the light up to 3 times when motion is detected.
  devices:
  - Speaker
  - Buttonx4
  - FallDetector
  - Siren
  - Button
  - LightSensor
  - MotionSensor
  - Light
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      counter := 0
      if ((#MotionSensor).motionSensor_motion == 'active') {
        counter = counter + 1
        if (counter <= 3) {
          (#Light).switch_on()
        }
      }
  model_info:
    elapsed_time: 4.477
    bge_elapsed_time: 0.096
    llm_elapsed_time: 4.359
    validation_elapsed_time: 0.022
- command: 온도가 35도 이상이 되면 에어컨을 켜 줘.
  command_translated: Turn on the air conditioner when the temperature is above 35 degrees.
  devices:
  - TemperatureSensor
  - WeatherProvider
  - Calculator
  - Fan
  - Speaker
  - AirConditioner
  - AirPurifier
  - Dehumidifier
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {
        (#AirConditioner).airConditionerMode_setTemperature(35.0)
        (#AirConditioner).switch_on()
      }
  model_info:
    elapsed_time: 4.463
    bge_elapsed_time: 0.132
    llm_elapsed_time: 4.311
    validation_elapsed_time: 0.02
- command: 습도가 80% 이상이 되면 블라인드를 내려 줘.
  command_translated: Lower the blinds when the humidity is above 80%.
  devices:
  - Humidifier
  - WeatherProvider
  - Clock
  - Speaker
  - Blind
  - AirQualityDetector
  - HumiditySensor
  - Dehumidifier
  - SoilMoistureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 60000
    code: |-
      if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {
        (#Blind).blind_close()
      }
  model_info:
    elapsed_time: 3.873
    bge_elapsed_time: 0.166
    llm_elapsed_time: 3.687
    validation_elapsed_time: 0.02
- command: 블라인드가 닫히면 ‘블라인드가 닫혔습니다’라고 말해 줘.
  command_translated: When the blinds are closed, say 'Blinds are closed'.
  devices:
  - Pump
  - Speaker
  - DoorLock
  - GasValve
  - Blind
  - Window
  - Shade
  - Curtain
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Blind).blind_blind == "closed")
      (#Speaker).mediaPlayback_speak("Blinds are closed")
  model_info:
    elapsed_time: 3.486
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.38
    validation_elapsed_time: 0.02
- command: TV가 꺼지면 스피커를 꺼 줘.
  command_translated: Turn off the speakers when the TV is turned off.
  devices:
  - Speaker
  - SoundSensor
  - GasValve
  - Blind
  - AirQualityDetector
  - Timer
  - Television
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).switch_switch == "off") {
        (#Speaker).switch_off()
      }
  model_info:
    elapsed_time: 3.298
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.188
    validation_elapsed_time: 0.024
- command: 커튼이 3번 열렸다 닫히면 조명을 꺼 줘.
  command_translated: Turn off the light when the curtain opens and closes 3 times.
  devices:
  - Speaker
  - DoorLock
  - Siren
  - Blind
  - Window
  - Shade
  - Valve
  - Curtain
  - Light
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      count := 0
      if ((#Curtain).curtain_curtain == "open") {
        count = count + 1
        if (count == 3) {
          (#Light).switch_off()
        }
      } else if ((#Curtain).curtain_curtain == "closed") {
        count = 0
      }
  model_info:
    elapsed_time: 5.787
    bge_elapsed_time: 0.087
    llm_elapsed_time: 5.679
    validation_elapsed_time: 0.021
- command: 제습기가 꺼지면 다시 켜 줘.
  command_translated: Turn the dehumidifier back on when it turns off.
  devices:
  - Humidifier
  - Pump
  - Speaker
  - Irrigator
  - AirPurifier
  - Valve
  - Refrigerator
  - Dehumidifier
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Dehumidifier).dehumidifierMode_dehumidifierMode == "off")
      (#Dehumidifier).switch_on()
  model_info:
    elapsed_time: 3.806
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.701
    validation_elapsed_time: 0.02
- command: 재실 센서에서 더 이상 감지가 안 되면 ‘문이 열렸습니다’라고 말해 줘.
  command_translated: When the occupancy sensor no longer detects it, say 'Door is open'.
  devices:
  - ContactSensor
  - TemperatureSensor
  - PresenceSensor
  - SoundSensor
  - Speaker
  - OccupancySensor
  - LeakSensor
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#OccupancySensor).presenceSensor_presence == "not_present")
      (#Speaker).mediaPlayback_speak("Door is open")
  model_info:
    elapsed_time: 3.298
    bge_elapsed_time: 0.106
    llm_elapsed_time: 3.175
    validation_elapsed_time: 0.017

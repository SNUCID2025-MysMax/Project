- command: "창문이 열리면 알람의 사이렌을 울려 줘."
  command_translated: "Sound the alarm's siren when the window opens."
  devices:
  - Siren
  - Alarm
  - DoorLock
  - Valve
  - Curtain
  - Window
  - Pump
  - Speaker
  - Shade
  - Clock
  - Blind
  generated_code: []
  elapsed_time: 4.360 seconds
- command: "토양 수분이 20% 이상이었다가 이하가 되면 관개 장치를 작동시켜 줘."
  command_translated: "Turn on irrigation when soil moisture is above and below 20%."
  devices:
  - SoilMoistureSensor
  - Dehumidifier
  - TemperatureSensor
  - Humidifier
  - Irrigator
  - Pump
  - Speaker
  - Clock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until(((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 20.0) and ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 20.0))
      all(#Irrigator).switch_on()
  elapsed_time: 6.258 seconds
- command: "움직임이 감지되면 최대 3번까지 조명을 켜 줘."
  command_translated: "Turn on the light up to 3 times when motion is detected."
  devices:
  - Siren
  - FallDetector
  - Buttonx4
  - Clock
  - MotionSensor
  - Button
  - Speaker
  - LightSensor
  - Light
  - SmokeDetector
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      counter := 0
      repeat_until(counter >= 3)
        wait until((#MotionSensor).motionSensor_motion == active)
        counter += 1
        (#Light).switch_on()
      end_repeat
      (#Light).switch_off()
  elapsed_time: 5.539 seconds
- command: "온도가 35도 이상이 되면 에어컨을 켜 줘."
  command_translated: "Turn on the air conditioner when the temperature is above 35 degrees."
  devices:
  - RobotCleaner
  - Dehumidifier
  - TemperatureSensor
  - AirPurifier
  - Calculator
  - Speaker
  - Fan
  - AirConditioner
  - Clock
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until((#TemperatureSensor).temperatureMeasurement_temperature > 35.0)
      (#AirConditioner).airConditionerMode_setTemperature(35.0)
      (#AirConditioner).airConditionerMode_setAirConditionerMode("cool")
      (#AirConditioner).switch_on()
  elapsed_time: 6.135 seconds
- command: "습도가 80% 이상이 되면 블라인드를 내려 줘."
  command_translated: "Lower the blinds when the humidity is above 80%."
  devices:
  - SoilMoistureSensor
  - AirQualityDetector
  - Dehumidifier
  - Humidifier
  - HumiditySensor
  - Speaker
  - Shade
  - Clock
  - Blind
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0)
      (#Blind).blindLevel_setBlindLevel(50)
  elapsed_time: 5.334 seconds
- command: "블라인드가 닫히면 ‘블라인드가 닫혔습니다’라고 말해 줘."
  command_translated: "When the blinds are closed, say 'Blinds are closed'."
  devices:
  - DoorLock
  - Curtain
  - Window
  - Pump
  - Speaker
  - GasValve
  - Shade
  - Clock
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until(all(#Blind).blind_blind == "closed")
      (#Speaker).mediaPlayback_speak("블라인드가 닫혀 있습니다.")
  elapsed_time: 5.454 seconds
- command: "TV가 꺼지면 스피커를 꺼 줘."
  command_translated: "Turn off the speakers when the TV is turned off."
  devices:
  - Timer
  - AirQualityDetector
  - SoundSensor
  - Television
  - Window
  - Speaker
  - GasValve
  - Clock
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until((#Television).switch_switch == "off")
      (#Speaker).switch_off()
  elapsed_time: 4.260 seconds
- command: "커튼이 3번 열렸다 닫히면 조명을 꺼 줘."
  command_translated: "Turn off the light when the curtain opens and closes 3 times."
  devices:
  - Siren
  - DoorLock
  - Valve
  - Curtain
  - Clock
  - Window
  - Pump
  - Speaker
  - Shade
  - Light
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      counter := 0
      repeat_until(counter == 3) {
        wait until(#Curtain).blind_blind == open
        wait until(#Curtain).blind_blind == closed
        counter += 1
      }

      (#Light).switch_off()
  elapsed_time: 5.867 seconds
- command: "제습기가 꺼지면 다시 켜 줘."
  command_translated: "If the dehumidifier turns off, turn it back on."
  devices:
  - Dehumidifier
  - Valve
  - Refrigerator
  - Humidifier
  - AirPurifier
  - Irrigator
  - Pump
  - Speaker
  - GasValve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until((#Dehumidifier).dehumidifierMode_dehumidifierMode != "off")
      (#Dehumidifier).switch_on()
  elapsed_time: 4.929 seconds
- command: "재실 센서에서 더 이상 감지가 안 되면 ‘문이 열렸습니다’라고 말해 줘."
  command_translated: "When the occupancy sensor no longer detects it, say 'Door is open'."
  devices:
  - SoundSensor
  - OccupancySensor
  - ContactSensor
  - TemperatureSensor
  - MotionSensor
  - Speaker
  - LightSensor
  - LeakSensor
  - Clock
  - PresenceSensor
  generated_code: []
  elapsed_time: 4.016 seconds

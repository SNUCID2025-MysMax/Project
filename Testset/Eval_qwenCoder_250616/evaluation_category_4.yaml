- command: 창문이 열리면 알람의 사이렌을 울려 줘.
  command_translated: Sound the alarm's siren when the window opens.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Blind
  - Alarm
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Window).windowControl_window == "open"
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(#Window).windowControl_window == "closed"
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.187
    bge_elapsed_time: 0.086
    llm_elapsed_time: 4.027
    validation_elapsed_time: 0.075
- command: 토양 수분이 20% 이상이었다가 이하가 되면 관개 장치를 작동시켜 줘.
  command_translated: Turn on irrigation when soil moisture is above and below 20%.
  devices:
  - Speaker
  - Clock
  - Pump
  - TemperatureSensor
  - WeatherProvider
  - SoilMoistureSensor
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity > 20.0)
      (#Irrigator).switch_on()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 20.0)
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 5.604
    bge_elapsed_time: 0.104
    llm_elapsed_time: 5.361
    validation_elapsed_time: 0.139
- command: 움직임이 감지되면 최대 3번까지 조명을 켜 줘.
  command_translated: Turn on the light up to 3 times when motion is detected.
  devices:
  - Speaker
  - LightSensor
  - FallDetector
  - Siren
  - Buttonx4
  - Clock
  - MotionSensor
  - Light
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#MotionSensor).motionSensor_motion == "active") {
        (#Light).switchLevel_setLevel(30, 1000)
        wait until((#MotionSensor).motionSensor_motion == "inactive")
        (#Light).switchLevel_setLevel(30, 1000)
        wait until((#MotionSensor).motionSensor_motion == "inactive")
        (#Light).switchLevel_setLevel(30, 1000)
      }
  model_info:
    elapsed_time: 6.218
    bge_elapsed_time: 0.111
    llm_elapsed_time: 6.029
    validation_elapsed_time: 0.077
- command: 온도가 35도 이상이 되면 에어컨을 켜 줘.
  command_translated: Turn on the air conditioner when the temperature is above 35 degrees.
  devices:
  - AirConditioner
  - Speaker
  - AirPurifier
  - Clock
  - Fan
  - WeatherProvider
  - TemperatureSensor
  - Calculator
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_airConditionerMode == "auto") {
        if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {
          (#AirConditioner).airConditionerMode_setAirConditionerMode("cool")
          (#AirConditioner).airConditionerMode_setTemperature(22.0)
        }
      }
  model_info:
    elapsed_time: 5.287
    bge_elapsed_time: 0.086
    llm_elapsed_time: 5.143
    validation_elapsed_time: 0.059
- command: 습도가 80% 이상이 되면 블라인드를 내려 줘.
  command_translated: Lower the blinds when the humidity is above 80%.
  devices:
  - Speaker
  - AirQualityDetector
  - Clock
  - WeatherProvider
  - Blind
  - Dehumidifier
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0) {
        (#Blind).blind_close()
      }
  model_info:
    elapsed_time: 3.294
    bge_elapsed_time: 0.115
    llm_elapsed_time: 3.085
    validation_elapsed_time: 0.095
- command: 블라인드가 닫히면 ‘블라인드가 닫혔습니다’라고 말해 줘.
  command_translated: When the blinds are closed, say 'Blinds are closed'.
  devices:
  - Window
  - DoorLock
  - Speaker
  - GasValve
  - Pump
  - Curtain
  - Blind
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Blind).blind_blind == "closed"
      (#Speaker).mediaPlayback_speak("Blinds are closed")
  model_info:
    elapsed_time: 3.135
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.951
    validation_elapsed_time: 0.098
- command: TV가 꺼지면 스피커를 꺼 줘.
  command_translated: Turn off the speakers when the TV is turned off.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - GasValve
  - Blind
  - Timer
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).switch_switch == "off") {
        (#Speaker).switch_off()
      }
  model_info:
    elapsed_time: 3.042
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.847
    validation_elapsed_time: 0.11
- command: 커튼이 3번 열렸다 닫히면 조명을 꺼 줘.
  command_translated: Turn off the light when the curtain opens and closes 3 times.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Clock
  - Curtain
  - Blind
  - Valve
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain == "open") {
        (#Light).switch_off()
      }
  - name: "Scenario2"
    cron: ""
    period: 100
    code: |-
      counter := 0
      if ((#Curtain).curtain_curtain == "open") {
        counter += 1
        if (counter == 3) {
          (#Light).switch_on()
          counter := 0
        }
      }
  model_info:
    elapsed_time: 6.188
    bge_elapsed_time: 0.086
    llm_elapsed_time: 5.928
    validation_elapsed_time: 0.175
- command: 제습기가 꺼지면 다시 켜 줘.
  command_translated: Turn the dehumidifier back on when it turns off.
  devices:
  - Speaker
  - AirPurifier
  - Clock
  - Pump
  - Refrigerator
  - Valve
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Dehumidifier).switch_switch == "off")
      (#Dehumidifier).switch_on()
  model_info:
    elapsed_time: 3.175
    bge_elapsed_time: 0.102
    llm_elapsed_time: 3.014
    validation_elapsed_time: 0.06
- command: 재실 센서에서 더 이상 감지가 안 되면 ‘문이 열렸습니다’라고 말해 줘.
  command_translated: When the occupancy sensor no longer detects it, say 'Door is open'.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - TemperatureSensor
  - ContactSensor
  - LeakSensor
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#PresenceSensor).presenceSensor_presence == "not_present"
      (#Speaker).mediaPlayback_speak("Door is open")
  model_info:
    elapsed_time: 2.788
    bge_elapsed_time: 0.113
    llm_elapsed_time: 2.627
    validation_elapsed_time: 0.048

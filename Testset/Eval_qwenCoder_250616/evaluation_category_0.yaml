- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
      (#Siren).sirenMode_setSirenMode('siren')
  model_info:
    elapsed_time: 4.386
    bge_elapsed_time: 1.16
    llm_elapsed_time: 3.133
    validation_elapsed_time: 0.092
- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
      (#Siren).sirenMode_setSirenMode('siren')
  model_info:
    elapsed_time: 2.739
    bge_elapsed_time: 0.089
    llm_elapsed_time: 2.596
    validation_elapsed_time: 0.053
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Speaker
  - Siren
  - Clock
  - Blind
  - Alarm
  - Timer
  - Light
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.659
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.497
    validation_elapsed_time: 0.075
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Speaker
  - Siren
  - Clock
  - Blind
  - Alarm
  - Timer
  - Light
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.668
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.499
    validation_elapsed_time: 0.074
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Speaker
  - Valve
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
      (#Siren).sirenMode_setSirenMode('both')
  model_info:
    elapsed_time: 2.671
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.522
    validation_elapsed_time: 0.053
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Speaker
  - Valve
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
      (#Siren).sirenMode_setSirenMode('both')
  model_info:
    elapsed_time: 2.661
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.519
    validation_elapsed_time: 0.053
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Speaker
  - GasValve
  - Valve
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
      (#Siren).sirenMode_setSirenMode('off')
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 3.322
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.183
    validation_elapsed_time: 0.053
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Speaker
  - GasValve
  - Valve
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
      (#Siren).sirenMode_setSirenMode('off')
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 3.32
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.178
    validation_elapsed_time: 0.053
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#OccupancySensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.668
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.528
    validation_elapsed_time: 0.049
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#OccupancySensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.658
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.519
    validation_elapsed_time: 0.049
- command: 에어컨의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is powered on.
  devices:
  - AirConditioner
  - Speaker
  - Recorder
  - AirPurifier
  - Siren
  - Clock
  - TemperatureSensor
  - Alarm
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.015
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.863
    validation_elapsed_time: 0.058
- command: 에어컨의 모드가 냉방 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is in cooling mode.
  devices:
  - AirConditioner
  - Speaker
  - Recorder
  - AirPurifier
  - Siren
  - Clock
  - TemperatureSensor
  - Refrigerator
  - Alarm
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_airConditionerMode == "cool") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.32
    bge_elapsed_time: 0.108
    llm_elapsed_time: 3.15
    validation_elapsed_time: 0.061
- command: 에어컨의 목표 온도가 30도면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner's target temperature is 30 degrees.
  devices:
  - AirConditioner
  - Speaker
  - AirPurifier
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.462
    bge_elapsed_time: 0.118
    llm_elapsed_time: 3.24
    validation_elapsed_time: 0.104
- command: 에어컨이 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes supported by the air conditioner
  devices:
  - AirConditioner
  - Speaker
  - Recorder
  - AirPurifier
  - Feeder
  - Clock
  - TemperatureSensor
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).mediaPlayback_speak(#AirConditioner).airConditionerMode_supportedAcModes)
  model_info:
    elapsed_time: 3.021
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.88
    validation_elapsed_time: 0.056
- command: 에어컨을 꺼줘.
  command_translated: Turn off the air conditioner.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Clock
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_off()
  model_info:
    elapsed_time: 2.418
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.252
    validation_elapsed_time: 0.062
- command: 에어컨을 켜줘.
  command_translated: Turn on the air conditioner.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_on()
  model_info:
    elapsed_time: 2.376
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.208
    validation_elapsed_time: 0.062
- command: 에어컨의 전원을 토글해줘.
  command_translated: Toggle the power of the air conditioner.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - SmartPlug
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_toggle()
  model_info:
    elapsed_time: 2.373
    bge_elapsed_time: 0.11
    llm_elapsed_time: 2.206
    validation_elapsed_time: 0.057
- command: 에어컨을 자동 모드로 설정해줘.
  command_translated: Set the air conditioner to auto mode.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setAirConditionerMode('auto')
  model_info:
    elapsed_time: 2.838
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.618
    validation_elapsed_time: 0.117
- command: 에어컨의 목표 온도를 18도로 설정해줘.
  command_translated: Set the target temperature for the air conditioner to 18 degrees.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Fan
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setTemperature(18.0)
  model_info:
    elapsed_time: 2.808
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.618
    validation_elapsed_time: 0.102
- command: 공기청정기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is powered on.
  devices:
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Siren
  - Clock
  - Alarm
  - Fan
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.182
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.973
    validation_elapsed_time: 0.105
- command: 공기청정기가 수면 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is in sleep mode.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Siren
  - Clock
  - Alarm
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).airPurifierFanMode_airPurifierFanMode == "sleep") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.611
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.421
    validation_elapsed_time: 0.104
- command: 공기청정기가 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes the air purifier supports
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - Recorder
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_on()
      (#AirPurifier).switch_toggle()
      wait until(#AirPurifier).switch_switch == "on"
      (#Speaker).mediaPlayback_speak("The air purifier supports modes: auto, low, medium, high, sleep, quiet, wind free, and off.")
      (#AirPurifier).switch_toggle()
      (#AirPurifier).switch_off()
  model_info:
    elapsed_time: 5.649
    bge_elapsed_time: 0.084
    llm_elapsed_time: 5.474
    validation_elapsed_time: 0.091
- command: 공기청정기를 꺼줘.
  command_translated: Turn off the air purifier.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - GasValve
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_off()
  model_info:
    elapsed_time: 2.485
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.299
    validation_elapsed_time: 0.105
- command: 공기청정기를 켜줘.
  command_translated: Turn on the air purifier.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - WeatherProvider
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_on()
  model_info:
    elapsed_time: 2.514
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.325
    validation_elapsed_time: 0.104
- command: 공기청정기의 전원을 토글해줘.
  command_translated: Toggle the air purifier's power.
  devices:
  - Speaker
  - AirQualityDetector
  - SmartPlug
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_toggle()
  model_info:
    elapsed_time: 2.437
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.255
    validation_elapsed_time: 0.098
- command: 공기청정기의 모드를 자동으로 설정해줘.
  command_translated: Set the air purifier's mode to automatic.
  devices:
  - AirConditioner
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')
  model_info:
    elapsed_time: 3.069
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.868
    validation_elapsed_time: 0.103
- command: 공기질 측정기의 측정 온도가 20도이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren If the temperature measured by the air quality meter is 20 degrees.
  devices:
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - HumiditySensor
  - Alarm
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).temperatureMeasurement_temperature == 20.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.176
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.989
    validation_elapsed_time: 0.1
- command: 이산화탄소 농도가 800ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the carbon dioxide concentration is above 800 ppm.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Siren
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - SmokeDetector
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 800.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.344
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.153
    validation_elapsed_time: 0.104
- command: 공기질 측정기의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relative humidity on the air quality meter is above 70 percent.
  devices:
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - WeatherProvider
  - Alarm
  - Dehumidifier
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).relativeHumidityMeasurement_humidity > 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.296
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.115
    validation_elapsed_time: 0.093
- command: 실내 황사 농도가 150마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor yellow dust concentration is 150 micrograms or more.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - WeatherProvider
  - LeakSensor
  - Alarm
  - SmokeDetector
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#HumiditySensor).dustSensor_dustLevel >= 150) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.214
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.025
    validation_elapsed_time: 0.1
- command: 실내 미세먼지 농도가 35마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if indoor particulate matter concentration is 35 micrograms or higher.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoundSensor).dustSensor_dustLevel >= 35) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.136
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.948
    validation_elapsed_time: 0.1
- command: 실내 초미세먼지 농도가 15마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor fine particulate matter concentration is 15 micrograms or more.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - WeatherProvider
  - Alarm
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_fineDustLevel >= 15) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.279
    bge_elapsed_time: 0.089
    llm_elapsed_time: 3.104
    validation_elapsed_time: 0.086
- command: 총 휘발성 유기 화합물 농도가 0.5ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the total volatile organic compound concentration is greater than 0.5 ppm.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - LeakSensor
  - Alarm
  - SmokeDetector
  - Valve
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).tvocMeasurement_tvocLevel > 0.5) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.066
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.928
    validation_elapsed_time: 0.05
- command: 알람이 경광등 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm is in strobe mode.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Siren
  - ContactSensor
  - Blind
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarm == "strobe") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.978
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.795
    validation_elapsed_time: 0.085
- command: 알람의 볼륨이 높음이면 알람의 사이렌을 울려줘.
  command_translated: If the volume of the alarm is high, sound the alarm's siren.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Siren
  - LeakSensor
  - Blind
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarmVolume == "high") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.873
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.73
    validation_elapsed_time: 0.057
- command: 알람 배터리 상태가 20퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm battery is below 20 percent.
  devices:
  - SoundSensor
  - Speaker
  - Charger
  - Siren
  - Clock
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - Timer
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).battery_battery < 20.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.878
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.729
    validation_elapsed_time: 0.053
- command: 알람의 사이렌과 경광등을 모두 켜줘.
  command_translated: Turn on both the alarm's siren and strobe.
  devices:
  - Window
  - Speaker
  - Siren
  - FallDetector
  - Blind
  - Alarm
  - SmokeDetector
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_both()
  model_info:
    elapsed_time: 2.19
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.036
    validation_elapsed_time: 0.058
- command: 알람을 꺼줘.
  command_translated: Turn off the alarm.
  devices:
  - Speaker
  - GasValve
  - Siren
  - Clock
  - Blind
  - Alarm
  - Timer
  - MotionSensor
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 2.248
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.095
    validation_elapsed_time: 0.063
- command: 알람의 볼륨을 낮음으로 설정해줘.
  command_translated: Set the volume of the alarm to low.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Clock
  - Blind
  - Alarm
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_setAlarmVolume('low')
  model_info:
    elapsed_time: 2.465
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.303
    validation_elapsed_time: 0.06
- command: 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren.
  devices:
  - Speaker
  - Recorder
  - Siren
  - FallDetector
  - Blind
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.336
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.187
    validation_elapsed_time: 0.056
- command: 알람의 경광등을 켜줘.
  command_translated: Turn on the alarm's light.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - ContactSensor
  - Blind
  - Alarm
  - Timer
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).sirenMode_setSirenMode('both')
  model_info:
    elapsed_time: 2.541
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.365
    validation_elapsed_time: 0.086
- command: 블라인드가 50 퍼센트 이상 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are more than 50 percent open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Curtain
  - Blind
  - Alarm
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blindLevel_blindLevel > 50) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.153
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.992
    validation_elapsed_time: 0.074
- command: 블라인드가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Curtain
  - Blind
  - Alarm
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blind_blind == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.968
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.791
    validation_elapsed_time: 0.074
- command: 블라인드를 70 퍼센트로 설정해줘.
  command_translated: Set the blinds to 70 percent.
  devices:
  - Window
  - Speaker
  - FallDetector
  - Clock
  - Buttonx4
  - Curtain
  - Blind
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blindLevel_setBlindLevel(70)
  model_info:
    elapsed_time: 2.71
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.521
    validation_elapsed_time: 0.094
- command: 블라인드를 닫아줘.
  command_translated: Close the blinds.
  devices:
  - Window
  - Speaker
  - Buttonx4
  - Pump
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_close()
  model_info:
    elapsed_time: 2.35
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.17
    validation_elapsed_time: 0.098
- command: 블라인드를 열어줘.
  command_translated: Open the blinds.
  devices:
  - Window
  - Speaker
  - Buttonx4
  - Pump
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_open()
  model_info:
    elapsed_time: 2.346
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.165
    validation_elapsed_time: 0.098
- command: 블라인드 움직임을 멈춰줘.
  command_translated: Stop blind movement.
  devices:
  - Speaker
  - FallDetector
  - Curtain
  - Blind
  - Timer
  - MotionSensor
  - Clock
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_pause()
  model_info:
    elapsed_time: 2.187
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.047
    validation_elapsed_time: 0.057
- command: 버튼이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the button is pressed.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Buttonx4
  - ContactSensor
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Button.button_button == "pushed")
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(#Button.button_button == "swipe_up" or #Button.button_button == "swipe_down" or #Button.button_button == "swipe_left" or #Button.button_button == "swipe_right")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 5.639
    bge_elapsed_time: 0.097
    llm_elapsed_time: 5.488
    validation_elapsed_time: 0.054
- command: 버튼의 개수가 4개 이상이면 알람의 사이렌을 울려줘.
  command_translated: If there are more than four buttons, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Buttonx4
  - Blind
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons > 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.334
    bge_elapsed_time: 0.099
    llm_elapsed_time: 3.179
    validation_elapsed_time: 0.057
- command: 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the button's supported states via the speaker.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Recorder
  - Buttonx4
  - ContactSensor
  - Valve
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      supported_states := (#Button).button_supportedButtonValues
      (#Speaker).mediaPlayback_speak(supported_states)
  model_info:
    elapsed_time: 2.919
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.771
    validation_elapsed_time: 0.049
- command: 버튼1이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 1 is pressed.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Buttonx4
  - Alarm
  - Timer
  - MotionSensor
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_button1 == "pushed") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.261
    bge_elapsed_time: 0.095
    llm_elapsed_time: 3.112
    validation_elapsed_time: 0.054
- command: 버튼2가 눌린 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 2 is pressed.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Buttonx4
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Buttonx4).buttonx4_button2 == "pushed"
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "pushed_2x"
      (#Alarm).alarm_siren()
      name = "Scenario3"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "pushed_3x"
      (#Alarm).alarm_siren()
      name = "Scenario4"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "pushed_4x"
      (#Alarm).alarm_siren()
      name = "Scenario5"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "pushed_5x"
      (#Alarm).alarm_siren()
      name = "Scenario6"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "pushed_6x"
      (#Alarm).alarm_siren()
      name = "Scenario7"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down"
      (#Alarm).alarm_siren()
      name = "Scenario8"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_2x"
      (#Alarm).alarm_siren()
      name = "Scenario9"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_3x"
      (#Alarm).alarm_siren()
      name = "Scenario10"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_4x"
      (#Alarm).alarm_siren()
      name = "Scenario11"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_5x"
      (#Alarm).alarm_siren()
      name = "Scenario12"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_6x"
      (#Alarm).alarm_siren()
      name = "Scenario13"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "down_hold"
      (#Alarm).alarm_siren()
      name = "Scenario14"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up"
      (#Alarm).alarm_siren()
      name = "Scenario15"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_2x"
      (#Alarm).alarm_siren()
      name = "Scenario16"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_3x"
      (#Alarm).alarm_siren()
      name = "Scenario17"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_4x"
      (#Alarm).alarm_siren()
      name = "Scenario18"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_5x"
      (#Alarm).alarm_siren()
      name = "Scenario19"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_6x"
      (#Alarm).alarm_siren()
      name = "Scenario20"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "up_hold"
      (#Alarm).alarm_siren()
      name = "Scenario21"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "swipe_up"
      (#Alarm).alarm_siren()
      name = "Scenario22"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "swipe_down"
      (#Alarm).alarm_siren()
      name = "Scenario23"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "swipe_left"
      (#Alarm).alarm_siren()
      name = "Scenario24"
      cron = ""
      period = -1
      wait until(#Buttonx4).buttonx4_button2 == "swipe_right"
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 44.247
    bge_elapsed_time: 0.098
    llm_elapsed_time: 44.096
    validation_elapsed_time: 0.053
- command: 버튼3이 두 번 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: if button 3 is pressed twice, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Buttonx4
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      buttonPressedTwice := false
      if ((#Buttonx4).buttonx4_button3 == "pushed_2x") {
        if (buttonPressedTwice == false) {
          (#Alarm).alarm_siren()
          buttonPressedTwice = true
        }
      } else {
        buttonPressedTwice = false
      }
  model_info:
    elapsed_time: 5.136
    bge_elapsed_time: 0.1
    llm_elapsed_time: 4.984
    validation_elapsed_time: 0.053
- command: 버튼4가 위로 스와이프되었으면 알람의 사이렌을 울려줘.
  command_translated: if button 4 is swiped up, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Buttonx4
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Buttonx4).buttonx4_button4 == "swipe_up"
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.259
    bge_elapsed_time: 0.099
    llm_elapsed_time: 3.107
    validation_elapsed_time: 0.053
- command: 버튼 개수가 4개면 알람의 사이렌을 울려줘.
  command_translated: If the number of buttons is 4, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Buttonx4
  - Blind
  - Alarm
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons == 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.395
    bge_elapsed_time: 0.102
    llm_elapsed_time: 3.236
    validation_elapsed_time: 0.057
- command: 4개짜리 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the button x4 via the speaker.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Recorder
  - Buttonx4
  - ContactSensor
  - Timer
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      supported_values = (#Buttonx4).buttonx4_supportedButtonValues
      (#Speaker).mediaPlayback_speak(supported_values)
  model_info:
    elapsed_time: 3.198
    bge_elapsed_time: 0.101
    llm_elapsed_time: 3.047
    validation_elapsed_time: 0.05
- command: 5와 3을 더해줘.
  command_translated: Add 5 and 3.
  devices:
  - Speaker
  - Feeder
  - Siren
  - Buttonx4
  - Alarm
  - Valve
  - Calculator
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_add(5, 3)
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 3.224
    bge_elapsed_time: 0.092
    llm_elapsed_time: 3.074
    validation_elapsed_time: 0.057
- command: 10을 2로 나눠줘.
  command_translated: Divide 10 by 2.
  devices:
  - Speaker
  - Feeder
  - Buttonx4
  - Fan
  - Valve
  - Calculator
  - Clock
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_div(10.0, 2.0)
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 3.429
    bge_elapsed_time: 0.097
    llm_elapsed_time: 3.275
    validation_elapsed_time: 0.057
- command: 10을 3으로 나눈 나머지를 구해.
  command_translated: Find the remainder of 10 divided by 3.
  devices:
  - Speaker
  - Feeder
  - FallDetector
  - Buttonx4
  - Valve
  - Calculator
  - Clock
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_mod(10.0, 3.0)
      (#Speaker).mediaPlayback_speak("The remainder of 10 divided by 3 is " + result.toString())
  model_info:
    elapsed_time: 3.763
    bge_elapsed_time: 0.1
    llm_elapsed_time: 3.58
    validation_elapsed_time: 0.083
- command: 7과 8을 곱해줘.
  command_translated: Multiply 7 and 8.
  devices:
  - Speaker
  - Feeder
  - Siren
  - Fan
  - Valve
  - Calculator
  - Clock
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_mul(7.0, 8.0)
      (#Speaker).mediaPlayback_speak("The result is " + result.toString())
  model_info:
    elapsed_time: 3.331
    bge_elapsed_time: 0.082
    llm_elapsed_time: 3.168
    validation_elapsed_time: 0.081
- command: 15에서 4를 빼줘.
  command_translated: Subtract 4 from 15.
  devices:
  - Speaker
  - Valve
  - Feeder
  - Buttonx4
  - Curtain
  - Timer
  - Calculator
  - Clock
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 15 - 4
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 3.049
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.907
    validation_elapsed_time: 0.06
- command: 카메라의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the camera is powered on.
  devices:
  - Window
  - Timer
  - Speaker
  - Charger
  - Siren
  - Alarm
  - Camera
  - MotionSensor
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Camera).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.849
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.691
    validation_elapsed_time: 0.057
- command: 가장 최근에 찍은 사진을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.
  command_translated: Send an email with the most recent photo as an attachment to 'test@example.com' with the subject line "Photo" and the content "This is a photo".
  devices:
  - Window
  - DoorLock
  - Speaker
  - EmailProvider
  - LightSensor
  - ContactSensor
  - Camera
  - Clock
  generated_code:
  - name: "SendEmailWithPhoto"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_take()
      image = (#Camera).camera_image
      (#EmailProvider).emailProvider_sendMailWithFile(toAddress: "test@example.com", title: "Photo", text: "This is a photo.", file: image)
  model_info:
    elapsed_time: 4.613
    bge_elapsed_time: 0.109
    llm_elapsed_time: 4.455
    validation_elapsed_time: 0.05
- command: 가장 최근에 찍은 동영상을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '동영상'과 내용 '동영상입니다.'로 보내줘
  command_translated: Send an email with the most recent video as an attachment to 'test@example.com' with the subject line "Video" and the content "This is a video.
  devices:
  - Window
  - DoorLock
  - Speaker
  - EmailProvider
  - Recorder
  - Camera
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse(10, 1)
      video = (#Camera).camera_video
      (#EmailProvider).emailProvider_sendMailWithFile("test@example.com", "Video", "This is a video.", video)
  model_info:
    elapsed_time: 4.755
    bge_elapsed_time: 0.098
    llm_elapsed_time: 4.607
    validation_elapsed_time: 0.05
- command: 카메라를 꺼줘.
  command_translated: Turn off the camera.
  devices:
  - Camera
  - Speaker
  - GasValve
  - Recorder
  - Clock
  - Blind
  - Timer
  - MotionSensor
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_off()
  model_info:
    elapsed_time: 2.242
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.093
    validation_elapsed_time: 0.061
- command: 카메라를 켜줘.
  command_translated: Turn on the camera.
  devices:
  - Camera
  - Speaker
  - Recorder
  - Buttonx4
  - Blind
  - Timer
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_on()
  model_info:
    elapsed_time: 2.369
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.209
    validation_elapsed_time: 0.058
- command: 카메라의 전원을 토글해줘.
  command_translated: Toggle the camera's power.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Buttonx4
  - Blind
  - Camera
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_toggle()
  model_info:
    elapsed_time: 2.322
    bge_elapsed_time: 0.108
    llm_elapsed_time: 2.166
    validation_elapsed_time: 0.049
- command: 카메라로 사진을 찍어줘.
  command_translated: Take a photo with the camera.
  devices:
  - Window
  - Camera
  - Speaker
  - Recorder
  - Charger
  - ContactSensor
  - Blind
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_take()
  model_info:
    elapsed_time: 2.207
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.056
    validation_elapsed_time: 0.055
- command: 카메라로 10초 동안 속도 2로 타임랩스 영상을 촬영해줘.
  command_translated: Take a time-lapse video with the camera at speed 2 for 10 seconds.
  devices:
  - Camera
  - Speaker
  - Recorder
  - Charger
  - Buttonx4
  - Timer
  - Fan
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse(duration: 10.0, speed: 2.0)
  model_info:
    elapsed_time: 2.963
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.815
    validation_elapsed_time: 0.051
- command: 충전기의 전압이 230볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger's voltage is above 230 volts.
  devices:
  - SoundSensor
  - Speaker
  - Charger
  - Siren
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).voltageMeasurement_voltage > 230.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.106
    bge_elapsed_time: 0.1
    llm_elapsed_time: 2.957
    validation_elapsed_time: 0.049
- command: 충전기의 상태가 충전 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the charger's status is charging.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Charger
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).chargingState_chargingState == "charging") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.036
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.886
    validation_elapsed_time: 0.054
- command: 충전기의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger is drawing more than 10 amps.
  devices:
  - SoundSensor
  - Speaker
  - Charger
  - Siren
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).currentMeasurement_current > 10.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.1
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.947
    validation_elapsed_time: 0.054
- command: 충전기가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Annonce the status supported by the charger via the speaker.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Recorder
  - Charger
  - Pump
  - TemperatureSensor
  - ContactSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The charger supports these states: " + (#Charger).chargingState_supportedChargingStates)
  model_info:
    elapsed_time: 3.054
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.908
    validation_elapsed_time: 0.049
- command: 오늘 날짜가 2025년 5월 12일이면 알람의 사이렌을 울려줘.
  command_translated: If today's date is May 12, 2025, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Clock).clock_date == 20250512
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.056
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.902
    validation_elapsed_time: 0.055
- command: 현재 시간이 2025년 5월 12일 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3:15 PM on May 12, 2025, sound the alarm's siren.
  devices:
  - Camera
  - SoundSensor
  - Speaker
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: "15 15 12 5 2025"
    period: -1
    code: |-
      if (clock_clock_datetime == 202505121515) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.893
    bge_elapsed_time: 0.093
    llm_elapsed_time: 3.746
    validation_elapsed_time: 0.053
- command: 오늘이 20일이면 알람의 사이렌을 울려줘
  command_translated: If today is the 20th, sound the alarm siren
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Alarm
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(clock.clock_date == 20250620)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.913
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.763
    validation_elapsed_time: 0.054
- command: 현재 시간이 오후 3시이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3pm, sound the alarm's siren.
  devices:
  - Camera
  - SoundSensor
  - Speaker
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: "0 15 * * *"
    period: -1
    code: |-
      if (clock_hour == 15) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.132
    bge_elapsed_time: 0.092
    llm_elapsed_time: 2.986
    validation_elapsed_time: 0.054
- command: 오늘이 공휴일이면 알람의 사이렌을 울려줘.
  command_translated: If today is a holiday, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Alarm
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if (clock_isHoliday) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.636
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.486
    validation_elapsed_time: 0.054
- command: 지금이 30분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 30 minutes from now, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Calculator
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(clock_clock_delay(1800000))
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.893
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.742
    validation_elapsed_time: 0.057
- command: 지금이 5월이면 알람의 사이렌을 울려줘.
  command_translated: If it's May, sound the alarm siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: "0 0 1 5 *\"  # Run at midnight on May 1st"
    period: -1
    code: |-
      if ((#Clock).clock_month == 5) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.6
    bge_elapsed_time: 0.093
    llm_elapsed_time: 3.454
    validation_elapsed_time: 0.053
- command: 지금이 40초이면 알람의 사이렌을 울려줘.
  command_translated: If it's 40 seconds now, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(clock.clock_second == 40)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.644
    bge_elapsed_time: 0.092
    llm_elapsed_time: 2.499
    validation_elapsed_time: 0.053
- command: 지금이 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 3:15pm, blare the siren on the alarm.
  devices:
  - Window
  - Speaker
  - Siren
  - Blind
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: "0 15 * * *"
    period: -1
    code: |-
      if (clock_time == 1515) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.215
    bge_elapsed_time: 0.093
    llm_elapsed_time: 3.065
    validation_elapsed_time: 0.057
- command: 현재 Unix timestamp가 1747031637.23이면 알람의 사이렌을 울려줘.
  command_translated: If the current Unix timestamp is 1747031637.23, sound the alarm siren.
  devices:
  - Camera
  - SoundSensor
  - Speaker
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_timestamp == 1747031637.23) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.362
    bge_elapsed_time: 0.095
    llm_elapsed_time: 3.213
    validation_elapsed_time: 0.054
- command: 오늘이 금요일이면 알람의 사이렌을 울려줘.
  command_translated: If today is Friday, sound the alarm siren.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(clock_weekday == "friday")
      (#Alarm).alarm_siren()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until(clock_weekday == "friday")
      (#Siren).sirenMode_setSirenMode("siren")
  model_info:
    elapsed_time: 4.436
    bge_elapsed_time: 0.094
    llm_elapsed_time: 4.213
    validation_elapsed_time: 0.129
- command: 올해가 2025년이면 알람의 사이렌을 울려줘.
  command_translated: If the year is 2025, sound the alarm siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_year == 2025) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.917
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.77
    validation_elapsed_time: 0.053
- command: 1시간 20분 30초 뒤에 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren in 1 hour, 20 minutes, 30 seconds
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - ContactSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Clock).clock_delay(ms: 7230000)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.628
    bge_elapsed_time: 0.093
    llm_elapsed_time: 3.482
    validation_elapsed_time: 0.054
- command: 접촉 센서가 접촉되어 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the contact sensor is in contact.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#ContactSensor).contactSensor_contact == "closed")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.732
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.591
    validation_elapsed_time: 0.05
- command: 커튼이 열림 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the curtain is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Curtain
  - Blind
  - Alarm
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.134
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.966
    validation_elapsed_time: 0.075
- command: 커튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the curtain via the speaker.
  devices:
  - Window
  - Speaker
  - Recorder
  - Siren
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The curtain supports these commands: " + (#Curtain).curtain_supportedCurtainCommands)
  model_info:
    elapsed_time: 3.261
    bge_elapsed_time: 0.099
    llm_elapsed_time: 3.105
    validation_elapsed_time: 0.058
- command: 커튼을 닫아줘.
  command_translated: Close the curtain.
  devices:
  - Window
  - Speaker
  - Clock
  - Pump
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_close()
  model_info:
    elapsed_time: 2.425
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.265
    validation_elapsed_time: 0.064
- command: 커튼을 열어줘.
  command_translated: Open the curtain.
  devices:
  - Window
  - Speaker
  - Humidifier
  - Clock
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_open()
  model_info:
    elapsed_time: 2.348
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.186
    validation_elapsed_time: 0.06
- command: 커튼의 움직임을 멈춰줘.
  command_translated: Stop the curtain from moving.
  devices:
  - Window
  - Timer
  - Speaker
  - Clock
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain != "closed" and (#Curtain).curtain_curtain != "closing") {
        (#Curtain).curtain_close()
      }
  model_info:
    elapsed_time: 3.715
    bge_elapsed_time: 0.1
    llm_elapsed_time: 3.537
    validation_elapsed_time: 0.078
- command: 제습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is powered on.
  devices:
  - Speaker
  - AirPurifier
  - Siren
  - Clock
  - HumiditySensor
  - Refrigerator
  - Alarm
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.195
    bge_elapsed_time: 0.097
    llm_elapsed_time: 3.039
    validation_elapsed_time: 0.059
- command: 제습기의 모드가 제습 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is in dehumidifying mode.
  devices:
  - SoundSensor
  - Speaker
  - AirPurifier
  - Siren
  - Clock
  - HumiditySensor
  - Refrigerator
  - Alarm
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).dehumidifierMode_dehumidifierMode == "dehumidifying") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.672
    bge_elapsed_time: 0.114
    llm_elapsed_time: 3.499
    validation_elapsed_time: 0.059
- command: 제습기를 꺼줘.
  command_translated: Turn off the dehumidifier.
  devices:
  - Speaker
  - AirPurifier
  - Clock
  - Pump
  - HumiditySensor
  - Refrigerator
  - Valve
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_off()
  model_info:
    elapsed_time: 2.482
    bge_elapsed_time: 0.107
    llm_elapsed_time: 2.316
    validation_elapsed_time: 0.059
- command: 제습기를 켜줘.
  command_translated: Turn on the dehumidifier.
  devices:
  - Window
  - Speaker
  - AirPurifier
  - Clock
  - Pump
  - HumiditySensor
  - Refrigerator
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_on()
  model_info:
    elapsed_time: 2.489
    bge_elapsed_time: 0.11
    llm_elapsed_time: 2.32
    validation_elapsed_time: 0.059
- command: 제습기의 전원을 토글해줘.
  command_translated: Toggle the dehumidifier's power.
  devices:
  - Speaker
  - SmartPlug
  - AirPurifier
  - Clock
  - Refrigerator
  - Blind
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_toggle()
  model_info:
    elapsed_time: 2.516
    bge_elapsed_time: 0.11
    llm_elapsed_time: 2.348
    validation_elapsed_time: 0.058
- command: 제습기를 냉각 모드로 설정해줘.
  command_translated: Set the dehumidifier to cooling mode.
  devices:
  - AirConditioner
  - Speaker
  - AirPurifier
  - Clock
  - Pump
  - LeakSensor
  - Refrigerator
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).dehumidifierMode_setDehumidifierMode('cooling')
  model_info:
    elapsed_time: 3.07
    bge_elapsed_time: 0.11
    llm_elapsed_time: 2.901
    validation_elapsed_time: 0.059
- command: 식기세척기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the dishwasher is powered on.
  devices:
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Dishwasher
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.089
    bge_elapsed_time: 0.117
    llm_elapsed_time: 2.914
    validation_elapsed_time: 0.057
- command: 식기세척기의 모드가 에코 모드면 알람의 사이렌을 울려줘.
  command_translated: If the dishwasher is in Eco mode, the alarm will sound a siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - Dishwasher
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).dishwasherMode_dishwasherMode == "eco") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.17
    bge_elapsed_time: 0.099
    llm_elapsed_time: 3.014
    validation_elapsed_time: 0.057
- command: 식기세척기를 꺼줘.
  command_translated: Turn off the dishwasher.
  devices:
  - Speaker
  - GasValve
  - Clock
  - Pump
  - Refrigerator
  - Dishwasher
  - Timer
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_off()
  model_info:
    elapsed_time: 2.452
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.299
    validation_elapsed_time: 0.06
- command: 식기세척기를 켜줘.
  command_translated: Turn on the dishwasher.
  devices:
  - Speaker
  - Feeder
  - Clock
  - Pump
  - Refrigerator
  - Dishwasher
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_on()
  model_info:
    elapsed_time: 2.528
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.364
    validation_elapsed_time: 0.057
- command: 식기세척기의 전원을 토글해줘.
  command_translated: Toggle the dishwasher's power.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Buttonx4
  - Dishwasher
  - Blind
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_toggle()
  model_info:
    elapsed_time: 2.376
    bge_elapsed_time: 0.107
    llm_elapsed_time: 2.22
    validation_elapsed_time: 0.05
- command: 식기세척기를 자동 모드로 설정해줘.
  command_translated: Set the dishwasher to automatic mode.
  devices:
  - Speaker
  - RobotCleaner
  - Clock
  - Refrigerator
  - Dishwasher
  - Blind
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).dishwasherMode_setDishwasherMode('auto')
  model_info:
    elapsed_time: 2.806
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.642
    validation_elapsed_time: 0.066
- command: 도어락이 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the door lock is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Curtain
  - Blind
  - Alarm
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#DoorLock).doorControl_door == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.038
    bge_elapsed_time: 0.124
    llm_elapsed_time: 2.84
    validation_elapsed_time: 0.074
- command: 도어락을 닫아줘.
  command_translated: Close the door lock.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Pump
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_close()
  model_info:
    elapsed_time: 2.296
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.141
    validation_elapsed_time: 0.059
- command: 도어락을 열어줘.
  command_translated: Open the door lock.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Pump
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_open()
  model_info:
    elapsed_time: 2.301
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.141
    validation_elapsed_time: 0.059
- command: 이메일을 'test@example.com' 주소로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.
  command_translated: Send an email to 'test@example.com' with the subject line "Alert" and the content "This is an emergency".
  devices:
  - Window
  - DoorLock
  - Speaker
  - GasValve
  - EmailProvider
  - Siren
  - ContactSensor
  - Clock
  generated_code:
  - name: "SendEmailAlert"
    cron: ""
    period: -1
    code: |-
      (#EmailProvider).emailProvider_sendMail(toAddress: "test@example.com", title: "Alert", text: "This is an emergency")
  model_info:
    elapsed_time: 3.063
    bge_elapsed_time: 0.109
    llm_elapsed_time: 2.904
    validation_elapsed_time: 0.051
- command: 선풍기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan is powered on.
  devices:
  - Window
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Alarm
  - Fan
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.955
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.812
    validation_elapsed_time: 0.051
- command: 선풍기의 속도가 2000RPM 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan speed is above 2000 RPM.
  devices:
  - SoundSensor
  - Speaker
  - Charger
  - Siren
  - TemperatureSensor
  - Alarm
  - SmokeDetector
  - Fan
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).fanControl_fanSpeed > 2000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.126
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.979
    validation_elapsed_time: 0.051
- command: 선풍기의 속도를 1500RPM으로 설정해줘.
  command_translated: Set the speed of the fan to 1500 RPM.
  devices:
  - Window
  - Speaker
  - AirPurifier
  - Charger
  - Clock
  - Valve
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setFanSpeed(1500)
  model_info:
    elapsed_time: 2.611
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.455
    validation_elapsed_time: 0.058
- command: 선풍기의 속도를 80퍼센트로 설정해줘.
  command_translated: Set the speed of the fan to 80 percent.
  devices:
  - Window
  - Speaker
  - AirPurifier
  - Charger
  - Shade
  - Clock
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setPercent(80)
  model_info:
    elapsed_time: 2.569
    bge_elapsed_time: 0.107
    llm_elapsed_time: 2.404
    validation_elapsed_time: 0.058
- command: 선풍기를 꺼줘.
  command_translated: Turn off the fan.
  devices:
  - Window
  - Speaker
  - GasValve
  - Valve
  - Clock
  - Timer
  - Fan
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_off()
  model_info:
    elapsed_time: 2.243
    bge_elapsed_time: 0.109
    llm_elapsed_time: 2.075
    validation_elapsed_time: 0.059
- command: 선풍기를 켜줘.
  command_translated: Turn on the fan.
  devices:
  - Speaker
  - Valve
  - Clock
  - Timer
  - Fan
  - Dehumidifier
  - Humidifier
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_on()
  model_info:
    elapsed_time: 2.286
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.128
    validation_elapsed_time: 0.059
- command: 선풍기의 전원을 토글해줘.
  command_translated: Toggle the fan's power.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Buttonx4
  - Blind
  - Fan
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_toggle()
  model_info:
    elapsed_time: 2.292
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.145
    validation_elapsed_time: 0.048
- command: 사료 공급기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the feeder is powered on.
  devices:
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - Charger
  - Siren
  - Alarm
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.062
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.899
    validation_elapsed_time: 0.067
- command: 사료 공급기의 상태가 급식 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the feeder's status is feeding.
  devices:
  - Window
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - Siren
  - LeakSensor
  - Alarm
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).feederOperatingState_feederOperatingState == "feeding") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.317
    bge_elapsed_time: 0.125
    llm_elapsed_time: 3.126
    validation_elapsed_time: 0.065
- command: 사료 공급기를 꺼줘.
  command_translated: Turn off the feeder.
  devices:
  - Speaker
  - RobotCleaner
  - GasValve
  - Recorder
  - AirPurifier
  - Feeder
  - Clock
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_off()
  model_info:
    elapsed_time: 2.504
    bge_elapsed_time: 0.116
    llm_elapsed_time: 2.326
    validation_elapsed_time: 0.063
- command: 사료 공급기를 켜줘.
  command_translated: Turn on the feeder.
  devices:
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Pump
  - Clock
  - Relay
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  model_info:
    elapsed_time: 2.477
    bge_elapsed_time: 0.129
    llm_elapsed_time: 2.284
    validation_elapsed_time: 0.064
- command: 사료 공급기의 전원을 토글해줘.
  command_translated: Toggle the power of the feeder.
  devices:
  - Speaker
  - RobotCleaner
  - Recorder
  - SmartPlug
  - Feeder
  - Charger
  - AirPurifier
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_toggle()
  model_info:
    elapsed_time: 2.392
    bge_elapsed_time: 0.117
    llm_elapsed_time: 2.218
    validation_elapsed_time: 0.058
- command: 사료 공급기의 사료 공급량을 100그램으로 설정해줘.
  command_translated: Set the feeder's feed amount to 100 grams.
  devices:
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Blind
  - Clock
  - Humidifier
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).feederPortion_setFeedPortion(100.0, 'grams')
  model_info:
    elapsed_time: 3.053
    bge_elapsed_time: 0.113
    llm_elapsed_time: 2.874
    validation_elapsed_time: 0.066
- command: 사료 공급기의 사료 공급을 시작해줘.
  command_translated: Start feeding the feeder.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - AirPurifier
  - Clock
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).feederOperatingState_startFeeding()
  model_info:
    elapsed_time: 2.685
    bge_elapsed_time: 0.111
    llm_elapsed_time: 2.51
    validation_elapsed_time: 0.064
- command: 가스 미터의 가스 사용량이 500kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter shows gas usage of 500 kWh or more.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Charger
  - Siren
  - Clock
  - LeakSensor
  - Alarm
  - HumiditySensor
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#GasMeter).gasMeter_gasMeter >= 500.0
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.986
    bge_elapsed_time: 0.108
    llm_elapsed_time: 2.828
    validation_elapsed_time: 0.05
- command: 가스 미터의 가스 발열량이 1000kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter reads more than 1000 kcal of gas.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - TemperatureSensor
  - Alarm
  - SmokeDetector
  - HumiditySensor
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeterCalorific > 1000.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.224
    bge_elapsed_time: 0.101
    llm_elapsed_time: 3.072
    validation_elapsed_time: 0.051
- command: 가스 미터의 누적 가스 사용 시간이 10000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the siren of the alarm if the gas meter has a cumulative gas usage time of 10000 seconds or more.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - HumiditySensor
  - Alarm
  - Timer
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeterTime >= 10000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.127
    bge_elapsed_time: 0.1
    llm_elapsed_time: 2.973
    validation_elapsed_time: 0.054
- command: 가스 미터의 가스 사용량이 20세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas meter reads more than 20 cubic meters of gas.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - LeakSensor
  - TemperatureSensor
  - Alarm
  - HumiditySensor
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#GasMeter).gasMeter_gasMeterVolume > 20.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.989
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.837
    validation_elapsed_time: 0.05
- command: 가스 밸브가 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - GasValve
  - Siren
  - Clock
  - Pump
  - Blind
  - Alarm
  - Valve
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).valve_valve == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.161
    bge_elapsed_time: 0.099
    llm_elapsed_time: 3.003
    validation_elapsed_time: 0.06
- command: 가스 밸브를 닫아줘.
  command_translated: Close the gas valve.
  devices:
  - Window
  - Speaker
  - GasValve
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  - GasMeter
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 2.427
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.271
    validation_elapsed_time: 0.054
- command: 가스 밸브를 열어줘.
  command_translated: Open the gas valve.
  devices:
  - Window
  - Speaker
  - GasValve
  - AirPurifier
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  - GasMeter
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_open()
  model_info:
    elapsed_time: 2.467
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.312
    validation_elapsed_time: 0.057
- command: 가스 밸브의 가스 사용량이 1000kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve's gas usage is over 1000 kWh.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Charger
  - Siren
  - Clock
  - Pump
  - LeakSensor
  - Alarm
  - Valve
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#GasMeter).gasMeter_gasMeter > 1000.0)
      (#Alarm).alarm_siren()
  - name: "Scenario2"
    cron: ""
    period: 10000
    code: |-
      (#GasMeter).gasMeter_gasMeter = 0.0
  model_info:
    elapsed_time: 4.708
    bge_elapsed_time: 0.111
    llm_elapsed_time: 4.42
    validation_elapsed_time: 0.177
- command: 가스 밸브의 가스 발열량이 500kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a gas calorific value of 500 kcal or more.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - TemperatureSensor
  - Alarm
  - SmokeDetector
  - Valve
  - Fan
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterCalorific >= 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.323
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.184
    validation_elapsed_time: 0.051
- command: 가스 밸브의 누적 가스 사용 시간이 5000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a cumulative gas usage time of 5000 seconds or more.
  devices:
  - Timer
  - Camera
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - Alarm
  - Valve
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterTime >= 5000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.211
    bge_elapsed_time: 0.1
    llm_elapsed_time: 3.053
    validation_elapsed_time: 0.058
- command: 가스 밸브의 가스 사용량이 34세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is using more than 34 cubic meters of gas.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Siren
  - Clock
  - Pump
  - LeakSensor
  - HumiditySensor
  - Alarm
  - Valve
  - GasMeter
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#GasMeter).gasMeter_gasMeterVolume > 34.0)
      (#Alarm).alarm_siren()
  - name: "Scenario2"
    cron: ""
    period: 10000
    code: |-
      if (all(#GasMeter).gasMeter_gasMeterVolume > 34.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 5.157
    bge_elapsed_time: 0.102
    llm_elapsed_time: 4.927
    validation_elapsed_time: 0.128
- command: 가습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier is powered on.
  devices:
  - Speaker
  - AirPurifier
  - Siren
  - Clock
  - WeatherProvider
  - Alarm
  - Dehumidifier
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.09
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.93
    validation_elapsed_time: 0.058
- command: 가습기의 모드가 자동이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier's mode is Auto.
  devices:
  - Speaker
  - AirPurifier
  - Siren
  - Clock
  - WeatherProvider
  - Alarm
  - Dehumidifier
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).humidifierMode_humidifierMode == "auto") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.416
    bge_elapsed_time: 0.121
    llm_elapsed_time: 3.236
    validation_elapsed_time: 0.058
- command: 가습기를 꺼줘.
  command_translated: Turn off the humidifier.
  devices:
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - WeatherProvider
  - HumiditySensor
  - SoilMoistureSensor
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_off()
  model_info:
    elapsed_time: 2.458
    bge_elapsed_time: 0.119
    llm_elapsed_time: 2.236
    validation_elapsed_time: 0.103
- command: 가습기를 켜줘.
  command_translated: Turn on the humidifier.
  devices:
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - WeatherProvider
  - HumiditySensor
  - SoilMoistureSensor
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_on()
  model_info:
    elapsed_time: 2.42
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.235
    validation_elapsed_time: 0.102
- command: 가습기의 전원을 토글해줘.
  command_translated: Toggle the humidifier's power.
  devices:
  - Speaker
  - AirPurifier
  - Clock
  - WeatherProvider
  - HumiditySensor
  - SoilMoistureSensor
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_toggle()
  model_info:
    elapsed_time: 2.302
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.163
    validation_elapsed_time: 0.055
- command: 가습기를 강 모드로 설정해줘.
  command_translated: Set the humidifier to strong mode.
  devices:
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Clock
  - WeatherProvider
  - HumiditySensor
  - SoilMoistureSensor
  - Dehumidifier
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).humidifierMode_setHumidifierMode('high')
  model_info:
    elapsed_time: 2.807
    bge_elapsed_time: 0.111
    llm_elapsed_time: 2.595
    validation_elapsed_time: 0.101
- command: 습도 센서의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity sensor reads a relative humidity of 70 percent or higher.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.149
    bge_elapsed_time: 0.089
    llm_elapsed_time: 3.009
    validation_elapsed_time: 0.051
- command: 관개 장치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator is powered on.
  devices:
  - Speaker
  - SmartPlug
  - Siren
  - Pump
  - LeakSensor
  - Refrigerator
  - Alarm
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Irrigator).switch_switch == "on"
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(#Irrigator).switch_switch == "off"
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.452
    bge_elapsed_time: 0.11
    llm_elapsed_time: 4.245
    validation_elapsed_time: 0.097
- command: 관개 장치의 급수량이 3리터이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator has 3 liters of water.
  devices:
  - Speaker
  - Feeder
  - Siren
  - Pump
  - LeakSensor
  - Refrigerator
  - Alarm
  - Clock
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).irrigatorPortion_waterPortion >= 3.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.529
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.383
    validation_elapsed_time: 0.059
- command: 관개 장치의 상태가 급수 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator's status is watering.
  devices:
  - Window
  - Speaker
  - Feeder
  - Siren
  - Pump
  - LeakSensor
  - Refrigerator
  - Alarm
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Irrigator).irrigatorOperatingState_irrigatorOperatingState == "watering"
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(#Irrigator).irrigatorOperatingState_irrigatorOperatingState != "watering"
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 5.215
    bge_elapsed_time: 0.112
    llm_elapsed_time: 5.045
    validation_elapsed_time: 0.059
- command: 관개 장치를 꺼줘.
  command_translated: Turn off the irrigator.
  devices:
  - Speaker
  - Clock
  - Pump
  - LeakSensor
  - Refrigerator
  - Valve
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_off()
  model_info:
    elapsed_time: 2.445
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.281
    validation_elapsed_time: 0.058
- command: 관개 장치를 켜줘.
  command_translated: Turn on the irrigator.
  devices:
  - Speaker
  - Feeder
  - Clock
  - Pump
  - LeakSensor
  - Refrigerator
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 2.508
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.347
    validation_elapsed_time: 0.057
- command: 관개 장치의 전원을 토글해줘.
  command_translated: Toggle the power of the irrigator.
  devices:
  - Speaker
  - SmartPlug
  - Charger
  - Pump
  - Refrigerator
  - Clock
  - Humidifier
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_toggle()
  model_info:
    elapsed_time: 2.452
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.292
    validation_elapsed_time: 0.054
- command: 관개 장치의 급수량을 5리터로 설정해줘.
  command_translated: Set the water supply of the irrigator to 5 liters.
  devices:
  - Speaker
  - Feeder
  - Clock
  - Pump
  - LeakSensor
  - Refrigerator
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).irrigatorPortion_setWaterPortion(5.0, 'liters')
  model_info:
    elapsed_time: 3.139
    bge_elapsed_time: 0.108
    llm_elapsed_time: 2.974
    validation_elapsed_time: 0.057
- command: 관개 장치의 급수를 시작해줘.
  command_translated: Start watering the irrigator.
  devices:
  - Speaker
  - Feeder
  - Clock
  - Pump
  - LeakSensor
  - Refrigerator
  - Dehumidifier
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).irrigatorOperatingState_startWatering()
  model_info:
    elapsed_time: 2.811
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.629
    validation_elapsed_time: 0.078
- command: 누수가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a leak is detected.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - ContactSensor
  - Alarm
  - SmokeDetector
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#LeakSensor).leakSensor_leakage == "detected")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.598
    bge_elapsed_time: 0.327
    llm_elapsed_time: 3.208
    validation_elapsed_time: 0.063
- command: 조명이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light is on.
  devices:
  - Window
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - Blind
  - Alarm
  - Timer
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.458
    bge_elapsed_time: 0.15
    llm_elapsed_time: 3.223
    validation_elapsed_time: 0.085
- command: 조명의 색조가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a hue of 30, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - LightSensor
  - Siren
  - FallDetector
  - Clock
  - WeatherProvider
  - Blind
  - Alarm
  - Light
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_hue == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.634
    bge_elapsed_time: 0.184
    llm_elapsed_time: 3.336
    validation_elapsed_time: 0.114
- command: 조명의 채도가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a saturation of 30, sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - LightSensor
  - Charger
  - Siren
  - Clock
  - LeakSensor
  - Alarm
  - Timer
  - Light
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_saturation == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.267
    bge_elapsed_time: 0.242
    llm_elapsed_time: 2.963
    validation_elapsed_time: 0.062
- command: 조명 밝기가 100이면 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren if the light brightness is 100
  devices:
  - SoundSensor
  - Speaker
  - LightSensor
  - Siren
  - FallDetector
  - Clock
  - Blind
  - Alarm
  - SmokeDetector
  - Light
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_color == 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.273
    bge_elapsed_time: 0.1
    llm_elapsed_time: 3.082
    validation_elapsed_time: 0.091
- command: 조명을 빨간색으로 설정해줘.
  command_translated: Set the light to red.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - Blind
  - Alarm
  - Light
  - Shade
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setColor("RED")
  model_info:
    elapsed_time: 2.652
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.486
    validation_elapsed_time: 0.062
- command: 조명의 색조를 70으로 설정해줘.
  command_translated: Set the hue of the light to 70.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - WeatherProvider
  - Blind
  - Alarm
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setHue(70.0)
  model_info:
    elapsed_time: 2.856
    bge_elapsed_time: 0.129
    llm_elapsed_time: 2.63
    validation_elapsed_time: 0.097
- command: 조명의 채도를 90으로 설정해줘.
  command_translated: Set the saturation of the light to 90.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - WeatherProvider
  - Blind
  - Alarm
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setSaturation(90.0)
  model_info:
    elapsed_time: 2.754
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.573
    validation_elapsed_time: 0.097
- command: 5의 속도로 조명의 밝기를 80으로 설정해줘.
  command_translated: Set the brightness of the light to 80 with a speed of 5.
  devices:
  - Speaker
  - LightSensor
  - Charger
  - Siren
  - Clock
  - Alarm
  - Fan
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switchLevel_setLevel(level: 80, rate: 5)
  model_info:
    elapsed_time: 2.863
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.686
    validation_elapsed_time: 0.093
- command: 조명의 경고 모드를 켜줘.
  command_translated: Turn on alert mode for lights.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - FallDetector
  - Clock
  - Blind
  - Alarm
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).sirenMode_setSirenMode('alert')
  model_info:
    elapsed_time: 2.469
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.305
    validation_elapsed_time: 0.081
- command: 조명을 꺼줘.
  command_translated: Turn off the lights.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - Blind
  - Alarm
  - Dehumidifier
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_off()
  model_info:
    elapsed_time: 2.317
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.175
    validation_elapsed_time: 0.06
- command: 조명을 켜줘.
  command_translated: Turn on the lights.
  devices:
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - Buttonx4
  - Blind
  - Alarm
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_on()
  model_info:
    elapsed_time: 2.411
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.228
    validation_elapsed_time: 0.085
- command: 조명의 전원을 토글해줘.
  command_translated: Toggle the power of the light.
  devices:
  - Speaker
  - LightSensor
  - SmartPlug
  - Charger
  - Siren
  - Clock
  - Alarm
  - Light
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_toggle()
  model_info:
    elapsed_time: 2.258
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.123
    validation_elapsed_time: 0.053
- command: 조도 센서의 밝기 값이 500룩스 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light sensor's brightness value is above 500 lux.
  devices:
  - OccupancySensor
  - SoundSensor
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - TemperatureSensor
  - LeakSensor
  - HumiditySensor
  - Alarm
  - Light
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#LightSensor).lightLevel_light > 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.1
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.944
    validation_elapsed_time: 0.054
- command: 오늘 학생식당 점심 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's 학생식당 lunch menu via the speaker.
  devices:
  - Speaker
  - Recorder
  - Feeder
  - Dishwasher
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("Today's 학생식당 lunch menu is " + (#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 3.117
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.957
    validation_elapsed_time: 0.057
- command: 오늘의 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's menu via the speaker.
  devices:
  - Speaker
  - Recorder
  - Feeder
  - Buttonx4
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 2.677
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.532
    validation_elapsed_time: 0.054
- command: 오늘의 식당을 스피커로 출력해줘.
  command_translated: Announce today's restaurant via the speaker.
  devices:
  - Speaker
  - Recorder
  - Feeder
  - Pump
  - Timer
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 2.665
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.513
    validation_elapsed_time: 0.058
- command: 모션 센서가 활성 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the motion sensor is active.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#MotionSensor).motionSensor_motion == "active")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.895
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.75
    validation_elapsed_time: 0.05
- command: 움직임이 감지되고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if motion is detected.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - ContactSensor
  - Alarm
  - SmokeDetector
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#MotionSensor).motionSensor_motion == "active"
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.685
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.542
    validation_elapsed_time: 0.05
- command: 존재 감지 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a presence sensor is detected.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#PresenceSensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.696
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.553
    validation_elapsed_time: 0.049
- command: 펌프의 현재 동작 모드가 최대이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the pump's current operating mode is maximum.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Pump
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_currentOperationMode == "maximum") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.024
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.877
    validation_elapsed_time: 0.052
- command: 펌프의 설정 동작 모드가 기본이면 알람의 사이렌을 울려줘.
  command_translated: If the pump's set operation mode is default, sound the alarm's siren.
  devices:
  - Timer
  - SoundSensor
  - Speaker
  - Siren
  - Pump
  - LeakSensor
  - Alarm
  - Valve
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_operationMode == "default") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.151
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.991
    validation_elapsed_time: 0.059
- command: 펌프의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the pump is powered on.
  devices:
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Pump
  - LeakSensor
  - Alarm
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.033
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.883
    validation_elapsed_time: 0.054
- command: 펌프가 지원하는 모드를 스피커로 출력해줘.
  command_translated: Announce the modes supported by the pump via the speaker.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Pump
  - LeakSensor
  - ContactSensor
  - Valve
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_supportedOperationModes != "") {
        (#Speaker).mediaPlayback_speak("The pump supports these operation modes: " + (#Pump).pumpOperationMode_supportedOperationModes)
      }
  model_info:
    elapsed_time: 3.836
    bge_elapsed_time: 0.109
    llm_elapsed_time: 3.678
    validation_elapsed_time: 0.05
- command: 펌프가 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the pump is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Blind
  - Alarm
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pump_pump == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.12
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.95
    validation_elapsed_time: 0.075
- command: 펌프의 동작 모드를 최대로 설정해줘.
  command_translated: Set the pump's operation mode to maximum.
  devices:
  - Speaker
  - Buttonx4
  - Pump
  - Blind
  - Valve
  - Calculator
  - Clock
  - Humidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pumpOperationMode_setOperationMode('maximum')
  model_info:
    elapsed_time: 2.722
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.563
    validation_elapsed_time: 0.057
- command: 펌프를 꺼줘.
  command_translated: Turn off the pump.
  devices:
  - Timer
  - Speaker
  - GasValve
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_off()
  model_info:
    elapsed_time: 2.348
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.19
    validation_elapsed_time: 0.057
- command: 펌프를 켜줘.
  command_translated: Turn on the pump.
  devices:
  - Speaker
  - Clock
  - Pump
  - LeakSensor
  - Valve
  - Dehumidifier
  - Humidifier
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_on()
  model_info:
    elapsed_time: 2.33
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.178
    validation_elapsed_time: 0.054
- command: 펌프의 전원을 토글해줘.
  command_translated: Toggle the power of the pump.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Pump
  - Valve
  - Clock
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_toggle()
  model_info:
    elapsed_time: 2.267
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.118
    validation_elapsed_time: 0.05
- command: 펌프를 닫아줘.
  command_translated: Close the pump.
  devices:
  - Timer
  - Speaker
  - Clock
  - Pump
  - Blind
  - Valve
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pump_close()
  model_info:
    elapsed_time: 2.386
    bge_elapsed_time: 0.092
    llm_elapsed_time: 2.233
    validation_elapsed_time: 0.06
- command: 펌프를 열어줘.
  command_translated: Open the pump.
  devices:
  - Speaker
  - Clock
  - Pump
  - LeakSensor
  - Blind
  - Valve
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_on()
  model_info:
    elapsed_time: 2.277
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.122
    validation_elapsed_time: 0.059
- command: 냉장고의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the refrigerator is powered on.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Refrigerator
  - Alarm
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.137
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.984
    validation_elapsed_time: 0.055
- command: 냉장고의 성에 제거 기능이 켜저 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's defrost function is on.
  devices:
  - Speaker
  - Siren
  - Clock
  - FallDetector
  - TemperatureSensor
  - Refrigerator
  - Alarm
  - Dehumidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_defrost == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.191
    bge_elapsed_time: 0.107
    llm_elapsed_time: 3.027
    validation_elapsed_time: 0.057
- command: 냉장고의 급속 냉각 기능이 꺼져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's rapid cooling function is turned off.
  devices:
  - AirConditioner
  - Speaker
  - Feeder
  - Siren
  - LeakSensor
  - Refrigerator
  - Alarm
  - Timer
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_rapidCooling == "off") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.487
    bge_elapsed_time: 0.134
    llm_elapsed_time: 3.29
    validation_elapsed_time: 0.064
- command: 냉장고의 급속 냉동 기능이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the refrigerator's rapid freezing function is on.
  devices:
  - Window
  - Speaker
  - FallDetector
  - Siren
  - TemperatureSensor
  - Refrigerator
  - Alarm
  - Timer
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_rapidFreezing == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.287
    bge_elapsed_time: 0.113
    llm_elapsed_time: 3.115
    validation_elapsed_time: 0.059
- command: 냉장고를 꺼줘.
  command_translated: Turn off the refrigerator.
  devices:
  - Speaker
  - GasValve
  - Feeder
  - Clock
  - Refrigerator
  - Dehumidifier
  - Humidifier
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_off()
  model_info:
    elapsed_time: 2.513
    bge_elapsed_time: 0.105
    llm_elapsed_time: 2.35
    validation_elapsed_time: 0.058
- command: 냉장고의 전원을 토글해줘.
  command_translated: Toggle the refrigerator's power.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Feeder
  - Charger
  - Refrigerator
  - Clock
  - Relay
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_toggle()
  model_info:
    elapsed_time: 2.419
    bge_elapsed_time: 0.105
    llm_elapsed_time: 2.263
    validation_elapsed_time: 0.052
- command: 냉장고의 성에 제거 기능을 켜줘.
  command_translated: Turn on the refrigerator's defrost function.
  devices:
  - Window
  - Speaker
  - Feeder
  - Clock
  - Dishwasher
  - Refrigerator
  - Valve
  - Dehumidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setDefrost("on")
  model_info:
    elapsed_time: 2.674
    bge_elapsed_time: 0.102
    llm_elapsed_time: 2.515
    validation_elapsed_time: 0.057
- command: 냉장고의 급속 냉각 기능을 켜줘.
  command_translated: Turn on the refrigerator's rapid cooling function.
  devices:
  - AirConditioner
  - Window
  - Speaker
  - Feeder
  - Clock
  - Refrigerator
  - Fan
  - Dehumidifier
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setRapidCooling("on")
  model_info:
    elapsed_time: 2.851
    bge_elapsed_time: 0.1
    llm_elapsed_time: 2.692
    validation_elapsed_time: 0.059
- command: 냉장고의 급속 냉동 기능을 꺼줘.
  command_translated: Turn off the refrigerator's rapid freezing function.
  devices:
  - Speaker
  - GasValve
  - Clock
  - Refrigerator
  - Valve
  - Fan
  - Dehumidifier
  - Relay
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setRapidFreezing("off")
  model_info:
    elapsed_time: 2.756
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.593
    validation_elapsed_time: 0.059
- command: 로봇 청소기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the robot vacuum is powered on.
  devices:
  - SoundSensor
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Charger
  - Siren
  - Pump
  - Alarm
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#RobotCleaner).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.064
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.899
    validation_elapsed_time: 0.062
- command: 로봇 청소기가 자동 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the robot vacuum is in automatic mode.
  devices:
  - SoundSensor
  - Speaker
  - RobotCleaner
  - Valve
  - Siren
  - Alarm
  - Timer
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#RobotCleaner).robotCleanerCleaningMode_robotCleanerCleaningMode == "auto") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.42
    bge_elapsed_time: 0.128
    llm_elapsed_time: 3.215
    validation_elapsed_time: 0.077
- command: 로봇 청소기를 꺼줘.
  command_translated: Turn off the robot vacuum.
  devices:
  - Speaker
  - RobotCleaner
  - GasValve
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_off()
  model_info:
    elapsed_time: 2.424
    bge_elapsed_time: 0.115
    llm_elapsed_time: 2.206
    validation_elapsed_time: 0.103
- command: 로봇 청소기를 켜줘.
  command_translated: Turn on the robot vacuum.
  devices:
  - Speaker
  - RobotCleaner
  - AirPurifier
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_on()
  model_info:
    elapsed_time: 2.437
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.248
    validation_elapsed_time: 0.107
- command: 로봇 청소기의 전원을 토글해줘.
  command_translated: Toggle the robot vacuum's power.
  devices:
  - Switch
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Blind
  - Valve
  - Clock
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).robotCleanerCleaningMode_setRobotCleanerCleaningMode('stop')
      (#RobotCleaner).switch_toggle()
  model_info:
    elapsed_time: 3.078
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.877
    validation_elapsed_time: 0.118
- command: 로봇 청소기의 청소 모드를 수동으로 설정해줘.
  command_translated: Set the robot vacuum's cleaning mode to manual.
  devices:
  - Switch
  - Speaker
  - RobotCleaner
  - Clock
  - Pump
  - Dishwasher
  - Blind
  - Valve
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).robotCleanerCleaningMode_setRobotCleanerCleaningMode('manual')
  model_info:
    elapsed_time: 2.837
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.645
    validation_elapsed_time: 0.109
- command: 쉐이드가 40퍼센트 이상 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is more than 40% open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Curtain
  - Blind
  - Alarm
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel > 40) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.248
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.089
    validation_elapsed_time: 0.074
- command: 쉐이드가 완전히 열려 있는 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is fully open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Blind
  - Alarm
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel == 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.288
    bge_elapsed_time: 0.104
    llm_elapsed_time: 3.11
    validation_elapsed_time: 0.074
- command: 쉐이드가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the shade via the speaker.
  devices:
  - Window
  - Speaker
  - Siren
  - FallDetector
  - ContactSensor
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#Shade.windowShade_supportedWindowShadeCommands)
  model_info:
    elapsed_time: 2.725
    bge_elapsed_time: 0.104
    llm_elapsed_time: 2.568
    validation_elapsed_time: 0.053
- command: 쉐이드를 50퍼 센트로 설정해줘.
  command_translated: Set the shade to 50 percent.
  devices:
  - Speaker
  - Humidifier
  - Clock
  - Curtain
  - Blind
  - Dehumidifier
  - Fan
  - Light
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(50)
  model_info:
    elapsed_time: 2.821
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.665
    validation_elapsed_time: 0.063
- command: 쉐이드를 닫아줘.
  command_translated: Close the shade.
  devices:
  - Window
  - Speaker
  - Humidifier
  - Clock
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(0)
  model_info:
    elapsed_time: 2.562
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.399
    validation_elapsed_time: 0.059
- command: 쉐이드를 열어줘.
  command_translated: Open the shade.
  devices:
  - Window
  - Speaker
  - Humidifier
  - Clock
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(100)
  model_info:
    elapsed_time: 2.631
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.475
    validation_elapsed_time: 0.059
- command: 쉐이드 움직임을 일시 중지해줘.
  command_translated: Pause the shade movement.
  devices:
  - Speaker
  - FallDetector
  - Clock
  - Curtain
  - Blind
  - Timer
  - MotionSensor
  - Dehumidifier
  - Shade
  generated_code:
  - name: "PauseShadeMovement"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShade_pause()
  model_info:
    elapsed_time: 2.403
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.244
    validation_elapsed_time: 0.063
- command: 사이렌이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the siren is on.
  devices:
  - Window
  - DoorLock
  - Speaker
  - SoundSensor
  - Siren
  - Blind
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Siren).switch_switch == "on") {
        (#Siren).alarm_siren()
      }
  model_info:
    elapsed_time: 2.942
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.786
    validation_elapsed_time: 0.058
- command: 사이렌 모드가 사이렌이면 알람의 사이렌을 울려줘.
  command_translated: If the siren mode is Siren, sound the alarm's siren.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Siren
  - Blind
  - Alarm
  - Timer
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Siren).sirenMode_sirenMode == "siren") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.12
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.966
    validation_elapsed_time: 0.057
- command: 사이렌을 꺼줘.
  command_translated: Turn off the siren.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
  model_info:
    elapsed_time: 2.235
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.088
    validation_elapsed_time: 0.054
- command: 사이렌을 켜줘.
  command_translated: Turn on the siren.
  devices:
  - Speaker
  - Valve
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
  model_info:
    elapsed_time: 2.239
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.096
    validation_elapsed_time: 0.054
- command: 사이렌 전원을 토글해줘.
  command_translated: Toggle the siren power.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Alarm
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_toggle()
  model_info:
    elapsed_time: 2.289
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.15
    validation_elapsed_time: 0.049
- command: 사이렌 모드를 경광등으로 설정해줘.
  command_translated: Set the siren mode to strobe.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Blind
  - Alarm
  - Timer
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.665
    bge_elapsed_time: 0.092
    llm_elapsed_time: 2.514
    validation_elapsed_time: 0.059
- command: 스마트 플러그의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is powered on.
  devices:
  - DoorLock
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.014
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.844
    validation_elapsed_time: 0.071
- command: 스마트 플러그의 전압이 220볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is over 220 volts.
  devices:
  - DoorLock
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).voltageMeasurement_voltage > 220.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.283
    bge_elapsed_time: 0.12
    llm_elapsed_time: 3.091
    validation_elapsed_time: 0.072
- command: 스마트 플러그의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is drawing more than 10 amps.
  devices:
  - DoorLock
  - Speaker
  - SoundSensor
  - RobotCleaner
  - SmartPlug
  - Siren
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).currentMeasurement_current > 10.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.211
    bge_elapsed_time: 0.121
    llm_elapsed_time: 3.018
    validation_elapsed_time: 0.072
- command: 스마트 플러그의 소비 전력이 1000와트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if a smart plug draws more than 1000 watts.
  devices:
  - DoorLock
  - Speaker
  - SoundSensor
  - RobotCleaner
  - SmartPlug
  - Siren
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if (any(#SmartPlug).powerMeter_power > 1000.0) {
        all(#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.379
    bge_elapsed_time: 0.11
    llm_elapsed_time: 3.197
    validation_elapsed_time: 0.072
- command: 스마트 플러그를 꺼줘.
  command_translated: Turn off the smart plug.
  devices:
  - DoorLock
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Refrigerator
  - Timer
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_off()
  model_info:
    elapsed_time: 2.496
    bge_elapsed_time: 0.118
    llm_elapsed_time: 2.279
    validation_elapsed_time: 0.099
- command: 스마트 플러그를 켜줘.
  command_translated: Turn on the smart plug.
  devices:
  - DoorLock
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Refrigerator
  - Timer
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_on()
  model_info:
    elapsed_time: 2.494
    bge_elapsed_time: 0.113
    llm_elapsed_time: 2.287
    validation_elapsed_time: 0.094
- command: 스마트 플러그의 전원을 토글해줘.
  command_translated: Toggle the power of the smart plug.
  devices:
  - Switch
  - DoorLock
  - Speaker
  - RobotCleaner
  - SmartPlug
  - Charger
  - Clock
  - Television
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_toggle()
  model_info:
    elapsed_time: 2.305
    bge_elapsed_time: 0.116
    llm_elapsed_time: 2.121
    validation_elapsed_time: 0.068
- command: 연기 감지기에서 연기가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if smoke is detected by the smoke detector.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - FallDetector
  - LeakSensor
  - Alarm
  - SmokeDetector
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SmokeDetector).smokeDetector_smoke == "detected")
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until((#SmokeDetector).smokeDetector_smoke == "clear")
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.412
    bge_elapsed_time: 0.12
    llm_elapsed_time: 4.207
    validation_elapsed_time: 0.084
- command: 토양 습도 센서의 토양 습도 측정값이 30퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the soil moisture sensor's soil moisture reading is 30 percent or less.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Clock
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - SoilMoistureSensor
  - HumiditySensor
  - MotionSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.253
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.115
    validation_elapsed_time: 0.05
- command: 소리 센서에서 소리가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if sound is detected by the sound sensor.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - LeakSensor
  - TemperatureSensor
  - ContactSensor
  - Alarm
  - SmokeDetector
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoundSensor).soundSensor_sound == "detected")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.809
    bge_elapsed_time: 0.109
    llm_elapsed_time: 2.651
    validation_elapsed_time: 0.05
- command: 소리 감지 레벨이 70dB 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the sound detection level is above 70 dB.
  devices:
  - SoundSensor
  - Speaker
  - LightSensor
  - Siren
  - Clock
  - TemperatureSensor
  - Blind
  - Alarm
  - HumiditySensor
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoundSensor).soundPressureLevel_soundPressureLevel > 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.155
    bge_elapsed_time: 0.096
    llm_elapsed_time: 3.003
    validation_elapsed_time: 0.057
- command: 스피커의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is powered on.
  devices:
  - SoundSensor
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.968
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.809
    validation_elapsed_time: 0.054
- command: 스피커가 재생 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is playing.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - PresenceSensor
  - Recorder
  - Siren
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Speaker).mediaPlayback_playbackStatus == "playing")
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until((#Speaker).mediaPlayback_playbackStatus != "playing")
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.341
    bge_elapsed_time: 0.114
    llm_elapsed_time: 4.173
    validation_elapsed_time: 0.054
- command: 스피커가 지원하는 명령어를 스피커로 출력해줘.
  command_translated: Announce commands that the speaker supports via the speaker.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Buttonx4
  - ContactSensor
  - Blind
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The speaker supports commands like pause, play, fast forward, rewind, speak, stop.")
  model_info:
    elapsed_time: 3.115
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.973
    validation_elapsed_time: 0.049
- command: 스피커를 꺼줘.
  command_translated: Turn off the speaker.
  devices:
  - SoundSensor
  - Speaker
  - GasValve
  - Recorder
  - Valve
  - Clock
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 2.223
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.076
    validation_elapsed_time: 0.056
- command: 스피커를 켜줘.
  command_translated: Turn on the speaker.
  devices:
  - Timer
  - SoundSensor
  - Speaker
  - Recorder
  - Blind
  - Valve
  - Clock
  - Irrigator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_on()
  model_info:
    elapsed_time: 2.232
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.078
    validation_elapsed_time: 0.058
- command: 스피커의 전원을 토글해줘.
  command_translated: Toggle the power of the speaker.
  devices:
  - Switch
  - Speaker
  - Recorder
  - SmartPlug
  - Charger
  - Blind
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_toggle()
  model_info:
    elapsed_time: 2.218
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.072
    validation_elapsed_time: 0.048
- command: 스피커의 재생을 빨리 감기 해줘.
  command_translated: Fast-forward the playback of the speaker.
  devices:
  - Camera
  - Speaker
  - Valve
  - Recorder
  - Timer
  - Clock
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_fastForward()
  model_info:
    elapsed_time: 2.296
    bge_elapsed_time: 0.089
    llm_elapsed_time: 2.156
    validation_elapsed_time: 0.051
- command: 스피커의 재생을 일시 정지해줘.
  command_translated: Pause playback on the speaker.
  devices:
  - Timer
  - SoundSensor
  - Speaker
  - Recorder
  - Siren
  - Pump
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_pause()
  model_info:
    elapsed_time: 2.306
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.164
    validation_elapsed_time: 0.055
- command: 스피커의 재생을 되감아줘.
  command_translated: Rewind the speaker's playback.
  devices:
  - Timer
  - Speaker
  - Recorder
  - Blind
  - Valve
  - Clock
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_rewind()
  model_info:
    elapsed_time: 2.293
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.141
    validation_elapsed_time: 0.056
- command: 스피커의 재생을 멈춰줘.
  command_translated: Stop the speaker from playing.
  devices:
  - Timer
  - SoundSensor
  - Speaker
  - Recorder
  - Clock
  - Pump
  - Valve
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_stop()
  model_info:
    elapsed_time: 2.313
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.167
    validation_elapsed_time: 0.058
- command: 스피커에서 music.mp3를 재생해줘.
  command_translated: Play 'music.mp3' on the speaker.
  devices:
  - SoundSensor
  - Speaker
  - Recorder
  - Timer
  - Dehumidifier
  - Clock
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_play("music.mp3")
  model_info:
    elapsed_time: 2.391
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.241
    validation_elapsed_time: 0.053
- command: 스피커에서 '지금은 테스트 중입니다.'를 말해줘.
  command_translated: Speak "This is a test" through the speaker.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Recorder
  - Calculator
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("This is a test")
  model_info:
    elapsed_time: 2.436
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.292
    validation_elapsed_time: 0.054
- command: 녹음기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the recorder is powered on.
  devices:
  - SoundSensor
  - Speaker
  - RobotCleaner
  - Recorder
  - Charger
  - Siren
  - Alarm
  - Camera
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Recorder).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.88
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.723
    validation_elapsed_time: 0.063
- command: 녹음기가 녹음 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the recorder is recording.
  devices:
  - Timer
  - SoundSensor
  - Speaker
  - RobotCleaner
  - Recorder
  - Siren
  - Alarm
  - Camera
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#Recorder).audioRecord_recordStatus == "recording")
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(all(#Recorder).audioRecord_recordStatus != "recording")
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.479
    bge_elapsed_time: 0.117
    llm_elapsed_time: 4.292
    validation_elapsed_time: 0.071
- command: 녹음기를 꺼줘.
  command_translated: Turn off the recorder.
  devices:
  - Camera
  - Speaker
  - RobotCleaner
  - GasValve
  - Recorder
  - Feeder
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_off()
  model_info:
    elapsed_time: 2.312
    bge_elapsed_time: 0.109
    llm_elapsed_time: 2.137
    validation_elapsed_time: 0.067
- command: 녹음기를 켜줘.
  command_translated: Turn on the recorder.
  devices:
  - AirConditioner
  - Timer
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Camera
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_on()
  model_info:
    elapsed_time: 2.368
    bge_elapsed_time: 0.114
    llm_elapsed_time: 2.18
    validation_elapsed_time: 0.073
- command: 녹음기의 전원을 토글해줘.
  command_translated: Toggle the recorder's power.
  devices:
  - Speaker
  - RobotCleaner
  - Recorder
  - SmartPlug
  - Feeder
  - Charger
  - Camera
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_toggle()
  model_info:
    elapsed_time: 2.271
    bge_elapsed_time: 0.115
    llm_elapsed_time: 2.097
    validation_elapsed_time: 0.058
- command: 녹음기로 10초 동안 녹음해서 test.wav로 저장해줘.
  command_translated: Record 10 seconds with a recorder and save it as test.wav.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Valve
  - Recorder
  - AirPurifier
  - Feeder
  - Camera
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).audioRecord_record("test.wav", 10.0)
  model_info:
    elapsed_time: 2.739
    bge_elapsed_time: 0.111
    llm_elapsed_time: 2.564
    validation_elapsed_time: 0.064
- command: 스위치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the switch is powered on.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Siren
  - ContactSensor
  - Alarm
  - Clock
  - Television
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Switch).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.011
    bge_elapsed_time: 0.111
    llm_elapsed_time: 2.843
    validation_elapsed_time: 0.057
- command: 스위치를 꺼줘.
  command_translated: Switch off.
  devices:
  - Timer
  - Switch
  - Speaker
  - GasValve
  - ContactSensor
  - Valve
  - Clock
  - Humidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_off()
  model_info:
    elapsed_time: 2.123
    bge_elapsed_time: 0.094
    llm_elapsed_time: 1.975
    validation_elapsed_time: 0.054
- command: 스위치를 켜줘.
  command_translated: Switch on.
  devices:
  - Switch
  - Speaker
  - Buttonx4
  - Timer
  - Clock
  - Humidifier
  - Irrigator
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_on()
  model_info:
    elapsed_time: 2.297
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.156
    validation_elapsed_time: 0.054
- command: 스위치의 전원을 토글해줘.
  command_translated: Toggle the power of the switch.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - ContactSensor
  - Clock
  - Television
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_toggle()
  model_info:
    elapsed_time: 2.271
    bge_elapsed_time: 0.101
    llm_elapsed_time: 2.119
    validation_elapsed_time: 0.051
- command: TV의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is powered on.
  devices:
  - Window
  - Speaker
  - SmartPlug
  - Siren
  - Alarm
  - Timer
  - Clock
  - Television
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.076
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.907
    validation_elapsed_time: 0.074
- command: 현재 TV 채널 이름이 '9시 뉴스'이면 알람의 사이렌을 울려줘.
  command_translated: If the current TV channel is named "9 o'clock news" sound the alarm's siren.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).tvChannel_tvChannelName == "9 o'clock news") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.229
    bge_elapsed_time: 0.097
    llm_elapsed_time: 3.06
    validation_elapsed_time: 0.072
- command: TV의 볼륨이 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the volume on the TV is above 50.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - TemperatureSensor
  - Alarm
  - GasMeter
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#Television).audioVolume_volume > 50)
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until((#Television).audioVolume_volume <= 50)
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.574
    bge_elapsed_time: 0.097
    llm_elapsed_time: 4.382
    validation_elapsed_time: 0.095
- command: TV가 음소거 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is muted.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - Blind
  - Alarm
  - Timer
  - MotionSensor
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).audioMute_muteStatus == "muted") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.268
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.109
    validation_elapsed_time: 0.074
- command: TV를 꺼줘.
  command_translated: Turn off the TV.
  devices:
  - Speaker
  - AirQualityDetector
  - GasValve
  - Valve
  - Clock
  - Blind
  - Timer
  - Dehumidifier
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_off()
  model_info:
    elapsed_time: 2.455
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.242
    validation_elapsed_time: 0.121
- command: TV를 켜줘.
  command_translated: Turn on the TV.
  devices:
  - Speaker
  - AirQualityDetector
  - Recorder
  - Blind
  - Timer
  - Clock
  - Humidifier
  - Television
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_on()
  model_info:
    elapsed_time: 2.381
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.224
    validation_elapsed_time: 0.075
- command: TV의 전원을 토글해줘.
  command_translated: Toggle the power of the TV.
  devices:
  - Switch
  - Speaker
  - AirQualityDetector
  - SmartPlug
  - Charger
  - Blind
  - Clock
  - Television
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_toggle()
  model_info:
    elapsed_time: 2.379
    bge_elapsed_time: 0.103
    llm_elapsed_time: 2.182
    validation_elapsed_time: 0.095
- command: TV 채널을 하나 내려줘.
  command_translated: Turn down a TV channel.
  devices:
  - Timer
  - Speaker
  - Buttonx4
  - Pump
  - Blind
  - Valve
  - Clock
  - Television
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_channelDown()
  model_info:
    elapsed_time: 2.609
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.42
    validation_elapsed_time: 0.107
- command: TV 채널을 하나 올려줘.
  command_translated: Upload a TV channel.
  devices:
  - Camera
  - Speaker
  - AirQualityDetector
  - Recorder
  - Pump
  - Valve
  - Clock
  - Television
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(123)
  model_info:
    elapsed_time: 3.238
    bge_elapsed_time: 0.082
    llm_elapsed_time: 3.057
    validation_elapsed_time: 0.099
- command: TV 채널을 7번으로 설정해줘.
  command_translated: Set the TV channel to 7.
  devices:
  - Speaker
  - AirQualityDetector
  - Curtain
  - Blind
  - Valve
  - Calculator
  - Clock
  - Shade
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(7)
  model_info:
    elapsed_time: 2.638
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.443
    validation_elapsed_time: 0.113
- command: TV 채널을 '9시 뉴스'로 설정해줘.
  command_translated: Set the TV channel to "9 o'clock news".
  devices:
  - Window
  - Speaker
  - AirQualityDetector
  - Blind
  - Valve
  - Clock
  - Television
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(9)
  model_info:
    elapsed_time: 2.454
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.311
    validation_elapsed_time: 0.058
- command: TV의 볼륨을 30으로 설정해줘.
  command_translated: Set the volume on the TV to 30.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Recorder
  - Clock
  - Blind
  - Calculator
  - GasMeter
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_setVolume(30)
  model_info:
    elapsed_time: 2.617
    bge_elapsed_time: 0.105
    llm_elapsed_time: 2.413
    validation_elapsed_time: 0.099
- command: TV의 볼륨을 낮춰줘.
  command_translated: Turn down the volume on the TV.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Clock
  - Timer
  - Dehumidifier
  - Television
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeDown()
  model_info:
    elapsed_time: 2.591
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.41
    validation_elapsed_time: 0.099
- command: TV의 볼륨을 높여줘.
  command_translated: Turn up the volume on the TV.
  devices:
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Recorder
  - Clock
  - Timer
  - GasMeter
  - Television
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeUp()
  model_info:
    elapsed_time: 2.502
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.323
    validation_elapsed_time: 0.097
- command: TV를 음소거해줘.
  command_translated: Mute the TV.
  devices:
  - Window
  - Speaker
  - AirQualityDetector
  - Recorder
  - Clock
  - Alarm
  - Dehumidifier
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute('muted')
  model_info:
    elapsed_time: 2.793
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.607
    validation_elapsed_time: 0.104
- command: TV의 음소거 상태를 해제해줘.
  command_translated: Unmute the TV.
  devices:
  - Window
  - Speaker
  - AirQualityDetector
  - Clock
  - Blind
  - Alarm
  - Timer
  - Dehumidifier
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_unmute()
  model_info:
    elapsed_time: 2.619
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.415
    validation_elapsed_time: 0.122
- command: TV의 음소거 상태를 음소거로 설정해줘.
  command_translated: Set the TV's mute state to Mute.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Blind
  - Alarm
  - Clock
  - Television
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute('muted')
  model_info:
    elapsed_time: 2.731
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.549
    validation_elapsed_time: 0.097
- command: 현재 실내 온도가 25도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current room temperature is above 25 degrees.
  devices:
  - Window
  - OccupancySensor
  - PresenceSensor
  - Speaker
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - HumiditySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.058
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.889
    validation_elapsed_time: 0.082
- command: 밸브가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the valve is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - GasValve
  - Siren
  - Pump
  - Blind
  - Alarm
  - Valve
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Valve).valve_valve == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.043
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.899
    validation_elapsed_time: 0.06
- command: 밸브를 닫아줘.
  command_translated: Close the valve.
  devices:
  - Window
  - Speaker
  - GasValve
  - Clock
  - Pump
  - Blind
  - Valve
  - Dehumidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Valve).valve_close()
  model_info:
    elapsed_time: 2.321
    bge_elapsed_time: 0.105
    llm_elapsed_time: 2.158
    validation_elapsed_time: 0.057
- command: 밸브를 열어줘.
  command_translated: Open the valve.
  devices:
  - Window
  - Speaker
  - GasValve
  - Clock
  - Pump
  - Blind
  - Valve
  - Dehumidifier
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Valve).valve_open()
  model_info:
    elapsed_time: 2.308
    bge_elapsed_time: 0.098
    llm_elapsed_time: 2.153
    validation_elapsed_time: 0.057
- command: 바깥 습도가 80퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity outside is above 80 percent.
  devices:
  - Speaker
  - AirQualityDetector
  - Siren
  - Clock
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - SoilMoistureSensor
  - HumiditySensor
  - Humidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0)
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity <= 80.0)
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.862
    bge_elapsed_time: 0.103
    llm_elapsed_time: 4.668
    validation_elapsed_time: 0.091
- command: 바깥의 미세먼지 농도가 100 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the particulate matter concentration outside is above 100.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - Siren
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - SmokeDetector
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#WeatherProvider).weatherProvider_pm10Weather > 100.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.186
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.01
    validation_elapsed_time: 0.089
- command: 바깥의 초미세먼지 농도가 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the outside fine particulate matter concentration is above 50.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - AirQualityDetector
  - AirPurifier
  - Siren
  - WeatherProvider
  - TemperatureSensor
  - Alarm
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(all(#AirQualityDetector).dustSensor_fineDustLevel > 50)
      (#Alarm).alarm_siren()
      name = "Scenario2"
      cron = ""
      period = -1
      wait until(all(#AirQualityDetector).dustSensor_fineDustLevel <= 50)
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 4.989
    bge_elapsed_time: 0.087
    llm_elapsed_time: 4.796
    validation_elapsed_time: 0.106
- command: 기압이 1020hPa 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the barometric pressure is above 1020 hPa.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - WeatherProvider
  - TemperatureSensor
  - Pump
  - LeakSensor
  - Alarm
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#WeatherProvider).weatherProvider_pressureWeather > 1020.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.322
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.148
    validation_elapsed_time: 0.087
- command: 현재 바깥의 기온이 30도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if it's currently above 30 degrees outside.
  devices:
  - Window
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - WeatherProvider
  - TemperatureSensor
  - LeakSensor
  - Alarm
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#TemperatureSensor).temperatureMeasurement_temperature > 30.0)
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.889
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.751
    validation_elapsed_time: 0.05
- command: 현재 날씨가 비가 오고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current weather is rainy.
  devices:
  - Window
  - Speaker
  - Siren
  - WeatherProvider
  - LeakSensor
  - TemperatureSensor
  - Alarm
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#WeatherProvider).weatherProvider_weather == "rain") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.841
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.694
    validation_elapsed_time: 0.05
- command: 위도 37.5665, 경도 126.9780의 현재 날씨 정보를 스피커로 출력해줘.
  command_translated: Announce the current weather information for latitude 37.5665 and longitude 126.9780 via the speaker.
  devices:
  - Window
  - Speaker
  - Siren
  - WeatherProvider
  - TemperatureSensor
  - Clock
  - MenuProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      weatherInfo := (#WeatherProvider).weatherProvider_getWeatherInfo(37.5665, 126.9780)
      (#Speaker).mediaPlayback_speak(weatherInfo)
  model_info:
    elapsed_time: 3.566
    bge_elapsed_time: 0.096
    llm_elapsed_time: 3.421
    validation_elapsed_time: 0.049
- command: 창문이 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a window is open.
  devices:
  - Window
  - DoorLock
  - Speaker
  - Siren
  - Pump
  - Blind
  - Alarm
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Window).windowControl_window == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.986
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.818
    validation_elapsed_time: 0.075
- command: 창문을 닫아줘.
  command_translated: Close the window.
  devices:
  - Window
  - Speaker
  - Clock
  - Pump
  - Curtain
  - Blind
  - Valve
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Window).windowControl_close()
  model_info:
    elapsed_time: 2.32
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.157
    validation_elapsed_time: 0.065
- command: 창문을 열어줘.
  command_translated: Open a window.
  devices:
  - Window
  - Speaker
  - Humidifier
  - Pump
  - Curtain
  - Blind
  - Valve
  - Clock
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Window).windowControl_open()
  model_info:
    elapsed_time: 2.263
    bge_elapsed_time: 0.1
    llm_elapsed_time: 2.102
    validation_elapsed_time: 0.06
- command: 낙상 감지 센서에서 낙상이 감지된 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a fall is detected by the fall detection sensor.
  devices:
  - SoundSensor
  - Speaker
  - Siren
  - FallDetector
  - LeakSensor
  - ContactSensor
  - TemperatureSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#FallDetector).fallDetection_fall == "fall")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.763
    bge_elapsed_time: 0.106
    llm_elapsed_time: 2.608
    validation_elapsed_time: 0.048
- command: 점유 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if an occupancy sensor is detected.
  devices:
  - OccupancySensor
  - SoundSensor
  - PresenceSensor
  - Speaker
  - Siren
  - LeakSensor
  - ContactSensor
  - Alarm
  - MotionSensor
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#OccupancySensor).presenceSensor_presence == "present")
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.741
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.597
    validation_elapsed_time: 0.05
- command: 릴레이의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relay is powered on.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Siren
  - Alarm
  - Timer
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Relay).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.97
    bge_elapsed_time: 0.094
    llm_elapsed_time: 2.823
    validation_elapsed_time: 0.054
- command: 릴레이를 꺼줘.
  command_translated: Turn off the relay.
  devices:
  - Timer
  - Speaker
  - GasValve
  - FallDetector
  - Pump
  - Blind
  - Valve
  - Clock
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_off()
  model_info:
    elapsed_time: 2.237
    bge_elapsed_time: 0.092
    llm_elapsed_time: 2.088
    validation_elapsed_time: 0.057
- command: 릴레이를 켜줘.
  command_translated: Turn on the relay.
  devices:
  - Speaker
  - Valve
  - FallDetector
  - Pump
  - Blind
  - Timer
  - Clock
  - Irrigator
  - Relay
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_on()
  model_info:
    elapsed_time: 2.242
    bge_elapsed_time: 0.096
    llm_elapsed_time: 2.089
    validation_elapsed_time: 0.057
- command: 릴레이의 전원을 토글해줘.
  command_translated: Toggle the power of the relay.
  devices:
  - Switch
  - Speaker
  - SmartPlug
  - Charger
  - Blind
  - Valve
  - Clock
  - Relay
  - Button
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_toggle()
  model_info:
    elapsed_time: 2.22
    bge_elapsed_time: 0.099
    llm_elapsed_time: 2.073
    validation_elapsed_time: 0.048
- command: 테스트 타이머라는 이름의 60초 길이의 타이머를 추가해줘.
  command_translated: Add a 60-second timer named Test Timer.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - AirPurifier
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 60.0)
  model_info:
    elapsed_time: 2.799
    bge_elapsed_time: 0.093
    llm_elapsed_time: 2.639
    validation_elapsed_time: 0.067
- command: 테스트 타이머라는 이름의 타이머가 존재하면 알람의 사이렌을 울려줘.
  command_translated: If a timer named Test Timer exists, sound the alarm siren.
  devices:
  - SoundSensor
  - Speaker
  - RobotCleaner
  - Recorder
  - AirPurifier
  - Feeder
  - Siren
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if (timer_isExist("Test Timer")) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.964
    bge_elapsed_time: 0.11
    llm_elapsed_time: 2.778
    validation_elapsed_time: 0.076
- command: 테스트 타이머라는 이름의 타이머가 하면 알람의 사이렌을 울려줘.
  command_translated: if a timer named Test Timer goes off, sound an alarm siren.
  devices:
  - SoundSensor
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - Siren
  - TemperatureSensor
  - Alarm
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(timer.timer_isSet("Test Timer"))
      (#Alarm).alarm_siren()
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until(timer.timer_isExist("Test Timer"))
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 4.169
    bge_elapsed_time: 0.121
    llm_elapsed_time: 3.807
    validation_elapsed_time: 0.241
- command: 테스트 타이머라는 이름의 타이머를 리셋해줘.
  command_translated: Reset a timer named Test Timer.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - AirPurifier
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      timer_reset("Test Timer")
  model_info:
    elapsed_time: 2.275
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.123
    validation_elapsed_time: 0.068
- command: 테스트 타이머라는 이름의 타이머를 120초로 설정해줘.
  command_translated: Set a timer named Test Timer to 120 seconds.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - AirPurifier
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 120)
  model_info:
    elapsed_time: 2.789
    bge_elapsed_time: 0.114
    llm_elapsed_time: 2.61
    validation_elapsed_time: 0.065
- command: 테스트 타이머라는 이름의 타이머를 시작해줘.
  command_translated: Start a timer named Test Timer.
  devices:
  - AirConditioner
  - Speaker
  - RobotCleaner
  - Recorder
  - Feeder
  - AirPurifier
  - Timer
  - Clock
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 10.0)
  model_info:
    elapsed_time: 2.824
    bge_elapsed_time: 0.1
    llm_elapsed_time: 2.657
    validation_elapsed_time: 0.067

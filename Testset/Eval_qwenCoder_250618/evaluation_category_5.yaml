- command: "토양 습도가 30% 미만이면 5초 후 급수기를 작동해 줘."
  command_translated: "If the soil humidity is below 30%, wait 5 seconds before activating the waterer."
  devices:
  - Humidifier
  - WeatherProvider
  - LeakSensor
  - SoilMoistureSensor
  - Speaker
  - Irrigator
  - Pump
  - HumiditySensor
  - Clock
  generated_code: []
  elapsed_time: 46.978 seconds
- command: "창문이 열려 있고 온도가 35도 이상이면 10초 대기 후 블라인드를 내려 줘."
  command_translated: "If a window is open and the temperature is above 35 degrees, wait 10 seconds before lowering the blinds."
  devices:
  - WeatherProvider
  - DoorLock
  - Window
  - Curtain
  - Speaker
  - TemperatureSensor
  - Calculator
  - Pump
  - Clock
  - Shade
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      if (((#Window).windowControl_window == open) and ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0)) {
        wait until(#Clock).clock_delay(10000)
        all(#Blind).blindLevel_setBlindLevel(50)
      }
  elapsed_time: 5.176 seconds
- command: "습도가 80% 이상이면 3초 뒤 제습기를 켜고, 7초 더 지난 후 창문을 닫아 줘."
  command_translated: "If the humidity is above 80%, turn on the dehumidifier after 3 seconds and close the window after another 7 seconds."
  devices:
  - Humidifier
  - WeatherProvider
  - SoilMoistureSensor
  - Window
  - AirPurifier
  - Speaker
  - Dehumidifier
  - HumiditySensor
  - Clock
  - Shade
  - AirQualityDetector
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity > 80.0)
      (#Dehumidifier).dehumidifierMode_setDehumidifierMode("continuousDehumidifying")
      (#Window).windowControl_close()


      (#Clock).clock_delay(7000)


      (#Window).windowControl_close()
  elapsed_time: 6.340 seconds
- command: "빛의 세기가 100룩스 이하면 5초 대기 후 LED 조명을 켜 줘."
  command_translated: "If the light intensity is below 100 lux, wait 5 seconds before turning on the LED light."
  devices:
  - Siren
  - WeatherProvider
  - Light
  - Speaker
  - TemperatureSensor
  - HumiditySensor
  - Clock
  - Shade
  - LightSensor
  - Alarm
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      if ((#LightSensor).lightLevel_light < 100.0) {
        wait until(#Clock).clock_delay(ms: 5000)
        (#Light).switch_on()
      }
  elapsed_time: 4.469 seconds
- command: "급수기를 작동 후 10초 기다렸다가 환풍기를 켜 줘."
  command_translated: "After running the irrigator, wait 10 seconds before turning on the fan."
  devices:
  - Humidifier
  - Feeder
  - Window
  - AirPurifier
  - Speaker
  - Irrigator
  - Pump
  - Dehumidifier
  - Clock
  - Refrigerator
  - Fan
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      all(#Irrigator).irrigatorOperatingState_startWatering()


      name = "Scenario2"
      cron = ""
      period = 10000
      all(#Fan).fanControl_setFanSpeed()
  elapsed_time: 4.791 seconds
- command: "창문이 열려 있으면 5초 후 커튼을 닫고, 10초 더 지난 뒤 블라인드를 닫아 줘."
  command_translated: "If the window is open, close the curtains after 5 seconds, and close the blinds after another 10 seconds."
  devices:
  - DoorLock
  - Window
  - Curtain
  - Speaker
  - Calculator
  - Buttonx4
  - Pump
  - GasValve
  - Clock
  - Shade
  - Valve
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      if ((#Window).windowControl_window == open) {
        wait until(#Window).windowControl_window == open
        (#Curtain).windowShadeLevel_setShadeLevel(0)
        wait until(#Window).windowControl_window == open
        (#Blind).blindLevel_setBlindLevel(0)
      }
  elapsed_time: 5.724 seconds
- command: "조명이 켜져 있으면 3초 대기 후 조명을 껐다가 3초 뒤 다시 켜 줘."
  command_translated: "If the light is on, wait 3 seconds, turn off the light, and then turn it back on after 3 seconds."
  devices:
  - Siren
  - Light
  - Speaker
  - Irrigator
  - Buttonx4
  - GasValve
  - Clock
  - Shade
  - LightSensor
  - Alarm
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      if ((#Light).switch_switch == "on") {
        (#Light).switch_toggle()
        (#Clock).clock_delay(ms: 3000)
        (#Light).switch_toggle()
      }
  elapsed_time: 4.837 seconds
- command: "7초 후에 조명을 끄고 5초 뒤 다시 켜 줘."
  command_translated: "Turn off the light after 7 seconds and turn it back on after 5 seconds."
  devices:
  - Siren
  - Light
  - Speaker
  - Calculator
  - Irrigator
  - GasValve
  - Clock
  - LightSensor
  - Alarm
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      (#Light).switch_off()

      wait until(#Clock).clock_delay(ms: 7000)

      (#Light).switch_on()

      wait until(#Clock).clock_delay(ms: 5000)

      (#Light).switch_off()
  elapsed_time: 4.829 seconds
- command: "문이 닫혀 있는데 5초가 지나도 창문이 열려 있지 않으면 블라인드를 열어 줘."
  command_translated: "If the door is closed and the window is not open after 5 seconds, open the blinds."
  devices:
  - DoorLock
  - Window
  - Curtain
  - Speaker
  - Buttonx4
  - Pump
  - GasValve
  - Clock
  - Shade
  - Valve
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 5000
    code: |
      doorClosed := false
      windowNotOpen := false

      if (((#DoorLock).doorControl_door == "closed")) {
        doorClosed = true
      }

      wait until(doorClosed == true)

      if (((#Window).windowControl_window != "open")) {
        windowNotOpen = true
      }

      if (windowNotOpen == true) {
        (#Blind).blind_open()
      }
  elapsed_time: 6.347 seconds
- command: "커튼이 열린 상태라면 2초 뒤 조명을 50으로 낮추고, 다시 4초 기다려서 꺼 줘."
  command_translated: "If the curtains are open, turn the lights down to 50 after 2 seconds, then wait another 4 seconds to turn them off."
  devices:
  - Siren
  - Light
  - Window
  - Curtain
  - Speaker
  - Buttonx4
  - GasValve
  - Clock
  - Shade
  - Alarm
  - Blind
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |
      wait until(all(#Curtain).blind_blind == "open")
      (#Light).colorControl_setColor(50, 2000)
      wait until(#Clock).clock_delay(4000)
      (#Light).switchLevel_setLevel(0, 2000)
  elapsed_time: 5.583 seconds

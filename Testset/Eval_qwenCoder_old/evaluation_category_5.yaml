- command: If the soil humidity is below 30%, wait 5 seconds before activating the waterer.
  devices:
  - Irrigator
  - HumiditySensor
  - Dehumidifier
  - Feeder
  - SoilMoistureSensor
  - WeatherProvider
  - Clock
  - LeakSensor
  - Fan
  - Humidifier
  - Dishwasher
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0)
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 3.756
    bge_elapsed_time: 0.133
    llm_elapsed_time: 3.623
- command: If a window is open and the temperature is above 35 degrees, wait 10 seconds before lowering the blinds.
  devices:
  - Blind
  - ContactSensor
  - TemperatureSensor
  - Shade
  - WeatherProvider
  - Clock
  - Curtain
  - DoorLock
  - Camera
  - Window
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Window).windowControl_window == 'open') {
        if ((#TemperatureSensor).temperatureMeasurement_temperature > 35.0) {
          (#Clock).clock_delay(10000)
          (#Blind).blind_close()
        }
      }
  model_info:
    elapsed_time: 4.577
    bge_elapsed_time: 0.134
    llm_elapsed_time: 4.442
- command: If the humidity is above 80%, turn on the dehumidifier after 3 seconds and close the window after another 7 seconds.
  devices:
  - Window
  - HumiditySensor
  - Dehumidifier
  - WeatherProvider
  - Clock
  - Curtain
  - DoorLock
  - Humidifier
  - SoilMoistureSensor
  - AirQualityDetector
  - AirConditioner
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0)
      (#Dehumidifier).switch_on()
      (#Clock).clock_delay(3000)
      (#Window).windowControl_close()
      (#Clock).clock_delay(7000)
  model_info:
    elapsed_time: 4.801
    bge_elapsed_time: 0.136
    llm_elapsed_time: 4.665
- command: If the light intensity is below 100 lux, wait 5 seconds before turning on the LED light.
  devices:
  - Blind
  - LightSensor
  - Irrigator
  - TemperatureSensor
  - Light
  - WeatherProvider
  - SmokeDetector
  - Relay
  - Clock
  - Camera
  - PresenceSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#LightSensor).lightLevel_light < 100.0) {
        (#Clock).clock_delay(5000)
        (#Light).switch_on()
      }
  model_info:
    elapsed_time: 3.86
    bge_elapsed_time: 0.132
    llm_elapsed_time: 3.728
- command: After running the waterer, wait 10 seconds before turning on the fan.
  devices:
  - Irrigator
  - Dehumidifier
  - Refrigerator
  - WeatherProvider
  - Clock
  - AirPurifier
  - Fan
  - Humidifier
  - Dishwasher
  - AirConditioner
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
      wait until((#Irrigator).switch_switch == 'on')
      (#Clock).clock_delay(10000)
      (#Fan).switch_on()
  model_info:
    elapsed_time: 4.241
    bge_elapsed_time: 0.13
    llm_elapsed_time: 4.111
- command: If the window is open, close the curtains after 5 seconds, and close the blinds after another 10 seconds.
  devices:
  - Blind
  - Valve
  - ContactSensor
  - Shade
  - WeatherProvider
  - Clock
  - Curtain
  - DoorLock
  - Camera
  - GasValve
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if ((#Window).windowControl_window == 'open') {
        (#Curtain).curtain_close()
        wait until((#Clock).clock_second == 5)
        (#Blind).blind_close()
      }
  model_info:
    elapsed_time: 4.608
    bge_elapsed_time: 0.153
    llm_elapsed_time: 4.455
- command: If the light is on, wait 3 seconds, turn off the light, and then turn it back on after 3 seconds.
  devices:
  - Timer
  - LightSensor
  - Light
  - WeatherProvider
  - SmokeDetector
  - Relay
  - Clock
  - Switch
  - Camera
  - Curtain
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).switch_switch == 'on') {
        (#Clock).clock_delay(3000)
        (#Light).switch_off()
        (#Clock).clock_delay(3000)
        (#Light).switch_on()
      }
  model_info:
    elapsed_time: 4.782
    bge_elapsed_time: 0.497
    llm_elapsed_time: 4.285
- command: Turn off the light after 7 seconds and turn it back on after 5 seconds.
  devices:
  - LightSensor
  - Light
  - Clock
  - Relay
  - Alarm
  - Camera
  - Curtain
  - Buttonx4
  - Switch
  - Siren
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      wait until((#Clock).clock_delay(7000))
      (#Light).switch_off()
      wait until((#Clock).clock_delay(5000))
      (#Light).switch_on()
  model_info:
    elapsed_time: 4.148
    bge_elapsed_time: 0.128
    llm_elapsed_time: 4.02
- command: If the door is closed and the window is not open after 5 seconds, open the blinds.
  devices:
  - Blind
  - Valve
  - ContactSensor
  - Shade
  - Relay
  - Clock
  - Curtain
  - DoorLock
  - Siren
  - Camera
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if ((#DoorLock).doorControl_door == 'closed') {
        wait until((#Window).windowControl_window == 'open')
        (#Blind).blind_open()
      }
  model_info:
    elapsed_time: 3.874
    bge_elapsed_time: 0.134
    llm_elapsed_time: 3.74
- command: If the curtains are open, turn the lights down to 50 after 2 seconds, then wait another 4 seconds to turn them off.
  devices:
  - Blind
  - LightSensor
  - ContactSensor
  - Light
  - Shade
  - WeatherProvider
  - Clock
  - Curtain
  - DoorLock
  - Camera
  - Window
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if ((#Curtain).curtain_curtain == 'open') {
        (#Light).switchLevel_setLevel(50, 0)
        wait until((#Clock).clock_delay(2000))
        (#Light).switch_off()
      }
  model_info:
    elapsed_time: 4.823
    bge_elapsed_time: 0.134
    llm_elapsed_time: 4.689

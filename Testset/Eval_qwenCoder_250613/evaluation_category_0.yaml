- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - Clock
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).alarm_siren()
  model_info:
    elapsed_time: 3.844
    bge_elapsed_time: 1.179
    llm_elapsed_time: 2.598
    validation_elapsed_time: 0.066
- command: 사이렌을 울려줘.
  command_translated: Sound the siren.
  devices:
  - Clock
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).alarm_siren()
  model_info:
    elapsed_time: 2.15
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.049
    validation_elapsed_time: 0.017
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.533
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.43
    validation_elapsed_time: 0.02
- command: 경광등을 켜 줘.
  command_translated: Turn on the strobe.
  devices:
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.535
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.434
    validation_elapsed_time: 0.02
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Clock
  - Valve
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode("both")
  model_info:
    elapsed_time: 2.325
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.224
    validation_elapsed_time: 0.016
- command: 사이렌과 경광등을 동시에 켜 줘
  command_translated: Turn on the siren and the strobe at the same time
  devices:
  - Clock
  - Valve
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('both')
  model_info:
    elapsed_time: 2.331
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.23
    validation_elapsed_time: 0.016
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Clock
  - Valve
  - Siren
  - Relay
  - Alarm
  - GasValve
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
      (#Siren).sirenMode_setSirenMode('off')
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 3.247
    bge_elapsed_time: 0.106
    llm_elapsed_time: 3.125
    validation_elapsed_time: 0.016
- command: 사이렌과 경광등을 둘 다 꺼 줘
  command_translated: Turn off both the siren and the strobe
  devices:
  - Clock
  - Valve
  - Siren
  - Relay
  - Alarm
  - GasValve
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
      (#Siren).sirenMode_setSirenMode('off')
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 3.233
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.133
    validation_elapsed_time: 0.016
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - ContactSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#OccupancySensor).presenceSensor_presence == "present") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.679
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.576
    validation_elapsed_time: 0.016
- command: 재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the occupancy sensor is detected.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - ContactSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#OccupancySensor).presenceSensor_presence == "present") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.672
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.571
    validation_elapsed_time: 0.016
- command: 에어컨의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is powered on.
  devices:
  - Clock
  - AirConditioner
  - Fan
  - TemperatureSensor
  - Siren
  - Alarm
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.897
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.794
    validation_elapsed_time: 0.017
- command: 에어컨의 모드가 냉방 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner is in cooling mode.
  devices:
  - Clock
  - AirConditioner
  - Siren
  - Alarm
  - Refrigerator
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_airConditionerMode == "cool") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.167
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.065
    validation_elapsed_time: 0.017
- command: 에어컨의 목표 온도가 30도면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air conditioner's target temperature is 30 degrees.
  devices:
  - Clock
  - AirConditioner
  - Fan
  - Siren
  - Alarm
  - Dehumidifier
  - Speaker
  - AirPurifier
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_targetTemperature == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.227
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.119
    validation_elapsed_time: 0.02
- command: 에어컨이 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes supported by the air conditioner
  devices:
  - Clock
  - AirConditioner
  - Fan
  - Feeder
  - TemperatureSensor
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirConditioner).airConditionerMode_supportedAcModes != "") {
        (#Speaker).mediaPlayback_speak("The air conditioner supports modes: " + (#AirConditioner).airConditionerMode_supportedAcModes)
      } else {
        (#Speaker).mediaPlayback_speak("The air conditioner does not support any specific modes.")
      }
  model_info:
    elapsed_time: 4.786
    bge_elapsed_time: 0.085
    llm_elapsed_time: 4.684
    validation_elapsed_time: 0.017
- command: 에어컨을 꺼줘.
  command_translated: Turn off the air conditioner.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Fan
  - AirPurifier
  - Feeder
  - Speaker
  - Dehumidifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_off()
  model_info:
    elapsed_time: 2.266
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.167
    validation_elapsed_time: 0.017
- command: 에어컨을 켜줘.
  command_translated: Turn on the air conditioner.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_on()
  model_info:
    elapsed_time: 2.25
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.152
    validation_elapsed_time: 0.017
- command: 에어컨의 전원을 토글해줘.
  command_translated: Toggle the power of the air conditioner.
  devices:
  - RobotCleaner
  - SmartPlug
  - Clock
  - AirConditioner
  - Fan
  - Relay
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).switch_toggle()
  model_info:
    elapsed_time: 2.21
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.11
    validation_elapsed_time: 0.017
- command: 에어컨을 자동 모드로 설정해줘.
  command_translated: Set the air conditioner to auto mode.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Fan
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setAirConditionerMode('auto')
  model_info:
    elapsed_time: 2.626
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.522
    validation_elapsed_time: 0.022
- command: 에어컨의 목표 온도를 18도로 설정해줘.
  command_translated: Set the target temperature for the air conditioner to 18 degrees.
  devices:
  - Clock
  - AirConditioner
  - Fan
  - TemperatureSensor
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirConditioner).airConditionerMode_setTemperature(18.0)
  model_info:
    elapsed_time: 2.666
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.558
    validation_elapsed_time: 0.021
- command: 공기청정기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is powered on.
  devices:
  - Humidifier
  - Clock
  - Fan
  - Siren
  - Relay
  - AirQualityDetector
  - Alarm
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.979
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.872
    validation_elapsed_time: 0.02
- command: 공기청정기가 수면 모드면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the air purifier is in sleep mode.
  devices:
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - Siren
  - AirQualityDetector
  - Alarm
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirPurifier).airPurifierFanMode_airPurifierFanMode == "sleep") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.451
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.344
    validation_elapsed_time: 0.02
- command: 공기청정기가 지원하는 모드를 스피커로 출력해줘
  command_translated: Speaker out the modes the air purifier supports
  devices:
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).mediaPlayback_speak(#AirPurifier).airPurifierFanMode_supportedAirPurifierFanModes)
  model_info:
    elapsed_time: 3.246
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.142
    validation_elapsed_time: 0.02
- command: 공기청정기를 꺼줘.
  command_translated: Turn off the air purifier.
  devices:
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - AirQualityDetector
  - GasValve
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_off()
  model_info:
    elapsed_time: 2.334
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.232
    validation_elapsed_time: 0.02
- command: 공기청정기를 켜줘.
  command_translated: Turn on the air purifier.
  devices:
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - WeatherProvider
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_on()
  model_info:
    elapsed_time: 2.376
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.273
    validation_elapsed_time: 0.02
- command: 공기청정기의 전원을 토글해줘.
  command_translated: Toggle the air purifier's power.
  devices:
  - Humidifier
  - SmartPlug
  - Clock
  - Fan
  - Relay
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).switch_toggle()
  model_info:
    elapsed_time: 2.27
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.166
    validation_elapsed_time: 0.02
- command: 공기청정기의 모드를 자동으로 설정해줘.
  command_translated: Set the air purifier's mode to automatic.
  devices:
  - Humidifier
  - Clock
  - AirConditioner
  - Fan
  - Irrigator
  - AirQualityDetector
  - Speaker
  - AirPurifier
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')
  model_info:
    elapsed_time: 2.857
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.75
    validation_elapsed_time: 0.021
- command: 공기질 측정기의 측정 온도가 20도이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren If the temperature measured by the air quality meter is 20 degrees.
  devices:
  - Clock
  - GasMeter
  - Siren
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - Speaker
  - AirPurifier
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).temperatureMeasurement_temperature == 20.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.035
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.927
    validation_elapsed_time: 0.021
- command: 이산화탄소 농도가 800ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the carbon dioxide concentration is above 800 ppm.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - AirQualityDetector
  - Alarm
  - SmokeDetector
  - Speaker
  - AirPurifier
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide > 800.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.178
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.07
    validation_elapsed_time: 0.02
- command: 공기질 측정기의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relative humidity on the air quality meter is above 70 percent.
  devices:
  - Humidifier
  - Clock
  - Siren
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).relativeHumidityMeasurement_humidity > 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.168
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.059
    validation_elapsed_time: 0.02
- command: 실내 황사 농도가 150마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor yellow dust concentration is 150 micrograms or more.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - SmokeDetector
  - Speaker
  - SoundSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#HumiditySensor).dustSensor_dustLevel >= 150) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.074
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.961
    validation_elapsed_time: 0.025
- command: 실내 미세먼지 농도가 35마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if indoor particulate matter concentration is 35 micrograms or higher.
  devices:
  - Clock
  - Siren
  - Window
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - Speaker
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_dustLevel >= 35) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.985
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.877
    validation_elapsed_time: 0.02
- command: 실내 초미세먼지 농도가 15마이크로그램 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the indoor fine particulate matter concentration is 15 micrograms or more.
  devices:
  - Clock
  - Siren
  - Window
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - Speaker
  - SoundSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_fineDustLevel >= 15) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.149
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.041
    validation_elapsed_time: 0.02
- command: 총 휘발성 유기 화합물 농도가 0.5ppm 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the total volatile organic compound concentration is greater than 0.5 ppm.
  devices:
  - Clock
  - LeakSensor
  - Valve
  - Siren
  - AirQualityDetector
  - Alarm
  - SmokeDetector
  - HumiditySensor
  - Speaker
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).tvocMeasurement_tvocLevel > 0.5) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.97
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.866
    validation_elapsed_time: 0.016
- command: 알람이 경광등 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm is in strobe mode.
  devices:
  - Clock
  - Siren
  - Window
  - Alarm
  - Blind
  - Speaker
  - Timer
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarm == "strobe") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.807
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.7
    validation_elapsed_time: 0.021
- command: 알람의 볼륨이 높음이면 알람의 사이렌을 울려줘.
  command_translated: If the volume of the alarm is high, sound the alarm's siren.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Window
  - Alarm
  - Blind
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarmVolume == "high") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.75
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.647
    validation_elapsed_time: 0.017
- command: 알람 배터리 상태가 20퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the alarm battery is below 20 percent.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - HumiditySensor
  - Charger
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).battery_battery < 20.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.759
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.656
    validation_elapsed_time: 0.017
- command: 알람의 사이렌과 경광등을 모두 켜줘.
  command_translated: Turn on both the alarm's siren and strobe.
  devices:
  - FallDetector
  - Clock
  - Siren
  - Relay
  - Window
  - Alarm
  - SmokeDetector
  - Blind
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_both()
  model_info:
    elapsed_time: 2.105
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.003
    validation_elapsed_time: 0.017
- command: 알람을 꺼줘.
  command_translated: Turn off the alarm.
  devices:
  - MotionSensor
  - Clock
  - Siren
  - Alarm
  - GasValve
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_off()
  model_info:
    elapsed_time: 2.135
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.037
    validation_elapsed_time: 0.017
- command: 알람의 볼륨을 낮음으로 설정해줘.
  command_translated: Set the volume of the alarm to low.
  devices:
  - Clock
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_setAlarmVolume(alarmVolume: "low")
  model_info:
    elapsed_time: 2.477
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.377
    validation_elapsed_time: 0.017
- command: 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren.
  devices:
  - FallDetector
  - Clock
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.193
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.095
    validation_elapsed_time: 0.017
- command: 알람의 경광등을 켜줘.
  command_translated: Turn on the alarm's light.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Timer
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Alarm).alarm_strobe()
  model_info:
    elapsed_time: 2.597
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.498
    validation_elapsed_time: 0.017
- command: 블라인드가 50 퍼센트 이상 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are more than 50 percent open.
  devices:
  - Clock
  - Siren
  - Window
  - Curtain
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blindLevel_blindLevel > 50) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.022
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.914
    validation_elapsed_time: 0.021
- command: 블라인드가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the blinds are open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Curtain
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Blind).blind_blind == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.809
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.705
    validation_elapsed_time: 0.02
- command: 블라인드를 70 퍼센트로 설정해줘.
  command_translated: Set the blinds to 70 percent.
  devices:
  - Shade
  - FallDetector
  - Clock
  - Light
  - Curtain
  - Window
  - Blind
  - Speaker
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blindLevel_setBlindLevel(70)
  model_info:
    elapsed_time: 2.56
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.459
    validation_elapsed_time: 0.02
- command: 블라인드를 닫아줘.
  command_translated: Close the blinds.
  devices:
  - Clock
  - Valve
  - Curtain
  - Window
  - Buttonx4
  - Blind
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_close()
  model_info:
    elapsed_time: 2.208
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.105
    validation_elapsed_time: 0.02
- command: 블라인드를 열어줘.
  command_translated: Open the blinds.
  devices:
  - Clock
  - Valve
  - Window
  - Curtain
  - Buttonx4
  - Blind
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_open()
  model_info:
    elapsed_time: 2.213
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.112
    validation_elapsed_time: 0.02
- command: 블라인드 움직임을 멈춰줘.
  command_translated: Stop blind movement.
  devices:
  - FallDetector
  - MotionSensor
  - Clock
  - Curtain
  - Relay
  - Blind
  - Speaker
  - Timer
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Blind).blind_pause()
  model_info:
    elapsed_time: 2.095
    bge_elapsed_time: 0.082
    llm_elapsed_time: 1.997
    validation_elapsed_time: 0.017
- command: 버튼이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the button is pressed.
  devices:
  - Clock
  - Button
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Button).button_button == "pushed") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.936
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.834
    validation_elapsed_time: 0.017
- command: 버튼의 개수가 4개 이상이면 알람의 사이렌을 울려줘.
  command_translated: If there are more than four buttons, sound the alarm's siren.
  devices:
  - Clock
  - Button
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons > 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.216
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.113
    validation_elapsed_time: 0.017
- command: 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the button's supported states via the speaker.
  devices:
  - Clock
  - Button
  - Valve
  - Window
  - Buttonx4
  - Speaker
  - Recorder
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      button_states := (#Button).button_button_values
      (#Speaker).mediaPlayback_speak(button_states)
  model_info:
    elapsed_time: 2.713
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.612
    validation_elapsed_time: 0.017
- command: 버튼1이 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 1 is pressed.
  devices:
  - MotionSensor
  - Clock
  - Button
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_button1 == "pushed") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.14
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.039
    validation_elapsed_time: 0.017
- command: 버튼2가 눌린 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if button 2 is pressed.
  devices:
  - FallDetector
  - Clock
  - Button
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_button2 == "pushed") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.152
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.051
    validation_elapsed_time: 0.017
- command: 버튼3이 두 번 눌렸으면 알람의 사이렌을 울려줘.
  command_translated: if button 3 is pressed twice, sound the alarm's siren.
  devices:
  - FallDetector
  - Clock
  - Button
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      buttonPressCount := 0
      if ((#Buttonx4).buttonx4_button3 == "pushed_2x") {
        buttonPressCount = buttonPressCount + 1
        if (buttonPressCount == 2) {
          (#Alarm).alarm_siren()
        }
      } else {
        buttonPressCount = 0
      }
  model_info:
    elapsed_time: 5.025
    bge_elapsed_time: 0.085
    llm_elapsed_time: 4.923
    validation_elapsed_time: 0.016
- command: 버튼4가 위로 스와이프되었으면 알람의 사이렌을 울려줘.
  command_translated: if button 4 is swiped up, sound the alarm's siren.
  devices:
  - FallDetector
  - Clock
  - Button
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_button4 == "swipe_up") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.216
    bge_elapsed_time: 0.105
    llm_elapsed_time: 3.095
    validation_elapsed_time: 0.016
- command: 버튼 개수가 4개면 알람의 사이렌을 울려줘.
  command_translated: If the number of buttons is 4, sound the alarm's siren.
  devices:
  - Clock
  - Button
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Buttonx4).buttonx4_numberOfButtons == 4) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.22
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.118
    validation_elapsed_time: 0.017
- command: 4개짜리 버튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the button x4 via the speaker.
  devices:
  - Clock
  - Button
  - Recorder
  - Window
  - Speaker
  - Timer
  - Buttonx4
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      supported_values = (#Buttonx4).buttonx4_supportedButtonValues
      (#Speaker).mediaPlayback_speak(supported_values)
  model_info:
    elapsed_time: 3.04
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.938
    validation_elapsed_time: 0.016
- command: 5와 3을 더해줘.
  command_translated: Add 5 and 3.
  devices:
  - Clock
  - Valve
  - Feeder
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Calculator
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_add(5, 3)
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 3.038
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.94
    validation_elapsed_time: 0.017
- command: 10을 2로 나눠줘.
  command_translated: Divide 10 by 2.
  devices:
  - Shade
  - Clock
  - Valve
  - Fan
  - Feeder
  - Relay
  - Speaker
  - Calculator
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result = (#Calculator).calculator_div(10.0, 2.0)
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 3.258
    bge_elapsed_time: 0.082
    llm_elapsed_time: 3.159
    validation_elapsed_time: 0.017
- command: 10을 3으로 나눈 나머지를 구해.
  command_translated: Find the remainder of 10 divided by 3.
  devices:
  - FallDetector
  - Shade
  - Clock
  - Valve
  - Feeder
  - Relay
  - Speaker
  - Calculator
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      remainder = (#Calculator).calculator_mod(10, 3)
      (#Speaker).mediaPlayback_speak("The remainder of 10 divided by 3 is " + remainder.calculator_mod())
  model_info:
    elapsed_time: 3.394
    bge_elapsed_time: 0.083
    llm_elapsed_time: 3.289
    validation_elapsed_time: 0.022
- command: 7과 8을 곱해줘.
  command_translated: Multiply 7 and 8.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Fan
  - Feeder
  - Siren
  - Relay
  - Speaker
  - Calculator
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := (#Calculator).calculator_mul(7, 8)
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 2.967
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.869
    validation_elapsed_time: 0.017
- command: 15에서 4를 빼줘.
  command_translated: Subtract 4 from 15.
  devices:
  - Clock
  - Button
  - Valve
  - Feeder
  - Curtain
  - Speaker
  - Calculator
  - Timer
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      result := 15 - 4
      (#Speaker).mediaPlayback_speak("The result is " + result)
  model_info:
    elapsed_time: 2.903
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.806
    validation_elapsed_time: 0.017
- command: 카메라의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the camera is powered on.
  devices:
  - MotionSensor
  - Camera
  - Clock
  - Siren
  - Relay
  - Window
  - Alarm
  - Charger
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Camera).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.733
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.632
    validation_elapsed_time: 0.017
- command: 가장 최근에 찍은 사진을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.
  command_translated: Send an email with the most recent photo as an attachment to 'test@example.com' with the subject line "Photo" and the content "This is a photo".
  devices:
  - EmailProvider
  - LightSensor
  - Clock
  - Camera
  - Window
  - DoorLock
  - Speaker
  - ContactSensor
  generated_code:
  - name: "SendEmailWithPhoto"
    cron: ""
    period: -1
    code: |-
      email_body := "This is a photo"
      (#Camera).camera_take() := last_photo
      (#EmailProvider).emailProvider_sendMailWithFile(toAddress: "test@example.clock_isHoliday", title: "Photo", text: email_body, file: last_photo)
  model_info:
    elapsed_time: 3.813
    bge_elapsed_time: 0.096
    llm_elapsed_time: 3.696
    validation_elapsed_time: 0.021
- command: 가장 최근에 찍은 동영상을 첨부파일로 이메일을 'test@example.com' 주소, 제목 '동영상'과 내용 '동영상입니다.'로 보내줘
  command_translated: Send an email with the most recent video as an attachment to 'test@example.com' with the subject line "Video" and the content "This is a video.
  devices:
  - EmailProvider
  - Clock
  - Camera
  - Window
  - DoorLock
  - Speaker
  - Recorder
  generated_code:
  - name: "SendEmailWithVideo"
    cron: ""
    period: -1
    code: |-
      if ((#Camera).camera_video != null) {
        (#EmailProvider).emailProvider_sendMailWithFile(toAddress: "test@example.clock_isHoliday", title: "Video", text: "This is a video.", file: (#Camera).camera_video)
      }
  model_info:
    elapsed_time: 3.919
    bge_elapsed_time: 0.093
    llm_elapsed_time: 3.805
    validation_elapsed_time: 0.02
- command: 카메라를 꺼줘.
  command_translated: Turn off the camera.
  devices:
  - MotionSensor
  - Camera
  - Clock
  - GasValve
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_off()
  model_info:
    elapsed_time: 2.144
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.046
    validation_elapsed_time: 0.017
- command: 카메라를 켜줘.
  command_translated: Turn on the camera.
  devices:
  - Camera
  - Clock
  - Relay
  - Irrigator
  - Buttonx4
  - Blind
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_on()
  model_info:
    elapsed_time: 2.195
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.096
    validation_elapsed_time: 0.017
- command: 카메라의 전원을 토글해줘.
  command_translated: Toggle the camera's power.
  devices:
  - SmartPlug
  - Camera
  - Clock
  - Relay
  - Switch
  - Blind
  - Charger
  - Speaker
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).switch_toggle()
  model_info:
    elapsed_time: 2.168
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.069
    validation_elapsed_time: 0.017
- command: 카메라로 사진을 찍어줘.
  command_translated: Take a photo with the camera.
  devices:
  - Camera
  - Clock
  - Window
  - Blind
  - Charger
  - Speaker
  - Timer
  - Recorder
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_take()
  model_info:
    elapsed_time: 2.081
    bge_elapsed_time: 0.081
    llm_elapsed_time: 1.983
    validation_elapsed_time: 0.017
- command: 카메라로 10초 동안 속도 2로 타임랩스 영상을 촬영해줘.
  command_translated: Take a time-lapse video with the camera at speed 2 for 10 seconds.
  devices:
  - Clock
  - Camera
  - Fan
  - Buttonx4
  - Charger
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Camera).camera_takeTimelapse(duration: 10.0, speed: 2.0)
  model_info:
    elapsed_time: 2.789
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.682
    validation_elapsed_time: 0.017
- command: 충전기의 전압이 230볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger's voltage is above 230 volts.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).voltageMeasurement_voltage > 230.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.979
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.875
    validation_elapsed_time: 0.017
- command: 충전기의 상태가 충전 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the charger's status is charging.
  devices:
  - Clock
  - Siren
  - Window
  - Alarm
  - Charger
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).chargingState_chargingState == "charging") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.89
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.788
    validation_elapsed_time: 0.017
- command: 충전기의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the charger is drawing more than 10 amps.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - Charger
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Charger).currentMeasurement_current > 10.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.951
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.848
    validation_elapsed_time: 0.017
- command: 충전기가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Annonce the status supported by the charger via the speaker.
  devices:
  - Clock
  - Window
  - Charger
  - Speaker
  - Pump
  - Recorder
  - SoundSensor
  - TemperatureSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The charger supports these charging states: " + (#Charger).chargingState_supportedChargingStates)
  model_info:
    elapsed_time: 2.988
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.887
    validation_elapsed_time: 0.016
- command: 오늘 날짜가 2025년 5월 12일이면 알람의 사이렌을 울려줘.
  command_translated: If today's date is May 12, 2025, sound the alarm's siren.
  devices:
  - Clock
  - MenuProvider
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_date == 20250512) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.992
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.889
    validation_elapsed_time: 0.017
- command: 현재 시간이 2025년 5월 12일 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3:15 PM on May 12, 2025, sound the alarm's siren.
  devices:
  - Clock
  - Camera
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: "15 15 12 5 2025"
    period: -1
    code: |-
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 2.795
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.69
    validation_elapsed_time: 0.016
- command: 오늘이 20일이면 알람의 사이렌을 울려줘
  command_translated: If today is the 20th, sound the alarm siren
  devices:
  - FallDetector
  - Clock
  - MenuProvider
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_day == 20) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.777
    bge_elapsed_time: 0.097
    llm_elapsed_time: 2.663
    validation_elapsed_time: 0.017
- command: 현재 시간이 오후 3시이면 알람의 사이렌을 울려줘.
  command_translated: If the current time is 3pm, sound the alarm's siren.
  devices:
  - Clock
  - Camera
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: "0 15 * * *"
    period: -1
    code: |-
      if (clock_time == 1500) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.02
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.919
    validation_elapsed_time: 0.017
- command: 오늘이 공휴일이면 알람의 사이렌을 울려줘.
  command_translated: If today is a holiday, sound the alarm's siren.
  devices:
  - FallDetector
  - Clock
  - MenuProvider
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_isHoliday == true) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.724
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.623
    validation_elapsed_time: 0.017
- command: 지금이 30분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 30 minutes from now, sound the alarm's siren.
  devices:
  - Clock
  - Siren
  - Alarm
  - Speaker
  - Calculator
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      wait until(#Clock).clock_datetime + 30 * 60 <= #Clock).clock_datetime
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 3.04
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.937
    validation_elapsed_time: 0.017
- command: 지금이 5월이면 알람의 사이렌을 울려줘.
  command_translated: If it's May, sound the alarm siren.
  devices:
  - FallDetector
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_month == 5) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.714
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.614
    validation_elapsed_time: 0.016
- command: 지금이 40초이면 알람의 사이렌을 울려줘.
  command_translated: If it's 40 seconds now, sound the alarm's siren.
  devices:
  - FallDetector
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      if ( (#Clock).clock_second == 40 ) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.85
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.748
    validation_elapsed_time: 0.016
- command: 지금이 오후 3시 15분이면 알람의 사이렌을 울려줘.
  command_translated: If it's 3:15pm, blare the siren on the alarm.
  devices:
  - Clock
  - Siren
  - Relay
  - Window
  - Alarm
  - Blind
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: "0 15 * * *"
    period: -1
    code: |-
      if (clock_time == 1515) {
        all(#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.074
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.972
    validation_elapsed_time: 0.016
- command: 현재 Unix timestamp가 1747031637.23이면 알람의 사이렌을 울려줘.
  command_translated: If the current Unix timestamp is 1747031637.23, sound the alarm siren.
  devices:
  - Clock
  - Camera
  - Siren
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_timestamp == 1747031637.23) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.212
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.108
    validation_elapsed_time: 0.017
- command: 오늘이 금요일이면 알람의 사이렌을 울려줘.
  command_translated: If today is Friday, sound the alarm siren.
  devices:
  - Clock
  - MenuProvider
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_weekday == "friday") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.839
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.739
    validation_elapsed_time: 0.017
- command: 올해가 2025년이면 알람의 사이렌을 울려줘.
  command_translated: If the year is 2025, sound the alarm siren.
  devices:
  - FallDetector
  - Clock
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Clock).clock_year == 2025) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.844
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.743
    validation_elapsed_time: 0.016
- command: 1시간 20분 30초 뒤에 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren in 1 hour, 20 minutes, 30 seconds
  devices:
  - Clock
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "AlarmSirenTrigger"
    cron: ""
    period: -1
    code: |-
      timer_add("alarmTimer", 4230.0)
  - name: "AlarmSirenActivation"
    cron: ""
    period: -1
    code: |-
      wait until(timer_isSet("alarmTimer"))
      (#Alarm).alarm_siren()
  model_info:
    elapsed_time: 4.734
    bge_elapsed_time: 0.086
    llm_elapsed_time: 4.616
    validation_elapsed_time: 0.032
- command: 접촉 센서가 접촉되어 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the contact sensor is in contact.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#ContactSensor).contactSensor_contact == "closed") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.701
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.6
    validation_elapsed_time: 0.016
- command: 커튼이 열림 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the curtain is open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Curtain
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).blind_blind == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.899
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.795
    validation_elapsed_time: 0.02
- command: 커튼이 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the curtain via the speaker.
  devices:
  - Shade
  - Clock
  - Valve
  - Siren
  - Window
  - Curtain
  - Blind
  - Speaker
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The curtains support close, open, pause, and unknown states.")
  model_info:
    elapsed_time: 2.79
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.689
    validation_elapsed_time: 0.016
- command: 커튼을 닫아줘.
  command_translated: Close the curtain.
  devices:
  - Clock
  - Valve
  - Window
  - Curtain
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_close()
  model_info:
    elapsed_time: 2.311
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.212
    validation_elapsed_time: 0.017
- command: 커튼을 열어줘.
  command_translated: Open the curtain.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Window
  - Curtain
  - Blind
  - Speaker
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Curtain).curtain_open()
  model_info:
    elapsed_time: 2.267
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.169
    validation_elapsed_time: 0.017
- command: 커튼의 움직임을 멈춰줘.
  command_translated: Stop the curtain from moving.
  devices:
  - Clock
  - Valve
  - Window
  - Curtain
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain != "closed") {
        (#Curtain).curtain_pause()
      }
  model_info:
    elapsed_time: 3.034
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.932
    validation_elapsed_time: 0.02
- command: 제습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is powered on.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Siren
  - Relay
  - Alarm
  - Refrigerator
  - HumiditySensor
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.013
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.911
    validation_elapsed_time: 0.017
- command: 제습기의 모드가 제습 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the dehumidifier is in dehumidifying mode.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Siren
  - Alarm
  - HumiditySensor
  - Refrigerator
  - Speaker
  - Dehumidifier
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dehumidifier).dehumidifierMode_dehumidifierMode == "dehumidifying") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.482
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.379
    validation_elapsed_time: 0.016
- command: 제습기를 꺼줘.
  command_translated: Turn off the dehumidifier.
  devices:
  - Humidifier
  - Clock
  - Valve
  - AirPurifier
  - Refrigerator
  - HumiditySensor
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_off()
  model_info:
    elapsed_time: 2.339
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.241
    validation_elapsed_time: 0.016
- command: 제습기를 켜줘.
  command_translated: Turn on the dehumidifier.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Window
  - Refrigerator
  - HumiditySensor
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_on()
  model_info:
    elapsed_time: 2.337
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.239
    validation_elapsed_time: 0.016
- command: 제습기의 전원을 토글해줘.
  command_translated: Toggle the dehumidifier's power.
  devices:
  - Humidifier
  - SmartPlug
  - Clock
  - AirPurifier
  - Relay
  - Refrigerator
  - Blind
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "ToggleDehumidifierPower"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).switch_toggle()
  model_info:
    elapsed_time: 2.555
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.455
    validation_elapsed_time: 0.016
- command: 제습기를 냉각 모드로 설정해줘.
  command_translated: Set the dehumidifier to cooling mode.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - AirConditioner
  - AirPurifier
  - Refrigerator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dehumidifier).dehumidifierMode_setDehumidifierMode('cooling')
  model_info:
    elapsed_time: 2.896
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.796
    validation_elapsed_time: 0.016
- command: 식기세척기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the dishwasher is powered on.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  - Timer
  - Dishwasher
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).dishwasherMode_dishwasherMode != "off") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.152
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.051
    validation_elapsed_time: 0.016
- command: 식기세척기의 모드가 에코 모드면 알람의 사이렌을 울려줘.
  command_translated: If the dishwasher is in Eco mode, the alarm will sound a siren.
  devices:
  - FallDetector
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Dishwasher
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Dishwasher).dishwasherMode_dishwasherMode == "eco") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.07
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.968
    validation_elapsed_time: 0.016
- command: 식기세척기를 꺼줘.
  command_translated: Turn off the dishwasher.
  devices:
  - Humidifier
  - Clock
  - Timer
  - GasValve
  - Refrigerator
  - Speaker
  - Pump
  - Dishwasher
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_off()
  model_info:
    elapsed_time: 2.35
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.253
    validation_elapsed_time: 0.017
- command: 식기세척기를 켜줘.
  command_translated: Turn on the dishwasher.
  devices:
  - Humidifier
  - Clock
  - Feeder
  - Irrigator
  - Refrigerator
  - Speaker
  - Pump
  - Dishwasher
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_on()
  model_info:
    elapsed_time: 2.382
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.285
    validation_elapsed_time: 0.016
- command: 식기세척기의 전원을 토글해줘.
  command_translated: Toggle the dishwasher's power.
  devices:
  - SmartPlug
  - Clock
  - Switch
  - Relay
  - Blind
  - Charger
  - Speaker
  - Dishwasher
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).switch_toggle()
  model_info:
    elapsed_time: 2.266
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.167
    validation_elapsed_time: 0.016
- command: 식기세척기를 자동 모드로 설정해줘.
  command_translated: Set the dishwasher to automatic mode.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - Irrigator
  - Refrigerator
  - Blind
  - Speaker
  - Dishwasher
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Dishwasher).dishwasherMode_setDishwasherMode('auto')
  model_info:
    elapsed_time: 2.69
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.59
    validation_elapsed_time: 0.016
- command: 도어락이 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the door lock is open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Curtain
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#DoorLock).doorControl_door == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.893
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.788
    validation_elapsed_time: 0.02
- command: 도어락을 닫아줘.
  command_translated: Close the door lock.
  devices:
  - Clock
  - Valve
  - Window
  - Curtain
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_close()
  model_info:
    elapsed_time: 2.246
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.148
    validation_elapsed_time: 0.017
- command: 도어락을 열어줘.
  command_translated: Open the door lock.
  devices:
  - Clock
  - Valve
  - Curtain
  - Window
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#DoorLock).doorControl_open()
  model_info:
    elapsed_time: 2.252
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.153
    validation_elapsed_time: 0.016
- command: 이메일을 'test@example.com' 주소로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.
  command_translated: Send an email to 'test@example.com' with the subject line "Alert" and the content "This is an emergency".
  devices:
  - EmailProvider
  - Clock
  - Siren
  - Window
  - GasValve
  - DoorLock
  - Speaker
  - ContactSensor
  generated_code:
  - name: "SendEmailAlert"
    cron: ""
    period: -1
    code: |-
      (#EmailProvider).emailProvider_sendMail(toAddress: "test@example.clock_isHoliday", title: "Alert", text: "This is an emergency.")
  model_info:
    elapsed_time: 2.969
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.858
    validation_elapsed_time: 0.02
- command: 선풍기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan is powered on.
  devices:
  - SmartPlug
  - Clock
  - Fan
  - Siren
  - Window
  - Relay
  - Alarm
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).fanControl_fanSpeed > 0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.921
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.82
    validation_elapsed_time: 0.016
- command: 선풍기의 속도가 2000RPM 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the fan speed is above 2000 RPM.
  devices:
  - Clock
  - Fan
  - Siren
  - Alarm
  - SmokeDetector
  - Charger
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Fan).fanControl_fanSpeed > 2000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.033
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.931
    validation_elapsed_time: 0.016
- command: 선풍기의 속도를 1500RPM으로 설정해줘.
  command_translated: Set the speed of the fan to 1500 RPM.
  devices:
  - Humidifier
  - Clock
  - Fan
  - Valve
  - AirPurifier
  - Window
  - Charger
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setFanSpeed(1500)
  model_info:
    elapsed_time: 2.483
    bge_elapsed_time: 0.091
    llm_elapsed_time: 2.375
    validation_elapsed_time: 0.016
- command: 선풍기의 속도를 80퍼센트로 설정해줘.
  command_translated: Set the speed of the fan to 80 percent.
  devices:
  - Humidifier
  - Clock
  - Fan
  - AirPurifier
  - Window
  - Charger
  - Speaker
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setPercent(80)
  model_info:
    elapsed_time: 2.409
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.309
    validation_elapsed_time: 0.016
- command: 선풍기를 꺼줘.
  command_translated: Turn off the fan.
  devices:
  - Humidifier
  - Clock
  - Fan
  - Valve
  - Window
  - GasValve
  - Speaker
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_off()
  model_info:
    elapsed_time: 2.151
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.054
    validation_elapsed_time: 0.016
- command: 선풍기를 켜줘.
  command_translated: Turn on the fan.
  devices:
  - Humidifier
  - Clock
  - Fan
  - Valve
  - Relay
  - Irrigator
  - Speaker
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).switch_on()
  model_info:
    elapsed_time: 2.153
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.056
    validation_elapsed_time: 0.016
- command: 선풍기의 전원을 토글해줘.
  command_translated: Toggle the fan's power.
  devices:
  - SmartPlug
  - Clock
  - Fan
  - Switch
  - Relay
  - Blind
  - Charger
  - Speaker
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Fan).fanControl_setPercent(100 - (#Fan).fanControl_percent)
  model_info:
    elapsed_time: 2.68
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.582
    validation_elapsed_time: 0.016
- command: 사료 공급기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the feeder is powered on.
  devices:
  - RobotCleaner
  - Clock
  - Feeder
  - Siren
  - Relay
  - Irrigator
  - Alarm
  - Charger
  - Speaker
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.89
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.788
    validation_elapsed_time: 0.017
- command: 사료 공급기의 상태가 급식 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the feeder's status is feeding.
  devices:
  - RobotCleaner
  - Clock
  - LeakSensor
  - Feeder
  - Siren
  - Window
  - Alarm
  - Speaker
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Feeder).feederOperatingState_feederOperatingState == "feeding") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.078
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.976
    validation_elapsed_time: 0.017
- command: 사료 공급기를 꺼줘.
  command_translated: Turn off the feeder.
  devices:
  - RobotCleaner
  - Clock
  - Feeder
  - GasValve
  - Speaker
  - Pump
  - AirPurifier
  - Recorder
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_off()
  model_info:
    elapsed_time: 2.321
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.222
    validation_elapsed_time: 0.017
- command: 사료 공급기를 켜줘.
  command_translated: Turn on the feeder.
  devices:
  - RobotCleaner
  - Clock
  - Feeder
  - Irrigator
  - Relay
  - Speaker
  - Pump
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_on()
  model_info:
    elapsed_time: 2.252
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.154
    validation_elapsed_time: 0.017
- command: 사료 공급기의 전원을 토글해줘.
  command_translated: Toggle the power of the feeder.
  devices:
  - RobotCleaner
  - SmartPlug
  - Clock
  - Feeder
  - Relay
  - Charger
  - Speaker
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).switch_toggle()
  model_info:
    elapsed_time: 2.222
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.123
    validation_elapsed_time: 0.017
- command: 사료 공급기의 사료 공급량을 100그램으로 설정해줘.
  command_translated: Set the feeder's feed amount to 100 grams.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - MenuProvider
  - Feeder
  - Blind
  - Speaker
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).feederPortion_setFeedPortion(portion: 100.0, unit: "grams")
  model_info:
    elapsed_time: 3.045
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.944
    validation_elapsed_time: 0.017
- command: 사료 공급기의 사료 공급을 시작해줘.
  command_translated: Start feeding the feeder.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - AirConditioner
  - Feeder
  - Irrigator
  - Speaker
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Feeder).feederOperatingState_startFeeding()
  model_info:
    elapsed_time: 2.494
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.397
    validation_elapsed_time: 0.017
- command: 가스 미터의 가스 사용량이 500kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter shows gas usage of 500 kWh or more.
  devices:
  - Clock
  - LeakSensor
  - GasMeter
  - Siren
  - GasValve
  - Alarm
  - HumiditySensor
  - Charger
  - Speaker
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeter >= 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.007
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.904
    validation_elapsed_time: 0.016
- command: 가스 미터의 가스 발열량이 1000kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas meter reads more than 1000 kcal of gas.
  devices:
  - Clock
  - GasMeter
  - Siren
  - GasValve
  - Alarm
  - HumiditySensor
  - SmokeDetector
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeterCalorific > 1000.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.178
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.075
    validation_elapsed_time: 0.017
- command: 가스 미터의 누적 가스 사용 시간이 10000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the siren of the alarm if the gas meter has a cumulative gas usage time of 10000 seconds or more.
  devices:
  - Clock
  - GasMeter
  - Siren
  - GasValve
  - Alarm
  - HumiditySensor
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeterTime >= 10000) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.051
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.946
    validation_elapsed_time: 0.017
- command: 가스 미터의 가스 사용량이 20세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas meter reads more than 20 cubic meters of gas.
  devices:
  - Clock
  - LeakSensor
  - GasMeter
  - Siren
  - GasValve
  - Alarm
  - HumiditySensor
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasMeter).gasMeter_gasMeterVolume > 20.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.944
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.836
    validation_elapsed_time: 0.021
- command: 가스 밸브가 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is open.
  devices:
  - Clock
  - GasMeter
  - Valve
  - Siren
  - Window
  - GasValve
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).valve_valve == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.061
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.959
    validation_elapsed_time: 0.017
- command: 가스 밸브를 닫아줘.
  command_translated: Close the gas valve.
  devices:
  - Humidifier
  - Clock
  - GasMeter
  - Valve
  - Window
  - Relay
  - GasValve
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_close()
  model_info:
    elapsed_time: 2.325
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.226
    validation_elapsed_time: 0.017
- command: 가스 밸브를 열어줘.
  command_translated: Open the gas valve.
  devices:
  - Clock
  - GasMeter
  - Valve
  - AirPurifier
  - Window
  - Relay
  - GasValve
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#GasValve).valve_open()
  model_info:
    elapsed_time: 2.34
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.24
    validation_elapsed_time: 0.017
- command: 가스 밸브의 가스 사용량이 1000kWh 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve's gas usage is over 1000 kWh.
  devices:
  - Clock
  - LeakSensor
  - GasMeter
  - Valve
  - Siren
  - Alarm
  - GasValve
  - Charger
  - Speaker
  - Pump
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeter > 1000.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.269
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.162
    validation_elapsed_time: 0.02
- command: 가스 밸브의 가스 발열량이 500kcal 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a gas calorific value of 500 kcal or more.
  devices:
  - Clock
  - GasMeter
  - Valve
  - Fan
  - Siren
  - Alarm
  - GasValve
  - SmokeDetector
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterCalorific >= 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.239
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.135
    validation_elapsed_time: 0.016
- command: 가스 밸브의 누적 가스 사용 시간이 5000초 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the gas valve has a cumulative gas usage time of 5000 seconds or more.
  devices:
  - Clock
  - Camera
  - GasMeter
  - Valve
  - Siren
  - Alarm
  - GasValve
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterTime >= 5000.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.2
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.095
    validation_elapsed_time: 0.017
- command: 가스 밸브의 가스 사용량이 34세제곱미터 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the gas valve is using more than 34 cubic meters of gas.
  devices:
  - Clock
  - LeakSensor
  - GasMeter
  - Valve
  - Siren
  - Alarm
  - GasValve
  - HumiditySensor
  - Speaker
  - Pump
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#GasValve).gasMeter_gasMeterVolume > 34.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.155
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.051
    validation_elapsed_time: 0.017
- command: 가습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier is powered on.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Siren
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.978
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.878
    validation_elapsed_time: 0.017
- command: 가습기의 모드가 자동이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the humidifier's mode is Auto.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Siren
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Humidifier).airPurifierFanMode_airPurifierFanMode == "auto") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.383
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.281
    validation_elapsed_time: 0.017
- command: 가습기를 꺼줘.
  command_translated: Turn off the humidifier.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - AirQualityDetector
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_off()
  model_info:
    elapsed_time: 2.277
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.175
    validation_elapsed_time: 0.02
- command: 가습기를 켜줘.
  command_translated: Turn on the humidifier.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - AirQualityDetector
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_on()
  model_info:
    elapsed_time: 2.286
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.185
    validation_elapsed_time: 0.02
- command: 가습기의 전원을 토글해줘.
  command_translated: Toggle the humidifier's power.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - Relay
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).switch_toggle()
  model_info:
    elapsed_time: 2.252
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.153
    validation_elapsed_time: 0.017
- command: 가습기를 강 모드로 설정해줘.
  command_translated: Set the humidifier to strong mode.
  devices:
  - Humidifier
  - Clock
  - AirPurifier
  - AirQualityDetector
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - Dehumidifier
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Humidifier).humidifierMode_setHumidifierMode('high')
  model_info:
    elapsed_time: 2.643
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.542
    validation_elapsed_time: 0.02
- command: 습도 센서의 상대 습도가 70퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity sensor reads a relative humidity of 70 percent or higher.
  devices:
  - Humidifier
  - Clock
  - Siren
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.119
    bge_elapsed_time: 0.088
    llm_elapsed_time: 3.015
    validation_elapsed_time: 0.017
- command: 관개 장치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator is powered on.
  devices:
  - SmartPlug
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Irrigator
  - Alarm
  - Refrigerator
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.002
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.896
    validation_elapsed_time: 0.02
- command: 관개 장치의 급수량이 3리터이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator has 3 liters of water.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Feeder
  - Siren
  - Irrigator
  - Alarm
  - Refrigerator
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).irrigatorPortion_waterPortion >= 3.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.418
    bge_elapsed_time: 0.107
    llm_elapsed_time: 3.294
    validation_elapsed_time: 0.017
- command: 관개 장치의 상태가 급수 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the irrigator's status is watering.
  devices:
  - Clock
  - LeakSensor
  - Feeder
  - Siren
  - Irrigator
  - Window
  - Alarm
  - Refrigerator
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Irrigator).irrigatorOperatingState_irrigatorOperatingState == "watering") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.416
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.312
    validation_elapsed_time: 0.017
- command: 관개 장치를 꺼줘.
  command_translated: Turn off the irrigator.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Valve
  - Irrigator
  - Refrigerator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_off()
  model_info:
    elapsed_time: 2.297
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.2
    validation_elapsed_time: 0.017
- command: 관개 장치를 켜줘.
  command_translated: Turn on the irrigator.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Feeder
  - Irrigator
  - Refrigerator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_on()
  model_info:
    elapsed_time: 2.371
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.273
    validation_elapsed_time: 0.016
- command: 관개 장치의 전원을 토글해줘.
  command_translated: Toggle the power of the irrigator.
  devices:
  - SmartPlug
  - Humidifier
  - Clock
  - Relay
  - Irrigator
  - Refrigerator
  - Charger
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).switch_toggle()
  model_info:
    elapsed_time: 2.292
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.192
    validation_elapsed_time: 0.017
- command: 관개 장치의 급수량을 5리터로 설정해줘.
  command_translated: Set the water supply of the irrigator to 5 liters.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Feeder
  - Irrigator
  - Refrigerator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).irrigatorPortion_setWaterPortion(portion: 5.0, unit: liters)
  model_info:
    elapsed_time: 3.085
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.984
    validation_elapsed_time: 0.016
- command: 관개 장치의 급수를 시작해줘.
  command_translated: Start watering the irrigator.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Feeder
  - Irrigator
  - Refrigerator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Irrigator).irrigatorOperatingState_startWatering()
  model_info:
    elapsed_time: 2.599
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.501
    validation_elapsed_time: 0.017
- command: 누수가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a leak is detected.
  devices:
  - FallDetector
  - MotionSensor
  - LeakSensor
  - Clock
  - Siren
  - Alarm
  - SmokeDetector
  - Speaker
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#LeakSensor).leakSensor_leakage == "detected") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.948
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.847
    validation_elapsed_time: 0.016
- command: 조명이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light is on.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Window
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.889
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.783
    validation_elapsed_time: 0.02
- command: 조명의 색조가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a hue of 30, sound the alarm's siren.
  devices:
  - LightSensor
  - FallDetector
  - Clock
  - Light
  - Siren
  - Alarm
  - Blind
  - Speaker
  - SoundSensor
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_hue == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.112
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.006
    validation_elapsed_time: 0.02
- command: 조명의 채도가 30이면 알람의 사이렌을 울려줘.
  command_translated: If the light has a saturation of 30, sound the alarm's siren.
  devices:
  - LightSensor
  - Clock
  - LeakSensor
  - Light
  - Siren
  - Alarm
  - Charger
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).colorControl_saturation == 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.025
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.922
    validation_elapsed_time: 0.017
- command: 조명 밝기가 100이면 알람의 사이렌을 울려줘
  command_translated: Sound the alarm's siren if the light brightness is 100
  devices:
  - LightSensor
  - FallDetector
  - Clock
  - Light
  - Siren
  - Alarm
  - SmokeDetector
  - Blind
  - Speaker
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Light).lightLevel_light == 100.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.036
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.935
    validation_elapsed_time: 0.017
- command: 조명을 빨간색으로 설정해줘.
  command_translated: Set the light to red.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setColor("RED")
  model_info:
    elapsed_time: 2.465
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.361
    validation_elapsed_time: 0.017
- command: 조명의 색조를 70으로 설정해줘.
  command_translated: Set the hue of the light to 70.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Shade
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setHue(70.0)
  model_info:
    elapsed_time: 2.68
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.576
    validation_elapsed_time: 0.02
- command: 조명의 채도를 90으로 설정해줘.
  command_translated: Set the saturation of the light to 90.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Shade
  - WeatherProvider
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).colorControl_setSaturation(90.0)
  model_info:
    elapsed_time: 2.683
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.579
    validation_elapsed_time: 0.02
- command: 5의 속도로 조명의 밝기를 80으로 설정해줘.
  command_translated: Set the brightness of the light to 80 with a speed of 5.
  devices:
  - LightSensor
  - Clock
  - Fan
  - Light
  - Siren
  - Alarm
  - Charger
  - Speaker
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switchLevel_setLevel(level: 80, rate: 5)
  model_info:
    elapsed_time: 2.784
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.679
    validation_elapsed_time: 0.02
- command: 조명의 경고 모드를 켜줘.
  command_translated: Turn on alert mode for lights.
  devices:
  - LightSensor
  - FallDetector
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  generated_code:
  - name: Scenario1
    cron: ''
    period: -1
    code: ""
  model_info:
    elapsed_time: 44.292
    bge_elapsed_time: 0.082
    llm_elapsed_time: 44.193
    validation_elapsed_time: 0.017
- command: 조명을 꺼줘.
  command_translated: Turn off the lights.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_off()
  model_info:
    elapsed_time: 2.276
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.177
    validation_elapsed_time: 0.017
- command: 조명을 켜줘.
  command_translated: Turn on the lights.
  devices:
  - LightSensor
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Blind
  - Speaker
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_on()
  model_info:
    elapsed_time: 2.306
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.204
    validation_elapsed_time: 0.02
- command: 조명의 전원을 토글해줘.
  command_translated: Toggle the power of the light.
  devices:
  - SmartPlug
  - LightSensor
  - Clock
  - Light
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Light).switch_toggle()
  model_info:
    elapsed_time: 2.209
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.11
    validation_elapsed_time: 0.017
- command: 조도 센서의 밝기 값이 500룩스 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the light sensor's brightness value is above 500 lux.
  devices:
  - LightSensor
  - Clock
  - LeakSensor
  - Light
  - Siren
  - Alarm
  - HumiditySensor
  - Speaker
  - SoundSensor
  - TemperatureSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#LightSensor).lightLevel_light > 500.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.038
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.934
    validation_elapsed_time: 0.016
- command: 오늘 학생식당 점심 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's 학생식당 lunch menu via the speaker.
  devices:
  - Clock
  - MenuProvider
  - Feeder
  - Speaker
  - Timer
  - Dishwasher
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("Today's 학생식당 lunch menu is " + (#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 3.081
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.98
    validation_elapsed_time: 0.016
- command: 오늘의 메뉴를 스피커로 출력해줘.
  command_translated: Announce today's menu via the speaker.
  devices:
  - Clock
  - MenuProvider
  - Feeder
  - Buttonx4
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 2.609
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.51
    validation_elapsed_time: 0.016
- command: 오늘의 식당을 스피커로 출력해줘.
  command_translated: Announce today's restaurant via the speaker.
  devices:
  - Clock
  - MenuProvider
  - Pump
  - Feeder
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak(#MenuProvider).menuProvider_todayMenu())
  model_info:
    elapsed_time: 2.573
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.473
    validation_elapsed_time: 0.016
- command: 모션 센서가 활성 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the motion sensor is active.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - ContactSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#MotionSensor).motionSensor_motion == "active") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.712
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.611
    validation_elapsed_time: 0.016
- command: 움직임이 감지되고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if motion is detected.
  devices:
  - MotionSensor
  - FallDetector
  - LeakSensor
  - Clock
  - Siren
  - Alarm
  - SmokeDetector
  - Speaker
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#MotionSensor).motionSensor_motion == "active") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.716
    bge_elapsed_time: 0.095
    llm_elapsed_time: 2.604
    validation_elapsed_time: 0.016
- command: 존재 감지 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a presence sensor is detected.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - ContactSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#PresenceSensor).presenceSensor_presence == "present") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.706
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.605
    validation_elapsed_time: 0.016
- command: 펌프의 현재 동작 모드가 최대이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the pump's current operating mode is maximum.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Pump
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_currentOperationMode == "maximum") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.922
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.821
    validation_elapsed_time: 0.016
- command: 펌프의 설정 동작 모드가 기본이면 알람의 사이렌을 울려줘.
  command_translated: If the pump's set operation mode is default, sound the alarm's siren.
  devices:
  - Clock
  - LeakSensor
  - Timer
  - Valve
  - Siren
  - Irrigator
  - Alarm
  - Speaker
  - Pump
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pumpOperationMode_operationMode == "default") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.003
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.899
    validation_elapsed_time: 0.016
- command: 펌프의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the pump is powered on.
  devices:
  - SmartPlug
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Irrigator
  - Alarm
  - Charger
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pump_pump == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.991
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.89
    validation_elapsed_time: 0.017
- command: 펌프가 지원하는 모드를 스피커로 출력해줘.
  command_translated: Announce the modes supported by the pump via the speaker.
  devices:
  - Clock
  - LeakSensor
  - Valve
  - Relay
  - Speaker
  - Pump
  - Recorder
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).switch_switch == "off") {
        (#Speaker).switch_on()
      }
  - name: "Scenario2"
    cron: ""
    period: -1
    code: |-
      wait until((#Speaker).switch_switch == "on")
      (#Speaker).mediaPlayback_speak("The pump supports normal, minimum, maximum, and local setting modes.")
  model_info:
    elapsed_time: 4.596
    bge_elapsed_time: 0.085
    llm_elapsed_time: 4.48
    validation_elapsed_time: 0.031
- command: 펌프가 열려있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the pump is open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Pump).pump_pump == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.985
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.881
    validation_elapsed_time: 0.02
- command: 펌프의 동작 모드를 최대로 설정해줘.
  command_translated: Set the pump's operation mode to maximum.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Irrigator
  - Blind
  - Speaker
  - Calculator
  - Pump
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pumpOperationMode_setOperationMode('maximum')
  model_info:
    elapsed_time: 2.601
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.501
    validation_elapsed_time: 0.017
- command: 펌프를 꺼줘.
  command_translated: Turn off the pump.
  devices:
  - Humidifier
  - Clock
  - Timer
  - Valve
  - Relay
  - GasValve
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_off()
  model_info:
    elapsed_time: 2.221
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.123
    validation_elapsed_time: 0.016
- command: 펌프를 켜줘.
  command_translated: Turn on the pump.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Valve
  - Relay
  - Irrigator
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_on()
  model_info:
    elapsed_time: 2.212
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.114
    validation_elapsed_time: 0.016
- command: 펌프의 전원을 토글해줘.
  command_translated: Toggle the power of the pump.
  devices:
  - SmartPlug
  - Humidifier
  - Clock
  - Valve
  - Switch
  - Relay
  - Charger
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).switch_toggle()
  model_info:
    elapsed_time: 2.15
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.05
    validation_elapsed_time: 0.016
- command: 펌프를 닫아줘.
  command_translated: Close the pump.
  devices:
  - Humidifier
  - Clock
  - Timer
  - Valve
  - Relay
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pump_close()
  model_info:
    elapsed_time: 2.265
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.167
    validation_elapsed_time: 0.017
- command: 펌프를 열어줘.
  command_translated: Open the pump.
  devices:
  - Humidifier
  - Clock
  - LeakSensor
  - Valve
  - Relay
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Pump).pump_open()
  model_info:
    elapsed_time: 2.243
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.145
    validation_elapsed_time: 0.016
- command: 냉장고의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the refrigerator is powered on.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Irrigator
  - Alarm
  - Switch
  - Refrigerator
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.01
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.908
    validation_elapsed_time: 0.016
- command: 냉장고의 성에 제거 기능이 켜저 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's defrost function is on.
  devices:
  - FallDetector
  - Clock
  - Siren
  - Irrigator
  - Alarm
  - Refrigerator
  - Speaker
  - Dehumidifier
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_defrost == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.035
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.933
    validation_elapsed_time: 0.016
- command: 냉장고의 급속 냉각 기능이 꺼져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the refrigerator's rapid cooling function is turned off.
  devices:
  - Clock
  - LeakSensor
  - AirConditioner
  - Feeder
  - Siren
  - Irrigator
  - Alarm
  - Refrigerator
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_rapidCooling == "off") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.267
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.164
    validation_elapsed_time: 0.017
- command: 냉장고의 급속 냉동 기능이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the refrigerator's rapid freezing function is on.
  devices:
  - FallDetector
  - Clock
  - Siren
  - Irrigator
  - Window
  - Alarm
  - Refrigerator
  - Speaker
  - Timer
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Refrigerator).refrigeration_rapidFreezing == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.107
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.004
    validation_elapsed_time: 0.017
- command: 냉장고를 꺼줘.
  command_translated: Turn off the refrigerator.
  devices:
  - Humidifier
  - Clock
  - Feeder
  - Relay
  - Irrigator
  - GasValve
  - Refrigerator
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_switch = "off"
  model_info:
    elapsed_time: 2.431
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.332
    validation_elapsed_time: 0.016
- command: 냉장고의 전원을 토글해줘.
  command_translated: Toggle the refrigerator's power.
  devices:
  - SmartPlug
  - Clock
  - Feeder
  - Irrigator
  - Switch
  - Relay
  - Refrigerator
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).switch_toggle()
  model_info:
    elapsed_time: 2.259
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.16
    validation_elapsed_time: 0.016
- command: 냉장고의 성에 제거 기능을 켜줘.
  command_translated: Turn on the refrigerator's defrost function.
  devices:
  - Clock
  - Valve
  - Feeder
  - Irrigator
  - Window
  - Refrigerator
  - Speaker
  - Dishwasher
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setDefrost(defrost: "on")
  model_info:
    elapsed_time: 2.648
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.547
    validation_elapsed_time: 0.016
- command: 냉장고의 급속 냉각 기능을 켜줘.
  command_translated: Turn on the refrigerator's rapid cooling function.
  devices:
  - Clock
  - AirConditioner
  - Fan
  - Feeder
  - Irrigator
  - Window
  - Refrigerator
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Refrigerator).refrigeration_setRapidCooling("on")
  model_info:
    elapsed_time: 2.677
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.577
    validation_elapsed_time: 0.017
- command: 냉장고의 급속 냉동 기능을 꺼줘.
  command_translated: Turn off the refrigerator's rapid freezing function.
  devices:
  - Clock
  - Valve
  - Fan
  - Irrigator
  - Relay
  - GasValve
  - Refrigerator
  - Speaker
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      refrigeration_rapidFreezing := false
      refrigeration_setRapidFreezing(refrigeration_rapidFreezing)
  model_info:
    elapsed_time: 2.961
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.86
    validation_elapsed_time: 0.016
- command: 로봇 청소기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the robot vacuum is powered on.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  - Pump
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#RobotCleaner).robotCleanerCleaningMode_robotCleanerCleaningMode != "stop") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.203
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.102
    validation_elapsed_time: 0.016
- command: 로봇 청소기가 자동 모드이면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the robot vacuum is in automatic mode.
  devices:
  - RobotCleaner
  - Clock
  - Valve
  - Siren
  - Irrigator
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#RobotCleaner).robotCleanerCleaningMode_robotCleanerCleaningMode == "auto") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.228
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.127
    validation_elapsed_time: 0.016
- command: 로봇 청소기를 꺼줘.
  command_translated: Turn off the robot vacuum.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - Valve
  - Relay
  - GasValve
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_off()
  model_info:
    elapsed_time: 2.222
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.12
    validation_elapsed_time: 0.021
- command: 로봇 청소기를 켜줘.
  command_translated: Turn on the robot vacuum.
  devices:
  - RobotCleaner
  - Humidifier
  - Clock
  - Valve
  - AirPurifier
  - Relay
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_on()
  model_info:
    elapsed_time: 2.249
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.146
    validation_elapsed_time: 0.021
- command: 로봇 청소기의 전원을 토글해줘.
  command_translated: Toggle the robot vacuum's power.
  devices:
  - RobotCleaner
  - SmartPlug
  - Clock
  - Button
  - Valve
  - Switch
  - Relay
  - Blind
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).switch_toggle()
  model_info:
    elapsed_time: 2.194
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.091
    validation_elapsed_time: 0.021
- command: 로봇 청소기의 청소 모드를 수동으로 설정해줘.
  command_translated: Set the robot vacuum's cleaning mode to manual.
  devices:
  - RobotCleaner
  - Clock
  - Valve
  - Switch
  - Blind
  - Speaker
  - Pump
  - Dishwasher
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#RobotCleaner).robotCleanerCleaningMode_setRobotCleanerCleaningMode('manual')
  model_info:
    elapsed_time: 2.669
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.565
    validation_elapsed_time: 0.021
- command: 쉐이드가 40퍼센트 이상 열려 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is more than 40% open.
  devices:
  - Clock
  - Siren
  - Window
  - Curtain
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel > 40) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.123
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.017
    validation_elapsed_time: 0.02
- command: 쉐이드가 완전히 열려 있는 상태면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the shade is fully open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Shade).windowShadeLevel_shadeLevel == 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.143
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.039
    validation_elapsed_time: 0.02
- command: 쉐이드가 지원하는 상태를 스피커로 출력해줘.
  command_translated: Announce the states supported by the shade via the speaker.
  devices:
  - FallDetector
  - Clock
  - Valve
  - Siren
  - Window
  - Blind
  - Speaker
  - Shade
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The states supported by the shade are: closed, closing, open, opening, partially, paused, and unknown.")
  model_info:
    elapsed_time: 3.106
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.005
    validation_elapsed_time: 0.016
- command: 쉐이드를 50퍼 센트로 설정해줘.
  command_translated: Set the shade to 50 percent.
  devices:
  - Humidifier
  - Clock
  - Fan
  - Light
  - Curtain
  - Blind
  - Speaker
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(50)
  model_info:
    elapsed_time: 2.697
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.597
    validation_elapsed_time: 0.016
- command: 쉐이드를 닫아줘.
  command_translated: Close the shade.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Curtain
  - Window
  - Blind
  - Speaker
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShade_close()
  model_info:
    elapsed_time: 2.23
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.132
    validation_elapsed_time: 0.016
- command: 쉐이드를 열어줘.
  command_translated: Open the shade.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Curtain
  - Window
  - Blind
  - Speaker
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShadeLevel_setShadeLevel(100)
  model_info:
    elapsed_time: 2.529
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.43
    validation_elapsed_time: 0.016
- command: 쉐이드 움직임을 일시 중지해줘.
  command_translated: Pause the shade movement.
  devices:
  - MotionSensor
  - FallDetector
  - Clock
  - Curtain
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  - Shade
  generated_code:
  - name: "PauseShadeMovement"
    cron: ""
    period: -1
    code: |-
      (#Shade).windowShade_pause()
  model_info:
    elapsed_time: 2.308
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.21
    validation_elapsed_time: 0.016
- command: 사이렌이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the siren is on.
  devices:
  - Clock
  - Siren
  - Window
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Alarm).alarm_alarmVolume != "mute") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.781
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.68
    validation_elapsed_time: 0.017
- command: 사이렌 모드가 사이렌이면 알람의 사이렌을 울려줘.
  command_translated: If the siren mode is Siren, sound the alarm's siren.
  devices:
  - MotionSensor
  - Clock
  - Siren
  - Window
  - Alarm
  - Blind
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Siren).sirenMode_sirenMode == "siren") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.983
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.881
    validation_elapsed_time: 0.016
- command: 사이렌을 꺼줘.
  command_translated: Turn off the siren.
  devices:
  - Clock
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_off()
  model_info:
    elapsed_time: 2.156
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.058
    validation_elapsed_time: 0.016
- command: 사이렌을 켜줘.
  command_translated: Turn on the siren.
  devices:
  - Clock
  - Valve
  - Siren
  - Relay
  - Alarm
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_on()
  model_info:
    elapsed_time: 2.163
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.066
    validation_elapsed_time: 0.016
- command: 사이렌 전원을 토글해줘.
  command_translated: Toggle the siren power.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Switch
  - Alarm
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).switch_toggle()
  model_info:
    elapsed_time: 2.165
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.067
    validation_elapsed_time: 0.016
- command: 사이렌 모드를 경광등으로 설정해줘.
  command_translated: Set the siren mode to strobe.
  devices:
  - Clock
  - Siren
  - Alarm
  - Blind
  - Speaker
  - Timer
  - Shade
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Siren).sirenMode_setSirenMode('strobe')
  model_info:
    elapsed_time: 2.534
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.435
    validation_elapsed_time: 0.016
- command: 스마트 플러그의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is powered on.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Siren
  - Relay
  - Alarm
  - DoorLock
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).powerMeter_powerConsumption != "") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.859
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.758
    validation_elapsed_time: 0.017
- command: 스마트 플러그의 전압이 220볼트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is over 220 volts.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Siren
  - Alarm
  - DoorLock
  - Speaker
  - Timer
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).voltageMeasurement_voltage > 220.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.066
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.963
    validation_elapsed_time: 0.017
- command: 스마트 플러그의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the smart plug is drawing more than 10 amps.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Siren
  - Alarm
  - DoorLock
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).currentMeasurement_current > 10.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.0
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.896
    validation_elapsed_time: 0.017
- command: 스마트 플러그의 소비 전력이 1000와트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if a smart plug draws more than 1000 watts.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Siren
  - Alarm
  - DoorLock
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmartPlug).powerMeter_power > 1000.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.076
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.974
    validation_elapsed_time: 0.017
- command: 스마트 플러그를 꺼줘.
  command_translated: Turn off the smart plug.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Television
  - Refrigerator
  - DoorLock
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_off()
  model_info:
    elapsed_time: 2.298
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.195
    validation_elapsed_time: 0.02
- command: 스마트 플러그를 켜줘.
  command_translated: Turn on the smart plug.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Television
  - Refrigerator
  - DoorLock
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_on()
  model_info:
    elapsed_time: 2.303
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.199
    validation_elapsed_time: 0.02
- command: 스마트 플러그의 전원을 토글해줘.
  command_translated: Toggle the power of the smart plug.
  devices:
  - SmartPlug
  - RobotCleaner
  - Clock
  - Relay
  - Television
  - Switch
  - DoorLock
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#SmartPlug).switch_toggle()
  model_info:
    elapsed_time: 2.182
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.082
    validation_elapsed_time: 0.017
- command: 연기 감지기에서 연기가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if smoke is detected by the smoke detector.
  devices:
  - FallDetector
  - MotionSensor
  - LeakSensor
  - Clock
  - Siren
  - AirQualityDetector
  - Alarm
  - SmokeDetector
  - Speaker
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SmokeDetector).smokeDetector_smoke == "detected") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.916
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.81
    validation_elapsed_time: 0.019
- command: 토양 습도 센서의 토양 습도 측정값이 30퍼센트 이하이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the soil moisture sensor's soil moisture reading is 30 percent or less.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.198
    bge_elapsed_time: 0.089
    llm_elapsed_time: 3.093
    validation_elapsed_time: 0.016
- command: 소리 센서에서 소리가 감지되면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if sound is detected by the sound sensor.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - SmokeDetector
  - Speaker
  - SoundSensor
  - TemperatureSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoundSensor).soundSensor_sound == "detected") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.797
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.694
    validation_elapsed_time: 0.017
- command: 소리 감지 레벨이 70dB 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the sound detection level is above 70 dB.
  devices:
  - LightSensor
  - Clock
  - Siren
  - Alarm
  - HumiditySensor
  - Blind
  - Speaker
  - Shade
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoundSensor).soundPressureLevel_soundPressureLevel > 70.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.033
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.929
    validation_elapsed_time: 0.017
- command: 스피커의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is powered on.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.798
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.697
    validation_elapsed_time: 0.017
- command: 스피커가 재생 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the speaker is playing.
  devices:
  - Clock
  - Siren
  - Window
  - PresenceSensor
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Speaker).mediaPlayback_playbackStatus == "playing") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.875
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.773
    validation_elapsed_time: 0.017
- command: 스피커가 지원하는 명령어를 스피커로 출력해줘.
  command_translated: Announce commands that the speaker supports via the speaker.
  devices:
  - Clock
  - Recorder
  - Siren
  - Blind
  - Speaker
  - Buttonx4
  - SoundSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("The speaker supports commands like switch on, switch off, play, pause, stop, fast forward, rewind, speak, and media playback.")
  model_info:
    elapsed_time: 3.375
    bge_elapsed_time: 0.084
    llm_elapsed_time: 3.275
    validation_elapsed_time: 0.016
- command: 스피커를 꺼줘.
  command_translated: Turn off the speaker.
  devices:
  - Clock
  - Valve
  - GasValve
  - Speaker
  - Timer
  - Dehumidifier
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 2.153
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.055
    validation_elapsed_time: 0.016
- command: 스피커를 켜줘.
  command_translated: Turn on the speaker.
  devices:
  - Clock
  - Valve
  - Irrigator
  - Blind
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_on()
  model_info:
    elapsed_time: 2.153
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.054
    validation_elapsed_time: 0.017
- command: 스피커의 전원을 토글해줘.
  command_translated: Toggle the power of the speaker.
  devices:
  - SmartPlug
  - Clock
  - Switch
  - Relay
  - Blind
  - Charger
  - Speaker
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_toggle()
  model_info:
    elapsed_time: 2.138
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.037
    validation_elapsed_time: 0.016
- command: 스피커의 재생을 빨리 감기 해줘.
  command_translated: Fast-forward the playback of the speaker.
  devices:
  - Camera
  - Clock
  - Button
  - Valve
  - Relay
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_fastForward()
  model_info:
    elapsed_time: 2.242
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.143
    validation_elapsed_time: 0.016
- command: 스피커의 재생을 일시 정지해줘.
  command_translated: Pause playback on the speaker.
  devices:
  - Clock
  - Valve
  - Pump
  - Siren
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_pause()
  model_info:
    elapsed_time: 2.208
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.109
    validation_elapsed_time: 0.017
- command: 스피커의 재생을 되감아줘.
  command_translated: Rewind the speaker's playback.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Relay
  - Blind
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_rewind()
  model_info:
    elapsed_time: 2.232
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.133
    validation_elapsed_time: 0.016
- command: 스피커의 재생을 멈춰줘.
  command_translated: Stop the speaker from playing.
  devices:
  - Clock
  - Valve
  - Pump
  - Speaker
  - Timer
  - Dehumidifier
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_stop()
  model_info:
    elapsed_time: 2.232
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.135
    validation_elapsed_time: 0.016
- command: 스피커에서 music.mp3를 재생해줘.
  command_translated: Play 'music.mp3' on the speaker.
  devices:
  - Humidifier
  - Clock
  - Speaker
  - Timer
  - Dehumidifier
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_play("music.audioRecord_recordStatus")
  model_info:
    elapsed_time: 2.326
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.222
    validation_elapsed_time: 0.021
- command: 스피커에서 '지금은 테스트 중입니다.'를 말해줘.
  command_translated: Speak "This is a test" through the speaker.
  devices:
  - Shade
  - Clock
  - Window
  - Speaker
  - Calculator
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).mediaPlayback_speak("This is a test")
  model_info:
    elapsed_time: 2.392
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.292
    validation_elapsed_time: 0.016
- command: 녹음기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound an alarm siren if the recorder is powered on.
  devices:
  - RobotCleaner
  - Camera
  - Clock
  - Siren
  - Relay
  - Alarm
  - Charger
  - Speaker
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Recorder).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.809
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.707
    validation_elapsed_time: 0.017
- command: 녹음기가 녹음 중이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm siren if the recorder is recording.
  devices:
  - RobotCleaner
  - Camera
  - Clock
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#SoundSensor).audioRecord_recordStatus == "recording") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.046
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.941
    validation_elapsed_time: 0.021
- command: 녹음기를 꺼줘.
  command_translated: Turn off the recorder.
  devices:
  - RobotCleaner
  - Camera
  - Clock
  - Feeder
  - GasValve
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_off()
  model_info:
    elapsed_time: 2.206
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.108
    validation_elapsed_time: 0.017
- command: 녹음기를 켜줘.
  command_translated: Turn on the recorder.
  devices:
  - RobotCleaner
  - Camera
  - Clock
  - AirConditioner
  - Feeder
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_on()
  model_info:
    elapsed_time: 2.221
    bge_elapsed_time: 0.09
    llm_elapsed_time: 2.114
    validation_elapsed_time: 0.017
- command: 녹음기의 전원을 토글해줘.
  command_translated: Toggle the recorder's power.
  devices:
  - RobotCleaner
  - SmartPlug
  - Camera
  - Clock
  - Feeder
  - Relay
  - Charger
  - Speaker
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).switch_toggle()
  model_info:
    elapsed_time: 2.157
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.057
    validation_elapsed_time: 0.017
- command: 녹음기로 10초 동안 녹음해서 test.wav로 저장해줘.
  command_translated: Record 10 seconds with a recorder and save it as test.wav.
  devices:
  - RobotCleaner
  - Camera
  - Clock
  - AirConditioner
  - Valve
  - Feeder
  - Speaker
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Recorder).audioRecord_record("test.mediaPlayback_playbackStatus", 10.0)
  model_info:
    elapsed_time: 2.592
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.485
    validation_elapsed_time: 0.021
- command: 스위치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the switch is powered on.
  devices:
  - SmartPlug
  - Clock
  - Button
  - Siren
  - Switch
  - Relay
  - Alarm
  - Television
  - Speaker
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Switch).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.867
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.765
    validation_elapsed_time: 0.017
- command: 스위치를 꺼줘.
  command_translated: Switch off.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Relay
  - Switch
  - GasValve
  - Speaker
  - Timer
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_off()
  model_info:
    elapsed_time: 2.041
    bge_elapsed_time: 0.081
    llm_elapsed_time: 1.943
    validation_elapsed_time: 0.017
- command: 스위치를 켜줘.
  command_translated: Switch on.
  devices:
  - Humidifier
  - Clock
  - Button
  - Irrigator
  - Relay
  - Switch
  - Speaker
  - Timer
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_on()
  model_info:
    elapsed_time: 2.2
    bge_elapsed_time: 0.08
    llm_elapsed_time: 2.103
    validation_elapsed_time: 0.017
- command: 스위치의 전원을 토글해줘.
  command_translated: Toggle the power of the switch.
  devices:
  - SmartPlug
  - Clock
  - Button
  - Relay
  - Television
  - Switch
  - Charger
  - Speaker
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Switch).switch_toggle()
  model_info:
    elapsed_time: 2.167
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.069
    validation_elapsed_time: 0.017
- command: TV의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is powered on.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Television
  - Alarm
  - Window
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.93
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.825
    validation_elapsed_time: 0.02
- command: 현재 TV 채널 이름이 '9시 뉴스'이면 알람의 사이렌을 울려줘.
  command_translated: If the current TV channel is named "9 o'clock news" sound the alarm's siren.
  devices:
  - Clock
  - Siren
  - Television
  - Alarm
  - Speaker
  - Timer
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).tvChannel_tvChannelName == "9 o'clock news") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.073
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.965
    validation_elapsed_time: 0.02
- command: TV의 볼륨이 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the volume on the TV is above 50.
  devices:
  - Clock
  - GasMeter
  - Siren
  - Television
  - Alarm
  - AirQualityDetector
  - Speaker
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).audioVolume_volume > 50) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.056
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.95
    validation_elapsed_time: 0.02
- command: TV가 음소거 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the TV is muted.
  devices:
  - MotionSensor
  - Clock
  - Siren
  - Television
  - Alarm
  - Blind
  - Speaker
  - Timer
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Television).audioMute_muteStatus == "muted") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.135
    bge_elapsed_time: 0.085
    llm_elapsed_time: 3.03
    validation_elapsed_time: 0.02
- command: TV를 꺼줘.
  command_translated: Turn off the TV.
  devices:
  - Clock
  - Valve
  - AirQualityDetector
  - GasValve
  - Television
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_off()
  model_info:
    elapsed_time: 2.32
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.214
    validation_elapsed_time: 0.024
- command: TV를 켜줘.
  command_translated: Turn on the TV.
  devices:
  - Humidifier
  - Clock
  - Relay
  - AirQualityDetector
  - Television
  - Blind
  - Speaker
  - Timer
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_on()
  model_info:
    elapsed_time: 2.246
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.145
    validation_elapsed_time: 0.02
- command: TV의 전원을 토글해줘.
  command_translated: Toggle the power of the TV.
  devices:
  - SmartPlug
  - Clock
  - Switch
  - Relay
  - Television
  - AirQualityDetector
  - Blind
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).switch_toggle()
  model_info:
    elapsed_time: 2.238
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.136
    validation_elapsed_time: 0.021
- command: TV 채널을 하나 내려줘.
  command_translated: Turn down a TV channel.
  devices:
  - Clock
  - Button
  - Pump
  - Valve
  - Television
  - Blind
  - Speaker
  - Timer
  - Buttonx4
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_channelDown() -> VOID
  model_info:
    elapsed_time: 2.607
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.502
    validation_elapsed_time: 0.024
- command: TV 채널을 하나 올려줘.
  command_translated: Upload a TV channel.
  devices:
  - Camera
  - Clock
  - Valve
  - Relay
  - AirQualityDetector
  - Television
  - Speaker
  - Pump
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(123)
  model_info:
    elapsed_time: 3.012
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.91
    validation_elapsed_time: 0.02
- command: TV 채널을 7번으로 설정해줘.
  command_translated: Set the TV channel to 7.
  devices:
  - Clock
  - Valve
  - Curtain
  - AirQualityDetector
  - Television
  - Blind
  - Speaker
  - Calculator
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(7)
  model_info:
    elapsed_time: 2.506
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.401
    validation_elapsed_time: 0.024
- command: TV 채널을 '9시 뉴스'로 설정해줘.
  command_translated: Set the TV channel to "9 o'clock news".
  devices:
  - Clock
  - MenuProvider
  - Valve
  - Window
  - AirQualityDetector
  - Television
  - Blind
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).tvChannel_setTvChannel(9)
  model_info:
    elapsed_time: 2.409
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.307
    validation_elapsed_time: 0.017
- command: TV의 볼륨을 30으로 설정해줘.
  command_translated: Set the volume on the TV to 30.
  devices:
  - Clock
  - GasMeter
  - AirQualityDetector
  - Television
  - Blind
  - Speaker
  - Calculator
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_setVolume(30)
  model_info:
    elapsed_time: 2.446
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.343
    validation_elapsed_time: 0.02
- command: TV의 볼륨을 낮춰줘.
  command_translated: Turn down the volume on the TV.
  devices:
  - Clock
  - Button
  - AirQualityDetector
  - Television
  - Speaker
  - Timer
  - Dehumidifier
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeDown()
  model_info:
    elapsed_time: 2.466
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.364
    validation_elapsed_time: 0.02
- command: TV의 볼륨을 높여줘.
  command_translated: Turn up the volume on the TV.
  devices:
  - Clock
  - Button
  - GasMeter
  - AirQualityDetector
  - Television
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioVolume_volumeUp()
  model_info:
    elapsed_time: 2.347
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.245
    validation_elapsed_time: 0.02
- command: TV를 음소거해줘.
  command_translated: Mute the TV.
  devices:
  - Clock
  - Window
  - AirQualityDetector
  - Alarm
  - Television
  - Speaker
  - Dehumidifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute(muteEnum: muted)
  model_info:
    elapsed_time: 2.72
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.617
    validation_elapsed_time: 0.02
- command: TV의 음소거 상태를 해제해줘.
  command_translated: Unmute the TV.
  devices:
  - Clock
  - Window
  - Television
  - Alarm
  - AirQualityDetector
  - Blind
  - Speaker
  - Timer
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_unmute()
  model_info:
    elapsed_time: 2.488
    bge_elapsed_time: 0.082
    llm_elapsed_time: 2.383
    validation_elapsed_time: 0.024
- command: TV의 음소거 상태를 음소거로 설정해줘.
  command_translated: Set the TV's mute state to Mute.
  devices:
  - Clock
  - Window
  - AirQualityDetector
  - Alarm
  - Television
  - Blind
  - Speaker
  - SoundSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Television).audioMute_setMute(muteEnum: muted)
  model_info:
    elapsed_time: 2.688
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.582
    validation_elapsed_time: 0.02
- command: 현재 실내 온도가 25도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current room temperature is above 25 degrees.
  devices:
  - Clock
  - Siren
  - Window
  - PresenceSensor
  - Alarm
  - HumiditySensor
  - Speaker
  - WeatherProvider
  - TemperatureSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 25.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.912
    bge_elapsed_time: 0.087
    llm_elapsed_time: 2.808
    validation_elapsed_time: 0.017
- command: 밸브가 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the valve is open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Alarm
  - GasValve
  - Blind
  - DoorLock
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Valve).valve_valve == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.942
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.841
    validation_elapsed_time: 0.017
- command: 밸브를 닫아줘.
  command_translated: Close the valve.
  devices:
  - Clock
  - Valve
  - Window
  - Relay
  - GasValve
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Valve).valve_close()
  model_info:
    elapsed_time: 2.259
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.162
    validation_elapsed_time: 0.017
- command: 밸브를 열어줘.
  command_translated: Open the valve.
  devices:
  - Clock
  - Valve
  - Window
  - Relay
  - GasValve
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Valve).valve_open()
  model_info:
    elapsed_time: 2.26
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.162
    validation_elapsed_time: 0.016
- command: 바깥 습도가 80퍼센트 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the humidity outside is above 80 percent.
  devices:
  - Humidifier
  - Clock
  - Siren
  - AirQualityDetector
  - Alarm
  - HumiditySensor
  - SoilMoistureSensor
  - Speaker
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#WeatherProvider).weatherProvider_humidityWeather > 80.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.091
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.985
    validation_elapsed_time: 0.02
- command: 바깥의 미세먼지 농도가 100 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the particulate matter concentration outside is above 100.
  devices:
  - Clock
  - Siren
  - Window
  - AirQualityDetector
  - Alarm
  - SmokeDetector
  - Speaker
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_dustLevel > 100) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.236
    bge_elapsed_time: 0.1
    llm_elapsed_time: 3.112
    validation_elapsed_time: 0.025
- command: 바깥의 초미세먼지 농도가 50 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the outside fine particulate matter concentration is above 50.
  devices:
  - Clock
  - Siren
  - Window
  - AirQualityDetector
  - Alarm
  - Speaker
  - AirPurifier
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#AirQualityDetector).dustSensor_fineDustLevel > 50) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.346
    bge_elapsed_time: 0.086
    llm_elapsed_time: 3.234
    validation_elapsed_time: 0.025
- command: 기압이 1020hPa 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the barometric pressure is above 1020 hPa.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Alarm
  - Speaker
  - Pump
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#WeatherProvider).weatherProvider_pressureWeather > 1020.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 3.233
    bge_elapsed_time: 0.087
    llm_elapsed_time: 3.126
    validation_elapsed_time: 0.02
- command: 현재 바깥의 기온이 30도 이상이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if it's currently above 30 degrees outside.
  devices:
  - FallDetector
  - Clock
  - LeakSensor
  - Siren
  - Window
  - Alarm
  - Speaker
  - SoundSensor
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#TemperatureSensor).temperatureMeasurement_temperature > 30.0) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.947
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.844
    validation_elapsed_time: 0.016
- command: 현재 날씨가 비가 오고 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the current weather is rainy.
  devices:
  - Clock
  - LeakSensor
  - Siren
  - Relay
  - Window
  - Alarm
  - Speaker
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#WeatherProvider).weatherProvider_weather == "rainy") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.819
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.718
    validation_elapsed_time: 0.016
- command: 위도 37.5665, 경도 126.9780의 현재 날씨 정보를 스피커로 출력해줘.
  command_translated: Announce the current weather information for latitude 37.5665 and longitude 126.9780 via the speaker.
  devices:
  - Clock
  - MenuProvider
  - Siren
  - Window
  - Speaker
  - WeatherProvider
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Speaker).switch_on()
      (#WeatherProvider).weatherProvider_getWeatherInfo(lat: 37.5665, lon: 126.9780) -> weather_info
      (#Speaker).mediaPlayback_speak(weather_info)
      (#Speaker).switch_off()
  model_info:
    elapsed_time: 4.155
    bge_elapsed_time: 0.088
    llm_elapsed_time: 4.051
    validation_elapsed_time: 0.017
- command: 창문이 열린 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a window is open.
  devices:
  - Clock
  - Valve
  - Siren
  - Window
  - Alarm
  - Blind
  - DoorLock
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Window).windowControl_window == "open") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.933
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.828
    validation_elapsed_time: 0.02
- command: 창문을 닫아줘.
  command_translated: Close the window.
  devices:
  - Clock
  - Valve
  - Window
  - Curtain
  - Blind
  - Speaker
  - Pump
  - Dehumidifier
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Window).windowControl_close()
  model_info:
    elapsed_time: 2.242
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.145
    validation_elapsed_time: 0.017
- command: 창문을 열어줘.
  command_translated: Open a window.
  devices:
  - Humidifier
  - Clock
  - Valve
  - Curtain
  - Window
  - Blind
  - Speaker
  - Pump
  - Shade
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Window).windowControl_open() -> VOID
  model_info:
    elapsed_time: 2.334
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.236
    validation_elapsed_time: 0.017
- command: 낙상 감지 센서에서 낙상이 감지된 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if a fall is detected by the fall detection sensor.
  devices:
  - FallDetector
  - MotionSensor
  - LeakSensor
  - Clock
  - Siren
  - Alarm
  - Speaker
  - SoundSensor
  - TemperatureSensor
  - ContactSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#FallDetector).fallDetection_fall == "fall") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.807
    bge_elapsed_time: 0.088
    llm_elapsed_time: 2.703
    validation_elapsed_time: 0.016
- command: 점유 센서가 감지 상태이면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if an occupancy sensor is detected.
  devices:
  - MotionSensor
  - Clock
  - LeakSensor
  - ContactSensor
  - Siren
  - PresenceSensor
  - Alarm
  - Speaker
  - SoundSensor
  - OccupancySensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#OccupancySensor).presenceSensor_presence == "present") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.76
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.659
    validation_elapsed_time: 0.016
- command: 릴레이의 전원이 켜져 있으면 알람의 사이렌을 울려줘.
  command_translated: Sound the alarm's siren if the relay is powered on.
  devices:
  - SmartPlug
  - Clock
  - Siren
  - Relay
  - Switch
  - Alarm
  - Charger
  - Speaker
  - Timer
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if ((#Relay).switch_switch == "on") {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.865
    bge_elapsed_time: 0.085
    llm_elapsed_time: 2.764
    validation_elapsed_time: 0.016
- command: 릴레이를 꺼줘.
  command_translated: Turn off the relay.
  devices:
  - FallDetector
  - Clock
  - Timer
  - Valve
  - Relay
  - GasValve
  - Blind
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_off()
  model_info:
    elapsed_time: 2.205
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.107
    validation_elapsed_time: 0.017
- command: 릴레이를 켜줘.
  command_translated: Turn on the relay.
  devices:
  - FallDetector
  - Clock
  - Timer
  - Valve
  - Relay
  - Irrigator
  - Blind
  - Speaker
  - Pump
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_on()
  model_info:
    elapsed_time: 2.198
    bge_elapsed_time: 0.081
    llm_elapsed_time: 2.1
    validation_elapsed_time: 0.017
- command: 릴레이의 전원을 토글해줘.
  command_translated: Toggle the power of the relay.
  devices:
  - SmartPlug
  - Clock
  - Button
  - Valve
  - Switch
  - Relay
  - Blind
  - Charger
  - Speaker
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Relay).switch_toggle()
  model_info:
    elapsed_time: 2.173
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.074
    validation_elapsed_time: 0.017
- command: 테스트 타이머라는 이름의 60초 길이의 타이머를 추가해줘.
  command_translated: Add a 60-second timer named Test Timer.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Feeder
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      timer_add("Test Timer", 60.0)
  model_info:
    elapsed_time: 2.432
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.329
    validation_elapsed_time: 0.019
- command: 테스트 타이머라는 이름의 타이머가 존재하면 알람의 사이렌을 울려줘.
  command_translated: If a timer named Test Timer exists, sound the alarm siren.
  devices:
  - RobotCleaner
  - Clock
  - Feeder
  - Siren
  - Alarm
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  - SoundSensor
  generated_code:
  - name: "CheckTimerAndAlarm"
    cron: ""
    period: -1
    code: |-
      if (timer_isExist("Test Timer")) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.904
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.802
    validation_elapsed_time: 0.017
- command: 테스트 타이머라는 이름의 타이머가 하면 알람의 사이렌을 울려줘.
  command_translated: if a timer named Test Timer goes off, sound an alarm siren.
  devices:
  - RobotCleaner
  - Clock
  - Feeder
  - Siren
  - Alarm
  - Speaker
  - Timer
  - Recorder
  - SoundSensor
  - TemperatureSensor
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      if (timer_isSet("Test Timer")) {
        (#Alarm).alarm_siren()
      }
  model_info:
    elapsed_time: 2.745
    bge_elapsed_time: 0.086
    llm_elapsed_time: 2.643
    validation_elapsed_time: 0.017
- command: 테스트 타이머라는 이름의 타이머를 리셋해줘.
  command_translated: Reset a timer named Test Timer.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Feeder
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      timer_reset("Test Timer")
  model_info:
    elapsed_time: 2.186
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.086
    validation_elapsed_time: 0.017
- command: 테스트 타이머라는 이름의 타이머를 120초로 설정해줘.
  command_translated: Set a timer named Test Timer to 120 seconds.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Feeder
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 120.0)
  model_info:
    elapsed_time: 2.733
    bge_elapsed_time: 0.084
    llm_elapsed_time: 2.633
    validation_elapsed_time: 0.017
- command: 테스트 타이머라는 이름의 타이머를 시작해줘.
  command_translated: Start a timer named Test Timer.
  devices:
  - RobotCleaner
  - Clock
  - AirConditioner
  - Feeder
  - Speaker
  - Timer
  - AirPurifier
  - Recorder
  generated_code:
  - name: "Scenario1"
    cron: ""
    period: -1
    code: |-
      (#Timer).timer_add(name: "Test Timer", timeout: 0.0)
  model_info:
    elapsed_time: 2.657
    bge_elapsed_time: 0.083
    llm_elapsed_time: 2.558
    validation_elapsed_time: 0.017

- command: 토양 습도가 30% 미만이면 5초 후 급수기를 작동해 줘.
  code:
  - name: Scenario1
    cron: ''
    period: -1
    code: |-
      if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {
        (#Clock).clock_delay(5000)
        (#Irrigator).irrigatorOperatingState_startWatering()
      }
  devices:
  - Irrigator
  - SoilMoistureSensor
  - Clock
- command: 창문이 열려 있고 온도가 35도 이상이면 10초 대기 후 블라인드를 내려 줘.
  code:
  - name: Scenario2
    cron: ''
    period: -1
    code: |-
      if (((#Window).windowControl_window == 'open') and ((#TemperatureSensor).temperatureMeasurement_temperature >= 35.0)) {
        (#Clock).clock_delay(10000)
        (#Blind).blind_close()
      }
  devices:
  - Clock
  - Window
  - TemperatureSensor
  - Blind
- command: 습도가 80% 이상이면 3초 뒤 제습기를 켜고, 7초 더 지난 후 창문을 닫아 줘.
  code:
  - name: Scenario3
    cron: ''
    period: -1
    code: |-
      if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0) {
        (#Clock).clock_delay(3000)
        (#Dehumidifier).switch_on()
        (#Clock).clock_delay(7000)
        (#Window).windowControl_close()
      }
  devices:
  - HumiditySensor
  - Dehumidifier
  - Clock
  - Window
- command: 빛의 세기가 100룩스 이하면 5초 대기 후 LED 조명을 켜 줘.
  code:
  - name: Scenario4
    cron: ''
    period: -1
    code: |-
      if ((#LightSensor).lightLevel_light <= 100.0) {
        (#Clock).clock_delay(5000)
        (#Light).switch_on()
      }
  devices:
  - LightSensor
  - Clock
  - Light
- command: 급수기를 작동 후 10초 기다렸다가 환풍기를 켜 줘.
  code:
  - name: Scenario5
    cron: ''
    period: -1
    code: |-
      (#Irrigator).irrigatorOperatingState_startWatering()
      (#Clock).clock_delay(10000)
      (#Fan).switch_on()
  devices:
  - Clock
  - Fan
  - Irrigator
- command: 창문이 열려 있으면 5초 후 커튼을 닫고, 10초 더 지난 뒤 블라인드를 닫아 줘.
  code:
  - name: Scenario6
    cron: ''
    period: -1
    code: |-
      if ((#Window).windowControl_window == 'open') {
        (#Clock).clock_delay(5000)
        (#Curtain).curtain_close()
        (#Clock).clock_delay(10000)
        (#Blind).blind_close()
      }
  devices:
  - Clock
  - Curtain
  - Window
  - Blind
- command: 조명이 켜져 있으면 3초 대기 후 조명을 껐다가 3초 뒤 다시 켜 줘.
  code:
  - name: Scenario7
    cron: ''
    period: -1
    code: |-
      if ((#Light).switch_switch == 'on') {
        (#Clock).clock_delay(3000)
        (#Light).switch_off()
        (#Clock).clock_delay(3000)
        (#Light).switch_on()
      }
  devices:
  - Clock
  - Light
- command: 7초 후에 조명을 끄고 5초 뒤 다시 켜 줘.
  code:
  - name: Scenario8
    cron: ''
    period: -1
    code: |-
      (#Clock).clock_delay(7000)
      (#Light).switch_off()
      (#Clock).clock_delay(5000)
      (#Light).switch_on()
  devices:
  - Clock
  - Light
- command: 문이 닫혀 있는데 5초가 지나도 창문이 열려 있지 않으면 블라인드를 열어 줘.
  code:
  - name: Scenario9
    cron: ''
    period: -1
    code: |-
      if ((#DoorLock).doorControl_door == 'closed') {
        (#Clock).clock_delay(5000)
        if ((#Window).windowControl_window != 'open') {
            (#Blind).blind_open()
        }
      }
  devices:
  - Blind
  - Clock
  - DoorLock
  - Window
- command: 커튼이 열린 상태라면 2초 뒤 조명을 50으로 낮추고, 다시 4초 기다려서 꺼 줘.
  code:
  - name: Scenario10
    cron: ''
    period: -1
    code: |-
      if ((#Curtain).curtain_curtain == 'open') {
        (#Clock).clock_delay(2000)
        (#Light).switchLevel_setLevel(50, 0)
        (#Clock).clock_delay(4000)
        (#Light).switch_off()
      }
  devices:
  - Curtain
  - Clock
  - Light

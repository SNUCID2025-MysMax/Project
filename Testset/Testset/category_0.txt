[
    {
        "command": "에어컨의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirConditioner').switch_switch == 'on':
            Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirConditioner).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "에어컨의 모드가 냉방 모드면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirConditioner').airConditionerMode_airConditionerMode == 'cool':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirConditioner).airConditionerMode_airConditionerMode == 'cool') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "에어컨의 목표 온도가 30도면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirConditioner').airConditionerMode_targetTemperature == 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirConditioner).airConditionerMode_targetTemperature == 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "에어컨을 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirConditioner').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirConditioner).switch_off()"
            }
        ]
    },
    {
        "command": "에어컨을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirConditioner').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirConditioner).switch_on()"
            }
        ]
    },
    {
        "command": "에어컨의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirConditioner').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirConditioner).switch_toggle()"
            }
        ]
    },
    {
        "command": "에어컨을 자동 모드로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirConditioner').airConditionerMode_setAirConditionerMode('auto')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirConditioner).airConditionerMode_setAirConditionerMode('auto')"
            }
        ]
    },
    {
        "command": "에어컨의 목표 온도를 18도로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirConditioner').airConditionerMode_setTemperature(18)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirConditioner).airConditionerMode_setTemperature(18)"
            }
        ]
    },
    {
        "command": "공기청정기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirPurifier').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirPurifier).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "공기청정기가 수면 모드면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirPurifier').airPurifierFanMode_airPurifierFanMode == 'sleep':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirPurifier).airPurifierFanMode_airPurifierFanMode == 'sleep') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "공기청정기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirPurifier').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirPurifier).switch_off()"
            }
        ]
    },
    {
        "command": "공기청정기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirPurifier').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirPurifier).switch_on()"
            }
        ]
    },
    {
        "command": "공기청정기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirPurifier').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirPurifier).switch_toggle()"
            }
        ]
    },
    {
        "command": "공기청정기의 모드를 자동으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('AirPurifier').airPurifierFanMode_setAirPurifierFanMode('auto')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')"
            }
        ]
    },
    {
        "command": "현재 온도가 20도이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').temperatureMeasurement_temperature == 20:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).temperatureMeasurement_temperature == 20) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "이산화탄소 농도가 800ppm 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').carbonDioxideMeasurement_carbonDioxide >= 800:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).carbonDioxideMeasurement_carbonDioxide >= 800) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "상대 습도가 70% 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').relativeHumidityMeasurement_humidity >= 70:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).relativeHumidityMeasurement_humidity >= 70) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "황사 농도가 150마이크로그램 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').dustSensor_dustLevel >= 150:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).dustSensor_dustLevel >= 150) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "미세먼지 농도가 35마이크로그램 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').dustSensor_fineDustLevel >= 35:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).dustSensor_fineDustLevel >= 35) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "초미세먼지 농도가 15마이크로그램 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').dustSensor_veryFineDustLevel >= 15:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).dustSensor_veryFineDustLevel >= 15) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "총휘발성유기화합물 농도가 0.5ppm 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('AirQualityDetector').tvocMeasurement_tvocLevel >= 0.5:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#AirQualityDetector).tvocMeasurement_tvocLevel >= 0.5) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "알람의 경광등이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Alarm').alarm_alarm == 'strobe':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Alarm).alarm_alarm == 'strobe') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "알람의 볼륨이 높음이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Alarm').alarm_alarmVolume == 'high':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Alarm).alarm_alarmVolume == 'high') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "알람 배터리 상태가 20% 이하이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Alarm').battery_battery <= 20:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Alarm).battery_battery <= 20) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "알람의 사이렌과 경광등을 모두 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Alarm').alarm_both()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Alarm).alarm_both()"
            }
        ]
    },
    {
        "command": "알람을 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Alarm').alarm_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Alarm).alarm_off()"
            }
        ]
    },
    {
        "command": "알람의 볼륨을 낮음으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Alarm').alarm_setAlarmVolume('low')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Alarm).alarm_setAlarmVolume('low')"
            }
        ]
    },
    {
        "command": "알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Alarm).alarm_siren()"
            }
        ]
    },
    {
        "command": "알람의 경광등을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Alarm').alarm_strobe()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Alarm).alarm_strobe()"
            }
        ]
    },
    {
        "command": "블라인드가 50% 이상 열려있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Blind').blindLevel_blindLevel >= 50:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Blind).blindLevel_blindLevel >= 50) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "블라인드가 열린 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Blind').blind_blind == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Blind).blind_blind == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "블라인드를 70%로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Blind').blindLevel_setBlindLevel(70)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Blind).blindLevel_setBlindLevel(70)"
            }
        ]
    },
    {
        "command": "블라인드를 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Blind').blind_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Blind).blind_close()"
            }
        ]
    },
    {
        "command": "블라인드를 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Blind').blind_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Blind).blind_open()"
            }
        ]
    },
    {
        "command": "블라인드를 멈춰줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Blind').blind_pause()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Blind).blind_pause()"
            }
        ]
    },
    {
        "command": "버튼이 눌렸으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Button').button_button == 'pushed':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Button).button_button == 'pushed') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼의 개수가 4개 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Button').button_numberOfButtons >= 4:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Button).button_numberOfButtons >= 4) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼1이 눌렸으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Buttonx4').buttonx4_button1 == 'pushed':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Buttonx4).buttonx4_button1 == 'pushed') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼2가 눌린 상태면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Buttonx4').buttonx4_button2 == 'held':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Buttonx4).buttonx4_button2 == 'held') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼3이 두 번 눌렸으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Buttonx4').buttonx4_button3 == 'pushed_2x':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Buttonx4).buttonx4_button3 == 'pushed_2x') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼4가 위로 스와이프되었으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Buttonx4').buttonx4_button4 == 'swipe_up':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Buttonx4).buttonx4_button4 == 'swipe_up') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "버튼 개수가 4개면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Buttonx4').buttonx4_numberOfButtons == 4:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Buttonx4).buttonx4_numberOfButtons == 4) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "5와 3을 더해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Calculator').calculator_add(5, 3)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Calculator).calculator_add(5, 3)"
            }
        ]
    },
    {
        "command": "10을 2로 나눠줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Calculator').calculator_div(10, 2)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Calculator).calculator_div(10, 2)"
            }
        ]
    },
    {
        "command": "10을 3으로 나눈 나머지를 구해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Calculator').calculator_mod(10, 3)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Calculator).calculator_mod(10, 3)"
            }
        ]
    },
    {
        "command": "7과 8을 곱해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Calculator').calculator_mul(7, 8)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Calculator).calculator_mul(7, 8)"
            }
        ]
    },
    {
        "command": "15에서 4를 빼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Calculator').calculator_sub(15, 4)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Calculator).calculator_sub(15, 4)"
            }
        ]
    },
    {
        "command": "카메라의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Camera').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Camera).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "카메라를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Camera').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Camera).switch_off()"
            }
        ]
    },
    {
        "command": "카메라를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Camera').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Camera).switch_on()"
            }
        ]
    },
    {
        "command": "가장 최근에 찍은 사진을 첨부파일로 이메일을 test@example.com 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        recentPhoto = Tags('Camera').camera_image
Tags('EmailProvider').emailProvider_sendMailWithFile('test@example.com', '사진', '사진입니다.', recentPhoto)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
recentPhoto = (#Camera).camera_image"
            }
        ]
    },
    {
        "command": "가장 최근에 찍은 동영상을 첨부파일로 이메일을 test@example.com 주소, 제목 '동영상'과 내용 '동영상입니다.'로 보내줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        recentVideo = Tags('Camera').camera_video
Tags('EmailProvider').emailProvider_sendMailWithFile('test@example.com', '동영상', '동영상입니다.', recentVideo)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
recentVideo = (#Camera).camera_video"
            }
        ]
    },
    {
        "command": "카메라의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Camera').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Camera).switch_toggle()"
            }
        ]
    },
    {
        "command": "카메라로 사진을 찍어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Camera').camera_take()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Camera).camera_take()"
            }
        ]
    },
    {
        "command": "카메라로 10초 동안 속도 2로 타임랩스 영상을 촬영해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Camera').camera_takeTimelapse(10, 2)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Camera).camera_takeTimelapse(10, 2)"
            }
        ]
    },
    {
        "command": "충전기의 전압이 230볼트 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Charger').voltageMeasurement_voltage >= 230:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Charger).voltageMeasurement_voltage >= 230) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "충전기의 상태가 충전 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Charger').chargingState_chargingState == 'charging':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Charger).chargingState_chargingState == 'charging') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "충전기의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Charger').currentMeasurement_current >= 10:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Charger).currentMeasurement_current >= 10) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "오늘 날짜가 2025년 5월 12일이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_date == 20250512:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_date == 20250512) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "현재 시간이 2025년 5월 12일 오후 3시 15분이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_datetime == 202505121515:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_datetime == 202505121515) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "오늘이 20일이면 알람의 사이렌을 울려줘",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_day == 20:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_day == 20) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "현재 시간이 오후 3시이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_hour == 15:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_hour == 15) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "오늘이 공휴일이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_isHoliday == true:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_isHoliday == true) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "지금이 30분이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_minute == 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_minute == 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "지금이 5월이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_month == 5:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_month == 5) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "지금이 40초이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_second == 40:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_second == 40) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "지금이 오후 3시 15분이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_time == 1515:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_time == 1515) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "현재 Unix timestamp가 1747031637.23이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_timestamp == 1747031637.23:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_timestamp == 1747031637.23) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "오늘이 금요일이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_weekday == 'friday':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_weekday == 'friday') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "올해가 2025년이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Clock').clock_year == 2025:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Clock).clock_year == 2025) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "1시간 20분 30초 뒤에 알람의 사이렌을 울려줘",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Clock').clock_delay(1, 20, 30)
Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Clock).clock_delay(1, 20, 30)"
            }
        ]
    },
    {
        "command": "접촉 센서가 닫혀있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('ContactSensor').contactSensor_contact == 'closed':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#ContactSensor).contactSensor_contact == 'closed') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "커튼이 열림 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Curtain').curtain_curtain == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Curtain).curtain_curtain == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "커튼을 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Curtain').curtain_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Curtain).curtain_close()"
            }
        ]
    },
    {
        "command": "커튼을 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Curtain').curtain_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Curtain).curtain_open()"
            }
        ]
    },
    {
        "command": "커튼을 멈춰줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Curtain').curtain_pause()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Curtain).curtain_pause()"
            }
        ]
    },
    {
        "command": "제습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Dehumidifier').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Dehumidifier).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "제습기의 모드가 제습 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Dehumidifier').dehumidifierMode_dehumidifierMode == 'dehumidifying':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Dehumidifier).dehumidifierMode_dehumidifierMode == 'dehumidifying') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "제습기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dehumidifier').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dehumidifier).switch_off()"
            }
        ]
    },
    {
        "command": "제습기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dehumidifier').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dehumidifier).switch_on()"
            }
        ]
    },
    {
        "command": "제습기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dehumidifier').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dehumidifier).switch_toggle()"
            }
        ]
    },
    {
        "command": "제습기를 냉각 모드로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dehumidifier').dehumidifierMode_setDehumidifierMode('cooling')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dehumidifier).dehumidifierMode_setDehumidifierMode('cooling')"
            }
        ]
    },
    {
        "command": "식기세척기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Dishwasher').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Dishwasher).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "식기세척기의 모드가 에코 모드면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Dishwasher').dishwasherMode_dishwasherMode == 'eco':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Dishwasher).dishwasherMode_dishwasherMode == 'eco') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "식기세척기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dishwasher').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dishwasher).switch_off()"
            }
        ]
    },
    {
        "command": "식기세척기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dishwasher').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dishwasher).switch_on()"
            }
        ]
    },
    {
        "command": "식기세척기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dishwasher').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dishwasher).switch_toggle()"
            }
        ]
    },
    {
        "command": "식기세척기를 자동 모드로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Dishwasher').dishwasherMode_setDishwasherMode('auto')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Dishwasher).dishwasherMode_setDishwasherMode('auto')"
            }
        ]
    },
    {
        "command": "도어락이 열려 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('DoorLock').doorControl_door == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#DoorLock).doorControl_door == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "도어락을 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('DoorLock').doorControl_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#DoorLock).doorControl_close()"
            }
        ]
    },
    {
        "command": "도어락을 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('DoorLock').doorControl_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#DoorLock).doorControl_open()"
            }
        ]
    },
    {
        "command": "이메일을 test@example.com 주소로 제목 '알림'과 내용 '긴급 상황입니다.'로 보내줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('EmailProvider').emailProvider_sendMail('test@example.com', '알림', '긴급 상황입니다.')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#EmailProvider).emailProvider_sendMail('test@example.com', '알림', '긴급 상황입니다.')"
            }
        ]
    },
    {
        "command": "가장 최근에 찍은 사진을 첨부파일로 이메일을 test@example.com 주소, 제목 '사진'과 내용 '사진입니다.'로 보내줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        recentPhoto = Tags('Camera').camera_image
Tags('EmailProvider').emailProvider_sendMailWithFile('test@example.com', '사진', '사진입니다.', recentPhoto)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
recentPhoto = (#Camera).camera_image"
            }
        ]
    },
    {
        "command": "선풍기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Fan').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Fan).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "선풍기의 속도가 2000RPM 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Fan').fanControl_fanSpeed >= 2000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Fan).fanControl_fanSpeed >= 2000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "선풍기의 속도를 1500RPM으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Fan').fanControl_setFanSpeed(1500)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Fan).fanControl_setFanSpeed(1500)"
            }
        ]
    },
    {
        "command": "선풍기의 속도를 80%로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Fan').fanControl_setPercent(80)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Fan).fanControl_setPercent(80)"
            }
        ]
    },
    {
        "command": "선풍기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Fan').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Fan).switch_off()"
            }
        ]
    },
    {
        "command": "선풍기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Fan').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Fan).switch_on()"
            }
        ]
    },
    {
        "command": "선풍기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Fan').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Fan).switch_toggle()"
            }
        ]
    },
    {
        "command": "사료 공급기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Feeder').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Feeder).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "사료 공급기의 상태가 급식 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Feeder').feederOperatingState_feederOperatingState == 'feeding':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Feeder).feederOperatingState_feederOperatingState == 'feeding') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "사료 공급기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Feeder').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Feeder).switch_off()"
            }
        ]
    },
    {
        "command": "사료 공급기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Feeder').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Feeder).switch_on()"
            }
        ]
    },
    {
        "command": "사료 공급기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Feeder').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Feeder).switch_toggle()"
            }
        ]
    },
    {
        "command": "사료 공급기의 사료 공급량을 100그램으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Feeder').feederPortion_setFeedPortion(100, 'grams')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Feeder).feederPortion_setFeedPortion(100, 'grams')"
            }
        ]
    },
    {
        "command": "사료 공급기의 사료 공급을 시작해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Feeder').feederOperatingState_startFeeding()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Feeder).feederOperatingState_startFeeding()"
            }
        ]
    },
    {
        "command": "가스 사용량이 500kWh 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasMeter').gasMeter_gasMeter >= 500:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasMeter).gasMeter_gasMeter >= 500) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 발열량이 1000kcal 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasMeter').gasMeter_gasMeterCalorific >= 1000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasMeter).gasMeter_gasMeterCalorific >= 1000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 사용 시간이 10000초 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasMeter').gasMeter_gasMeterTime >= 10000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasMeter).gasMeter_gasMeterTime >= 10000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 사용량이 20세제곱미터 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasMeter').gasMeter_gasMeterVolume >= 20:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasMeter).gasMeter_gasMeterVolume >= 20) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 밸브가 열려 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasValve').valve_valve == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasValve).valve_valve == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 밸브를 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('GasValve').valve_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#GasValve).valve_close()"
            }
        ]
    },
    {
        "command": "가스 밸브를 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('GasValve').valve_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#GasValve).valve_open()"
            }
        ]
    },
    {
        "command": "가스 사용량이 1000kWh 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasValve').gasMeter_gasMeter >= 1000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasValve).gasMeter_gasMeter >= 1000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 발열량이 500kcal 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasValve').gasMeter_gasMeterCalorific >= 500:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasValve).gasMeter_gasMeterCalorific >= 500) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 사용 시간이 5000초 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasValve').gasMeter_gasMeterTime >= 5000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasValve).gasMeter_gasMeterTime >= 5000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가스 사용량이 34세제곱미터 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('GasValve').gasMeter_gasMeterVolume >= 34:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#GasValve).gasMeter_gasMeterVolume >= 34) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가습기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Humidifier').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Humidifier).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가습기의 모드가 자동이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Humidifier').humidifierMode_humidifierMode == 'auto':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Humidifier).humidifierMode_humidifierMode == 'auto') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "가습기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Humidifier').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Humidifier).switch_off()"
            }
        ]
    },
    {
        "command": "가습기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Humidifier').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Humidifier).switch_on()"
            }
        ]
    },
    {
        "command": "가습기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Humidifier').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Humidifier).switch_toggle()"
            }
        ]
    },
    {
        "command": "가습기를 강 모드로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Humidifier').humidifierMode_setHumidifierMode('high')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Humidifier).humidifierMode_setHumidifierMode('high')"
            }
        ]
    },
    {
        "command": "상대 습도가 70% 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('HumiditySensor').relativeHumidityMeasurement_humidity >= 70:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 70) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "관개기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Irrigator').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Irrigator).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "관개기의 급수량이 3리터이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Irrigator').irrigatorPortion_waterPortion == 3:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Irrigator).irrigatorPortion_waterPortion == 3) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "관개기의 상태가 급수 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Irrigator').irrigatorOperatingState_irrigatorOperatingState == 'watering':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Irrigator).irrigatorOperatingState_irrigatorOperatingState == 'watering') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "관개기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Irrigator').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Irrigator).switch_off()"
            }
        ]
    },
    {
        "command": "관개기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Irrigator').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Irrigator).switch_on()"
            }
        ]
    },
    {
        "command": "관개기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Irrigator').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Irrigator).switch_toggle()"
            }
        ]
    },
    {
        "command": "관개기의 급수량을 5리터로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Irrigator').irrigatorPortion_setWaterPortion(5, 'liters')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Irrigator).irrigatorPortion_setWaterPortion(5, 'liters')"
            }
        ]
    },
    {
        "command": "관개기의 급수를 시작해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Irrigator').irrigatorOperatingState_startWatering()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Irrigator).irrigatorOperatingState_startWatering()"
            }
        ]
    },
    {
        "command": "누수가 감지되면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('LeakSensor').leakSensor_leakage == 'detected':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#LeakSensor).leakSensor_leakage == 'detected') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "조명이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Light').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Light).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "조명의 색조가 30이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Light').colorControl_hue == 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Light).colorControl_hue == 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "조명의 채도가 30이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Light').colorControl_saturation == 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Light).colorControl_saturation == 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "조명 밝기가 100이면 알람의 사이렌을 울려줘",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Light').switchLevel_level == 100:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Light).switchLevel_level == 100) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "조명의 색조를 70으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').colorControl_setHue(70)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).colorControl_setHue(70)"
            }
        ]
    },
    {
        "command": "조명의 채도를 90으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').colorControl_setSaturation(90)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).colorControl_setSaturation(90)"
            }
        ]
    },
    {
        "command": "5의 속도로 조명의 밝기를 80으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').switchLevel_setLevel(80, 5)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).switchLevel_setLevel(80, 5)"
            }
        ]
    },
    {
        "command": "조명의 경고 모드를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').switchLevel_alert()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).switchLevel_alert()"
            }
        ]
    },
    {
        "command": "조명을 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).switch_off()"
            }
        ]
    },
    {
        "command": "조명을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).switch_on()"
            }
        ]
    },
    {
        "command": "조명의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Light').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Light).switch_toggle()"
            }
        ]
    },
    {
        "command": "조도 센서의 밝기 값이 500룩스 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('LightSensor').lightLevel_light >= 500:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#LightSensor).lightLevel_light >= 500) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "오늘 학생식당 점심 메뉴를 알려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('MenuProvider').menuProvider_menu('오늘 학생식당 점심')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#MenuProvider).menuProvider_menu('오늘 학생식당 점심')"
            }
        ]
    },
    {
        "command": "오늘의 메뉴를 무작위로 알려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        menu=Tags('MenuProvider').menuProvider_todayMenu()
Tags('Speaker').mediaPlayback_speak(menu)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
menu = (#MenuProvider).menuProvider_todayMenu()"
            }
        ]
    },
    {
        "command": "오늘의 식당을 무작위로 알려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        place=Tags('MenuProvider').menuProvider_todayPlace()
Tags('Speaker').mediaPlayback_speak(place)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
place = (#MenuProvider).menuProvider_todayPlace()"
            }
        ]
    },
    {
        "command": "모션 센서가 활성 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('MotionSensor').motionSensor_motion == 'active':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#MotionSensor).motionSensor_motion == 'active') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "재실 센서가 감지 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('PresenceSensor').presenceSensor_presence == 'present':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#PresenceSensor).presenceSensor_presence == 'present') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "펌프의 현재 동작 모드가 최대이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Pump').pumpOperationMode_currentOperationMode == 'maximum':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Pump).pumpOperationMode_currentOperationMode == 'maximum') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "펌프의 설정 동작 모드가 기본이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Pump').pumpOperationMode_operationMode == 'normal':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Pump).pumpOperationMode_operationMode == 'normal') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "펌프의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Pump').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Pump).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "펌프가 열려있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Pump').pump_pump == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Pump).pump_pump == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "펌프의 동작 모드를 최대로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').pumpOperationMode_setOperationMode('maximum')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).pumpOperationMode_setOperationMode('maximum')"
            }
        ]
    },
    {
        "command": "펌프를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).switch_off()"
            }
        ]
    },
    {
        "command": "펌프를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).switch_on()"
            }
        ]
    },
    {
        "command": "펌프의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).switch_toggle()"
            }
        ]
    },
    {
        "command": "펌프를 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').pump_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).pump_close()"
            }
        ]
    },
    {
        "command": "펌프를 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Pump').pump_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Pump).pump_open()"
            }
        ]
    },
    {
        "command": "냉장고의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Refrigerator').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Refrigerator).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "냉장고의 성에 제거 기능이 켜저 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Refrigerator').refrigeration_defrost == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Refrigerator).refrigeration_defrost == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "냉장고의 급속 냉각 기능이 꺼져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Refrigerator').refrigeration_rapidCooling == 'off':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Refrigerator).refrigeration_rapidCooling == 'off') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "냉장고의 급속 냉동 기능이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Refrigerator').refrigeration_rapidFreezing == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Refrigerator).refrigeration_rapidFreezing == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "냉장고를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Refrigerator').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Refrigerator).switch_off()"
            }
        ]
    },
    {
        "command": "냉장고의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Refrigerator').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Refrigerator).switch_toggle()"
            }
        ]
    },
    {
        "command": "냉장고의 성에 제거 기능을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Refrigerator').refrigeration_setDefrost('on')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Refrigerator).refrigeration_setDefrost('on')"
            }
        ]
    },
    {
        "command": "냉장고의 급속 냉각 기능을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Refrigerator').refrigeration_setRapidCooling('on')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Refrigerator).refrigeration_setRapidCooling('on')"
            }
        ]
    },
    {
        "command": "냉장고의 급속 냉동 기능을 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Refrigerator').refrigeration_setRapidFreezing('off')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Refrigerator).refrigeration_setRapidFreezing('off')"
            }
        ]
    },
    {
        "command": "로봇 청소기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('RobotCleaner').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#RobotCleaner).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "로봇 청소기가 자동 모드이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('RobotCleaner').robotCleanerCleaningMode_robotCleanerCleaningMode == 'auto':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#RobotCleaner).robotCleanerCleaningMode_robotCleanerCleaningMode == 'auto') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "로봇 청소기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('RobotCleaner').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#RobotCleaner).switch_off()"
            }
        ]
    },
    {
        "command": "로봇 청소기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('RobotCleaner').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#RobotCleaner).switch_on()"
            }
        ]
    },
    {
        "command": "로봇 청소기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('RobotCleaner').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#RobotCleaner).switch_toggle()"
            }
        ]
    },
    {
        "command": "로봇 청소기의 청소 모드를 수동으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('RobotCleaner').robotCleanerCleaningMode_setRobotCleanerCleaningMode('manual')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#RobotCleaner).robotCleanerCleaningMode_setRobotCleanerCleaningMode('manual')"
            }
        ]
    },
    {
        "command": "창문 블라인드가 40% 이상 열려 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Shade').windowShadeLevel_shadeLevel >= 40:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Shade).windowShadeLevel_shadeLevel >= 40) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "창문 블라인드가 완전히 열려 있는 상태면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Shade').windowShade_windowShade == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Shade).windowShade_windowShade == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "창문 블라인드를 50%로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Shade').windowShadeLevel_setShadeLevel(50)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Shade).windowShadeLevel_setShadeLevel(50)"
            }
        ]
    },
    {
        "command": "창문 블라인드를 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Shade').windowShade_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Shade).windowShade_close()"
            }
        ]
    },
    {
        "command": "창문 블라인드를 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Shade').windowShade_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Shade).windowShade_open()"
            }
        ]
    },
    {
        "command": "창문 블라인드 움직임을 일시 중지해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Shade').windowShade_pause()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Shade).windowShade_pause()"
            }
        ]
    },
    {
        "command": "사이렌이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Siren').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Siren).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "사이렌 모드가 사이렌이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Siren').sirenMode_sirenMode == 'siren':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Siren).sirenMode_sirenMode == 'siren') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "사이렌을 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Siren').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Siren).switch_off()"
            }
        ]
    },
    {
        "command": "사이렌을 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Siren').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Siren).switch_on()"
            }
        ]
    },
    {
        "command": "사이렌 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Siren').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Siren).switch_toggle()"
            }
        ]
    },
    {
        "command": "사이렌 모드를 경광등으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Siren').sirenMode_setSirenMode('strobe')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Siren).sirenMode_setSirenMode('strobe')"
            }
        ]
    },
    {
        "command": "스마트 플러그의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SmartPlug').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SmartPlug).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스마트 플러그의 전압이 220볼트 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SmartPlug').voltageMeasurement_voltage >= 220:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SmartPlug).voltageMeasurement_voltage >= 220) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스마트 플러그의 전류가 10암페어 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SmartPlug').currentMeasurement_current >= 10:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SmartPlug).currentMeasurement_current >= 10) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스마트 플러그의 소비 전력이 1000와트 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SmartPlug').powerMeter_power >= 1000:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SmartPlug).powerMeter_power >= 1000) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스마트 플러그를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('SmartPlug').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#SmartPlug).switch_off()"
            }
        ]
    },
    {
        "command": "스마트 플러그를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('SmartPlug').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#SmartPlug).switch_on()"
            }
        ]
    },
    {
        "command": "스마트 플러그의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('SmartPlug').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#SmartPlug).switch_toggle()"
            }
        ]
    },
    {
        "command": "연기 감지기에서 연기가 감지되면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SmokeDetector').smokeDetector_smoke == 'detected':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SmokeDetector).smokeDetector_smoke == 'detected') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "토양 수분 센서의 토양 수분 측정값이 30% 이하이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SoilMoistureSensor').soilHumidityMeasurement_soilHumidity <= 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity <= 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "소리 센서에서 소리가 감지되면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SoundSensor').soundSensor_sound == 'detected':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SoundSensor).soundSensor_sound == 'detected') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "소리 감지 레벨이 70dB 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('SoundSensor').soundPressureLevel_soundPressureLevel >= 70:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#SoundSensor).soundPressureLevel_soundPressureLevel >= 70) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스피커의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Speaker').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Speaker).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스피커가 재생 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Speaker').mediaPlayback_playbackStatus == 'playing':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Speaker).mediaPlayback_playbackStatus == 'playing') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스피커를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).switch_off()"
            }
        ]
    },
    {
        "command": "스피커를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).switch_on()"
            }
        ]
    },
    {
        "command": "스피커의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).switch_toggle()"
            }
        ]
    },
    {
        "command": "스피커의 재생을 빨리 감기 해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_fastForward()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_fastForward()"
            }
        ]
    },
    {
        "command": "스피커의 재생을 일시 정지해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_pause()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_pause()"
            }
        ]
    },
    {
        "command": "스피커의 재생을 되감아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_rewind()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_rewind()"
            }
        ]
    },
    {
        "command": "스피커의 재생을 멈춰줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_stop()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_stop()"
            }
        ]
    },
    {
        "command": "스피커에서 music.mp3를 재생해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_play('music.mp3')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_play('music.mp3')"
            }
        ]
    },
    {
        "command": "스피커에서 '지금은 테스트 중입니다.'를 말해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Speaker').mediaPlayback_speak('지금은 테스트 중입니다.')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Speaker).mediaPlayback_speak('지금은 테스트 중입니다.')"
            }
        ]
    },
    {
        "command": "녹음기의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Recorder').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Recorder).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "녹음기가 녹음 중이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Recorder').audioRecord_recordStatus == 'recording':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Recorder).audioRecord_recordStatus == 'recording') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "녹음기를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Recorder').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Recorder).switch_off()"
            }
        ]
    },
    {
        "command": "녹음기를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Recorder').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Recorder).switch_on()"
            }
        ]
    },
    {
        "command": "녹음기의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Recorder').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Recorder).switch_toggle()"
            }
        ]
    },
    {
        "command": "녹음기로 10초 동안 녹음해서 test.wav로 저장해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Recorder').audioRecord_record('test.wav', 10)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Recorder).audioRecord_record('test.wav', 10)"
            }
        ]
    },
    {
        "command": "스위치의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Switch').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Switch).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "스위치를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Switch').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Switch).switch_off()"
            }
        ]
    },
    {
        "command": "스위치를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Switch').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Switch).switch_on()"
            }
        ]
    },
    {
        "command": "스위치의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Switch').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Switch).switch_toggle()"
            }
        ]
    },
    {
        "command": "TV의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Television').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Television).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "현재 TV 채널 이름이 '9시 뉴스'이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Television').tvChannel_tvChannelName == '9시 뉴스':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Television).tvChannel_tvChannelName == '9시 뉴스') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "TV의 볼륨이 50 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Television').audioVolume_volume >= 50:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Television).audioVolume_volume >= 50) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "TV가 음소거 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Television').audioMute_muteStatus == 'muted':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Television).audioMute_muteStatus == 'muted') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "TV를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).switch_off()"
            }
        ]
    },
    {
        "command": "TV를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).switch_on()"
            }
        ]
    },
    {
        "command": "TV의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).switch_toggle()"
            }
        ]
    },
    {
        "command": "TV 채널을 하나 내려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').tvChannel_channelDown()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).tvChannel_channelDown()"
            }
        ]
    },
    {
        "command": "TV 채널을 하나 올려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').tvChannel_channelUp()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).tvChannel_channelUp()"
            }
        ]
    },
    {
        "command": "TV 채널을 7번으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').tvChannel_setTvChannel(7)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).tvChannel_setTvChannel(7)"
            }
        ]
    },
    {
        "command": "TV 채널 이름을 '뉴스'로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').tvChannel_setTvChannelName('뉴스')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).tvChannel_setTvChannelName('뉴스')"
            }
        ]
    },
    {
        "command": "TV의 볼륨을 30으로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioVolume_setVolume(30)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioVolume_setVolume(30)"
            }
        ]
    },
    {
        "command": "TV의 볼륨을 낮춰줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioVolume_volumeDown()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioVolume_volumeDown()"
            }
        ]
    },
    {
        "command": "TV의 볼륨을 높여줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioVolume_volumeUp()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioVolume_volumeUp()"
            }
        ]
    },
    {
        "command": "TV를 음소거해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioMute_mute()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioMute_mute()"
            }
        ]
    },
    {
        "command": "TV의 음소거 상태를 해제해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioMute_unmute()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioMute_unmute()"
            }
        ]
    },
    {
        "command": "TV의 음소거 상태를 음소거로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Television').audioMute_setMute('muted')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Television).audioMute_setMute('muted')"
            }
        ]
    },
    {
        "command": "현재 온도가 25도 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('TemperatureSensor').temperatureMeasurement_temperature >= 25:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#TemperatureSensor).temperatureMeasurement_temperature >= 25) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "밸브가 열린 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Valve').valve_valve == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Valve).valve_valve == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "밸브를 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Valve').valve_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Valve).valve_close()"
            }
        ]
    },
    {
        "command": "밸브를 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Valve').valve_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Valve).valve_open()"
            }
        ]
    },
    {
        "command": "습도가 80% 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_humidityWeather >= 80:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_humidityWeather >= 80) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "미세먼지 농도가 100 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_pm10Weather >= 100:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_pm10Weather >= 100) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "초미세먼지 농도가 50 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_pm25Weather >= 50:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_pm25Weather >= 50) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "기압이 1020hPa 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_pressureWeather >= 1020:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_pressureWeather >= 1020) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "온도가 30도 이상이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_temperatureWeather >= 30:
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_temperatureWeather >= 30) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "현재 날씨가 비가 오고 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('WeatherProvider').weatherProvider_weather == 'rain':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#WeatherProvider).weatherProvider_weather == 'rain') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "위도 37.5665, 경도 126.9780의 현재 날씨 정보를 가져와줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        weatherInfo=Tags('WeatherProvider').weatherProvider_getWeatherInfo(37.5665, 126.9780)
Tags('Speaker').mediaPlayback_speak(weatherInfo)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
weatherInfo = (#WeatherProvider).weatherProvider_getWeatherInfo(37.5665, 126.978)"
            }
        ]
    },
    {
        "command": "창문이 열린 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Window').windowControl_window == 'open':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Window).windowControl_window == 'open') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "창문을 닫아줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Window').windowControl_close()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Window).windowControl_close()"
            }
        ]
    },
    {
        "command": "창문을 열어줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Window').windowControl_open()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Window).windowControl_open()"
            }
        ]
    },
    {
        "command": "낙상 감지 센서에서 낙상이 감지되면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('FallDetector').fallDetection_fall == 'fall':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#FallDetector).fallDetection_fall == 'fall') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "존재 감지 센서가 감지 상태이면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('OccupancySensor').presenceSensor_presence == 'present':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#OccupancySensor).presenceSensor_presence == 'present') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "릴레이의 전원이 켜져 있으면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Relay').switch_switch == 'on':
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Relay).switch_switch == 'on') {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "릴레이를 꺼줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Relay').switch_off()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Relay).switch_off()"
            }
        ]
    },
    {
        "command": "릴레이를 켜줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Relay').switch_on()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Relay).switch_on()"
            }
        ]
    },
    {
        "command": "릴레이의 전원을 토글해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Relay').switch_toggle()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Relay).switch_toggle()"
            }
        ]
    },
    {
        "command": "60초 길이의 테스트 타이머라는 타이머를 추가해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Timer').timer_add('테스트 타이머', 60)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Timer).timer_add('테스트 타이머', 60)"
            }
        ]
    },
    {
        "command": "테스트 타이머라는 이름의 타이머가 존재하면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Timer').timer_isExist('테스트 타이머'):
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Timer).timer_isExist('테스트 타이머')) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "테스트 타이머라는 이름의 타이머가 하면 알람의 사이렌을 울려줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        if Tags('Timer').timer_isSet('테스트 타이머'):
             Tags('Alarm').alarm_siren()
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
if ((#Timer).timer_isSet('테스트 타이머')) {
    (#Alarm).alarm_siren()
}"
            }
        ]
    },
    {
        "command": "테스트 타이머라는 이름의 타이머를 리셋해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Timer').timer_reset('테스트 타이머')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Timer).timer_reset('테스트 타이머')"
            }
        ]
    },
    {
        "command": "테스트 타이머라는 이름의 타이머를 120초로 설정해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Timer').timer_set('테스트 타이머', 120)
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Timer).timer_set('테스트 타이머', 120)"
            }
        ]
    },
    {
        "command": "테스트 타이머라는 이름의 타이머를 시작해줘.",
        "python": "```python
class Scenario1:
    def __init__(self):
        self.cron = \"\"
        self.period = -1

    def run(self):
        Tags('Timer').timer_start('테스트 타이머')
```",
        "code": [
            {
                "name": "Scenario1",
                "cron": "",
                "code": "period := -1
(#Timer).timer_start('테스트 타이머')"
            }
        ]
    }
]
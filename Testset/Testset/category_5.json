[
  {
    "command": "토양 습도가 30% 미만이면 5초 후 급수기를 작동해 줘.",
    "python": "```python\nclass Scenario1:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"SoilMoistureSensor\").soilHumidityMeasurement_soilHumidity < 30.0:\n            Tags(\"Clock\").clock_delay(0,0,5)\n            Tags(\"Irrigator\").irrigatorOperatingState_startWatering()\n```",
    "code": [
      {
        "name": "Scenario1",
        "cron": "",
        "period": -1,
        "code": "if ((#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity < 30.0) {\n    (#Clock).clock_delay(0, 0, 5)\n    (#Irrigator).irrigatorOperatingState_startWatering()\n}"
      }
    ]
  },
  {
    "command": "창문이 열려 있고 온도가 35도 이상이면 10초 대기 후 블라인드를 내려 줘.",
    "python": "```python\nclass Scenario2:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"Window\").windowControl_window == \"open\" and Tags(\"TemperatureSensor\").temperatureMeasurement_temperature >= 35.0:\n            Tags(\"Clock\").clock_delay(0,0,10)\n            Tags(\"Blind\").blind_close()\n```",
    "code": [
      {
        "name": "Scenario2",
        "cron": "",
        "period": -1,
        "code": "if (((#Window).windowControl_window == 'open') and ((#TemperatureSensor).temperatureMeasurement_temperature >= 35.0)) {\n    (#Clock).clock_delay(0, 0, 10)\n    (#Blind).blind_close()\n}"
      }
    ]
  },
  {
    "command": "습도가 80% 이상이면 3초 뒤 제습기를 켜고, 7초 더 지난 후 창문을 닫아 줘.",
    "python": "```python\nclass Scenario3:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"HumiditySensor\").relativeHumidityMeasurement_humidity >= 80.0:\n            Tags(\"Clock\").clock_delay(0,0,3)\n            Tags(\"Dehumidifier\").switch_on()\n            Tags(\"Clock\").clock_delay(0,0,7)\n            Tags(\"Window\").windowControl_close()\n```",
    "code": [
      {
        "name": "Scenario3",
        "cron": "",
        "period": -1,
        "code": "if ((#HumiditySensor).relativeHumidityMeasurement_humidity >= 80.0) {\n    (#Clock).clock_delay(0, 0, 3)\n    (#Dehumidifier).switch_on()\n    (#Clock).clock_delay(0, 0, 7)\n    (#Window).windowControl_close()\n}"
      }
    ]
  },
  {
    "command": "빛의 세기가 100룩스 이하면 5초 대기 후 LED 조명을 켜 줘.",
    "python": "```python\nclass Scenario4:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"LightSensor\").lightLevel_light <= 100.0:\n            Tags(\"Clock\").clock_delay(0,0,5)\n            Tags(\"Light\").switch_on()\n```",
    "code": [
      {
        "name": "Scenario4",
        "cron": "",
        "period": -1,
        "code": "if ((#LightSensor).lightLevel_light <= 100.0) {\n    (#Clock).clock_delay(0, 0, 5)\n    (#Light).switch_on()\n}"
      }
    ]
  },
  {
    "command": "급수기를 작동 후 10초 기다렸다가 환풍기를 켜 줘.",
    "python": "```python\nclass Scenario5:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        Tags(\"Irrigator\").irrigatorOperatingState_startWatering()\n        Tags(\"Clock\").clock_delay(0,0,10)\n        Tags(\"Fan\").switch_on()\n```",
    "code": [
      {
        "name": "Scenario5",
        "cron": "",
        "period": -1,
        "code": "(#Irrigator).irrigatorOperatingState_startWatering()\n(#Clock).clock_delay(0, 0, 10)\n(#Fan).switch_on()"
      }
    ]
  },
  {
    "command": "창문이 열려 있으면 5초 후 커튼을 닫고, 10초 더 지난 뒤 블라인드를 닫아 줘.",
    "python": "```python\nclass Scenario6:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"Window\").windowControl_window == \"open\":\n            Tags(\"Clock\").clock_delay(0,0,5)\n            Tags(\"Curtain\").curtain_close()\n            Tags(\"Clock\").clock_delay(0,0,10)\n            Tags(\"Blind\").blind_close()\n```",
    "code": [
      {
        "name": "Scenario6",
        "cron": "",
        "period": -1,
        "code": "if ((#Window).windowControl_window == 'open') {\n    (#Clock).clock_delay(0, 0, 5)\n    (#Curtain).curtain_close()\n    (#Clock).clock_delay(0, 0, 10)\n    (#Blind).blind_close()\n}"
      }
    ]
  },
  {
    "command": "조명이 켜져 있으면 3초 대기 후 조명을 껐다가 3초 뒤 다시 켜 줘.",
    "python": "```python\nclass Scenario7:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"Light\").switch_switch == \"on\":\n            Tags(\"Clock\").clock_delay(0,0,3)\n            Tags(\"Light\").switch_off()\n            Tags(\"Clock\").clock_delay(0,0,3)\n            Tags(\"Light\").switch_on()\n```",
    "code": [
      {
        "name": "Scenario7",
        "cron": "",
        "period": -1,
        "code": "if ((#Light).switch_switch == 'on') {\n    (#Clock).clock_delay(0, 0, 3)\n    (#Light).switch_off()\n    (#Clock).clock_delay(0, 0, 3)\n    (#Light).switch_on()\n}"
      }
    ]
  },
  {
    "command": "7초 후에 조명을 끄고 5초 뒤 다시 켜 줘.",
    "python": "```python\nclass Scenario8:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        Tags(\"Clock\").clock_delay(0,0,7)\n        Tags(\"Light\").switch_off()\n        Tags(\"Clock\").clock_delay(0,0,5)\n        Tags(\"Light\").switch_on()\n```",
    "code": [
      {
        "name": "Scenario8",
        "cron": "",
        "period": -1,
        "code": "(#Clock).clock_delay(0, 0, 7)\n(#Light).switch_off()\n(#Clock).clock_delay(0, 0, 5)\n(#Light).switch_on()"
      }
    ]
  },
  {
    "command": "문이 닫혀 있는데 5초가 지나도 창문이 열려 있지 않으면 블라인드를 열어 줘.",
    "python": "```python\nclass Scenario9:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"DoorLock\").doorControl_door == \"closed\":\n            Tags(\"Clock\").clock_delay(0,0,5)\n            if Tags(\"Window\").windowControl_window != \"open\":\n                Tags(\"Blind\").blind_open()\n```",
    "code": [
      {
        "name": "Scenario9",
        "cron": "",
        "period": -1,
        "code": "if ((#DoorLock).doorControl_door == 'closed') {\n    (#Clock).clock_delay(0, 0, 5)\n    if ((#Window).windowControl_window != 'open') {\n        (#Blind).blind_open()\n    }\n}"
      }
    ]
  },
  {
    "command": "커튼이 열린 상태라면 2초 뒤 조명을 50으로 낮추고, 다시 4초 기다려서 꺼 줘.",
    "python": "```python\nclass Scenario10:\n    def __init__(self):\n        self.cron = \"\"\n        self.period = -1\n\n    def run(self):\n        if Tags(\"Curtain\").curtain_curtain == \"open\":\n            Tags(\"Clock\").clock_delay(0,0,2)\n            Tags(\"Light\").switchLevel_setLevel(50, 0)\n            Tags(\"Clock\").clock_delay(0,0,4)\n            Tags(\"Light\").switch_off()\n```",
    "code": [
      {
        "name": "Scenario10",
        "cron": "",
        "period": -1,
        "code": "if ((#Curtain).curtain_curtain == 'open') {\n    (#Clock).clock_delay(0, 0, 2)\n    (#Light).switchLevel_setLevel(50, 0)\n    (#Clock).clock_delay(0, 0, 4)\n    (#Light).switch_off()\n}"
      }
    ]
  }
]
- command: "실시간으로 확인해서 토양 습도가 25% 이하로 떨어질 때마다 급수기를 켜고 '급수 시작'이라고 스피커로 출력해줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      prev_soil := (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity

      current_soil = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity
      if ((current_soil <= 25.0) and (prev_soil > 25.0)) {
        (#Irrigator).switch_on()
        (#Speaker).mediaPlayback_speak('급수 시작')
      }
      prev_soil = current_soil
- command: "1초마다 상태를 확인해서 온도가 35도를 초과할 때마다 환풍기를 켜 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      prev_temp := (#TemperatureSensor).temperatureMeasurement_temperature

      current_temp = (#TemperatureSensor).temperatureMeasurement_temperature
      if ((current_temp > 35.0) and (prev_temp <= 35.0)) {
        (#Fan).switch_on()
      }
      prev_temp = current_temp
- command: "3초마다 일조량을 확인해서 200룩스 이하로 떨어지는 순간 조명을 켜 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 3000
    code: |-
      prev_light := (#LightSensor).lightLevel_light

      current_light = (#LightSensor).lightLevel_light
      if ((current_light <= 200.0) and (prev_light > 200.0)) {
        (#Light).switch_on()
      }
      prev_light = current_light
- command: "문이 열릴 때마다 알람의 사이렌을 울리고 조명을 켜 줘. 실시간으로 확인해서 상태를 계속 검사해서 반응해 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      prev_contact := (#ContactSensor).contactSensor_contact

      current_contact = (#ContactSensor).contactSensor_contact
      if ((current_contact == 'open') and (prev_contact != 'open')) {
        (#Alarm).alarm_siren()
        (#Light).switch_on()
      }
      prev_contact = current_contact
- command: "현재 날씨에서 비가 감지될 때마다 관개 장치를 꺼 주고 '비가 감지되었습니다'라고 스피커로 출력해줘. 감지는 1분에 한번씩만 하자."
  code:
  - name: "Scenario1"
    cron: ""
    period: 60000
    code: |-
      prev_weather := (#WeatherProvider).weatherProvider_weather

      current_weather = (#WeatherProvider).weatherProvider_weather
      if ((current_weather == 'rain') and (prev_weather != 'rain')) {
        (#Irrigator).switch_off()
        (#Speaker).mediaPlayback_speak('비가 감지되었습니다')
      }
      prev_weather = current_weather
- command: "실시간으로 확인해서 거실 창문이 열릴 때마다 블라인드를 닫아 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      prev_window := (#Window).windowControl_window

      current_window = (#Window).windowControl_window
      if ((current_window == 'open') and (prev_window != 'open')) {
        (#Blind).blind_close()
      }
      prev_window = current_window
- command: "조명이 켜질 때마다 커튼을 동시에 열어 줘. 실시간으로 조명을 체크해야 해."
  code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      prev_light := (#Light).switch_switch

      current_light = (#Light).switch_switch
      if ((current_light == 'on') and (prev_light != 'on')) {
        (#Curtain).curtain_open()
      }
      prev_light = current_light
- command: "2초마다 상태를 확인해서 TV가 켜질 때마다 스피커도 켜 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 2000
    code: |-
      prev_tv := (#Television).switch_switch

      current_tv = (#Television).switch_switch
      if ((current_tv == 'on') and (prev_tv != 'on')) {
        (#Speaker).switch_on()
      }
      prev_tv = current_tv
- command: "현관 문이 열릴 때마다 즉시 알람의 경광등을 켜 줘. 확인은 실시간으로 하구."
  code:
  - name: "Scenario1"
    cron: ""
    period: 100
    code: |-
      prev_door := (#DoorLock).doorControl_door

      current_door = (#DoorLock).doorControl_door
      if ((current_door == 'open') and (prev_door != 'open')) {
        (#Alarm).alarm_strobe()
      }
      prev_door = current_door
- command: "1초마다 공기청정기 상태를 확인해서 꺼지는 순간 자동 모드로 다시 켜 줘."
  code:
  - name: "Scenario1"
    cron: ""
    period: 1000
    code: |-
      prev_purifier := (#AirPurifier).switch_switch
      
      current_purifier = (#AirPurifier).switch_switch
      if ((current_purifier == 'off') and (prev_purifier != 'off')) {
        (#AirPurifier).switch_on()
        (#AirPurifier).airPurifierFanMode_setAirPurifierFanMode('auto')
      }
      prev_purifier = current_purifier

- command: Every morning at 7 am, if the irrigation is off and the windows are closed, turn on the irrigation and open the windows. Then, when the irrigation turns on, close the blinds.
  code:
  - name: Scenario1
    cron: 0 7 * * *
    period: 100
    code: |-
      name = "Scenario1"
      cron = "0 7 * * *"
      period = -1
      if ((#Irrigator).switch_switch == 'off' and (#Window).windowControl_window == 'closed') {
        (#Irrigator).switch_on()
        (#Window).windowControl_open()
        wait until((#Irrigator).switch_switch == 'on')
        (#Blind).blind_close()
      }
  devices:
  - Blind
  - Window
  - Irrigator
- command: Check in real time and turn on the irrigation every 5 seconds if the soil moisture sensor reads 20 percent or less, and turn off the irrigation if it reads 60 percent or more.
  code:
  - name: Scenario1
    cron: ''
    period: 5000
    code: |-
      soil_humidity = (#SoilMoistureSensor).soilHumidityMeasurement_soilHumidity
      if (soil_humidity <= 20.0) {
        (#Irrigator).switch_on()
      } else if (soil_humidity >= 60.0) {
        (#Irrigator).switch_off()
      }
  devices:
  - Irrigator
  - SoilMoistureSensor
- command: Check in real-time to turn on a fan if the temperature is above 28 degrees, or a dehumidifier if the humidity is above 80%.
  code:
  - name: Scenario1
    cron: ''
    period: 100
    code: |-
      temperature = (#TemperatureSensor).temperatureMeasurement_temperature
      humidity = (#HumiditySensor).relativeHumidityMeasurement_humidity
      if (temperature >= 28.0) {
        (#Fan).switch_on()
      }
      if (humidity >= 80.0) {
        (#Dehumidifier).switch_on()
      }
  devices:
  - TemperatureSensor
  - Dehumidifier
  - Fan
  - HumiditySensor
- command: Check in real-time to close the blinds whenever the lights are on and open them when they're off.
  code:
  - name: Scenario1
    cron: ''
    period: 100
    code: |-
      light_status = (#Light).switch_switch
      if (light_status == 'on') {
        (#Blind).blind_close()
      } else if (light_status == 'off') {
        (#Blind).blind_open()
      }
  devices:
  - Light
  - Blind
- command: On weekends, every 5 seconds, turn the pump on if it's off, off if it's on, and set the fan speed to 10.
  code:
  - name: Scenario1
    cron: 0 0 * * 6,7
    period: 5000
    code: |-
      weekday = (#Clock).clock_weekday
      if ((weekday != 'saturday') and (weekday != 'sunday')) {
        break
      }
      (#Fan).fanControl_setFanSpeed(10)
      (#Pump).switch_toggle()
  devices:
  - Clock
  - Fan
  - Pump
- command: Check in real-time to turn on lights and increase fan speed by 10 whenever motion is detected.
  code:
  - name: Scenario1
    cron: ''
    period: 100
    code: |-
      motion = (#MotionSensor).motionSensor_motion
      if (motion == 'active') {
        (#Light).switch_on()
        current_speed = (#Fan).fanControl_fanSpeed
        new_speed = current_speed + 10
        (#Fan).fanControl_setFanSpeed(new_speed)
      }
  devices:
  - Light
  - Fan
  - MotionSensor
- command: Check in real-time to close the blinds if the window is open, or open the curtains if the window is closed. It also checks in real time and immediately sounds the alarm's siren if it's not already sounding.
  code:
  - name: Scenario1
    cron: ''
    period: 100
    code: |-
      window_status = (#Window).windowControl_window
      if (window_status == 'open') {
        (#Blind).blind_close()
      } else if (window_status == 'closed') {
        (#Curtain).curtain_open()
      }
      alarm_status = (#Alarm).alarm_alarm
      if ((alarm_status != 'siren') and (alarm_status != 'both')) {
        (#Alarm).alarm_siren()
      }
  devices:
  - Curtain
  - Blind
  - Window
  - Alarm
- command: Every Friday at 6pm, if the lights are on, turn them down to 30, and if the TV is off, turn it on. If the fan is off, turn it on.
  code:
  - name: Scenario1
    cron: 0 18 * * 5
    period: 0
    code: |-
      if ((#Light).switch_switch == 'on') {
        (#Light).switchLevel_setLevel(30, 0)
      }
      if ((#Television).switch_switch == 'off') {
        (#Television).switch_on()
      }
      if ((#Fan).switch_switch == 'off') {
        (#Fan).switch_on()
      }
  devices:
  - Light
  - Fan
  - Television
- command: Open, close, and repeat the blinds every 5 seconds from the time the window is closed.
  code:
  - name: Scenario1
    cron: ''
    period: 5000
    code: |-
      triggered := False
      state := 0
      if (triggered == False) {
        wait until((#Window).windowControl_window == 'closed')
        triggered = True
      }
      if (triggered == True) {
        if (state == 0) {
            (#Blind).blind_open()
            state = 1
        } else if (state == 1) {
            (#Blind).blind_close()
            state = 0
        }
      }
  devices:
  - Blind
  - Window
- command: Every morning at 8am, if the speaker is off, turn it on and say 'This is the weather today'. Then, if the lights are off, turn them on and open the blinds.
  code:
  - name: Scenario1
    cron: 0 8 * * *
    period: 0
    code: |-
      if ((#Speaker).switch_switch == 'off') {
        (#Speaker).switch_on()
        (#Speaker).mediaPlayback_speak('This is the weather today')
        if ((#Light).switch_switch == 'off') {
          (#Light).switch_on()
          (#Blind).blind_open()
        }
      }
  devices:
  - Light
  - Blind
  - Speaker
